{
	"id": "e53ac7504403be0444b3932632b24692",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.9",
	"solcLongVersion": "0.8.9+commit.e5eed63a",
	"input": {
		"language": "Solidity",
		"sources": {
			"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC1155/ERC1155.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC1155.sol\";\nimport \"./IERC1155Receiver.sol\";\nimport \"./extensions/IERC1155MetadataURI.sol\";\nimport \"../../utils/Address.sol\";\nimport \"../../utils/Context.sol\";\nimport \"../../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Implementation of the basic standard multi-token.\n * See https://eips.ethereum.org/EIPS/eip-1155\n * Originally based on code by Enjin: https://github.com/enjin/erc-1155\n *\n * _Available since v3.1._\n */\ncontract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {\n    using Address for address;\n\n    // Mapping from token ID to account balances\n    mapping(uint256 => mapping(address => uint256)) private _balances;\n\n    // Mapping from account to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    // Used as the URI for all token types by relying on ID substitution, e.g. https://token-cdn-domain/{id}.json\n    string private _uri;\n\n    /**\n     * @dev See {_setURI}.\n     */\n    constructor(string memory uri_) {\n        _setURI(uri_);\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC1155).interfaceId ||\n            interfaceId == type(IERC1155MetadataURI).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC1155MetadataURI-uri}.\n     *\n     * This implementation returns the same URI for *all* token types. It relies\n     * on the token type ID substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n     *\n     * Clients calling this function must replace the `\\{id\\}` substring with the\n     * actual token type ID.\n     */\n    function uri(uint256) public view virtual override returns (string memory) {\n        return _uri;\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {\n        require(account != address(0), \"ERC1155: address zero is not a valid owner\");\n        return _balances[id][account];\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOfBatch}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(address[] memory accounts, uint256[] memory ids)\n        public\n        view\n        virtual\n        override\n        returns (uint256[] memory)\n    {\n        require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\");\n\n        uint256[] memory batchBalances = new uint256[](accounts.length);\n\n        for (uint256 i = 0; i < accounts.length; ++i) {\n            batchBalances[i] = balanceOf(accounts[i], ids[i]);\n        }\n\n        return batchBalances;\n    }\n\n    /**\n     * @dev See {IERC1155-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC1155-isApprovedForAll}.\n     */\n    function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[account][operator];\n    }\n\n    /**\n     * @dev See {IERC1155-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: caller is not token owner or approved\"\n        );\n        _safeTransferFrom(from, to, id, amount, data);\n    }\n\n    /**\n     * @dev See {IERC1155-safeBatchTransferFrom}.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: caller is not token owner or approved\"\n        );\n        _safeBatchTransferFrom(from, to, ids, amounts, data);\n    }\n\n    /**\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) internal virtual {\n        require(to != address(0), \"ERC1155: transfer to the zero address\");\n\n        address operator = _msgSender();\n        uint256[] memory ids = _asSingletonArray(id);\n        uint256[] memory amounts = _asSingletonArray(amount);\n\n        _beforeTokenTransfer(operator, from, to, ids, amounts, data);\n\n        uint256 fromBalance = _balances[id][from];\n        require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\");\n        unchecked {\n            _balances[id][from] = fromBalance - amount;\n        }\n        _balances[id][to] += amount;\n\n        emit TransferSingle(operator, from, to, id, amount);\n\n        _afterTokenTransfer(operator, from, to, ids, amounts, data);\n\n        _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function _safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\n        require(to != address(0), \"ERC1155: transfer to the zero address\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, from, to, ids, amounts, data);\n\n        for (uint256 i = 0; i < ids.length; ++i) {\n            uint256 id = ids[i];\n            uint256 amount = amounts[i];\n\n            uint256 fromBalance = _balances[id][from];\n            require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\");\n            unchecked {\n                _balances[id][from] = fromBalance - amount;\n            }\n            _balances[id][to] += amount;\n        }\n\n        emit TransferBatch(operator, from, to, ids, amounts);\n\n        _afterTokenTransfer(operator, from, to, ids, amounts, data);\n\n        _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data);\n    }\n\n    /**\n     * @dev Sets a new URI for all token types, by relying on the token type ID\n     * substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n     *\n     * By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n     * URI or any of the amounts in the JSON file at said URI will be replaced by\n     * clients with the token type ID.\n     *\n     * For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n     * interpreted by clients as\n     * `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n     * for token type ID 0x4cce0.\n     *\n     * See {uri}.\n     *\n     * Because these URIs cannot be meaningfully represented by the {URI} event,\n     * this function emits no events.\n     */\n    function _setURI(string memory newuri) internal virtual {\n        _uri = newuri;\n    }\n\n    /**\n     * @dev Creates `amount` tokens of token type `id`, and assigns them to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _mint(\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) internal virtual {\n        require(to != address(0), \"ERC1155: mint to the zero address\");\n\n        address operator = _msgSender();\n        uint256[] memory ids = _asSingletonArray(id);\n        uint256[] memory amounts = _asSingletonArray(amount);\n\n        _beforeTokenTransfer(operator, address(0), to, ids, amounts, data);\n\n        _balances[id][to] += amount;\n        emit TransferSingle(operator, address(0), to, id, amount);\n\n        _afterTokenTransfer(operator, address(0), to, ids, amounts, data);\n\n        _doSafeTransferAcceptanceCheck(operator, address(0), to, id, amount, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function _mintBatch(\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {\n        require(to != address(0), \"ERC1155: mint to the zero address\");\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, address(0), to, ids, amounts, data);\n\n        for (uint256 i = 0; i < ids.length; i++) {\n            _balances[ids[i]][to] += amounts[i];\n        }\n\n        emit TransferBatch(operator, address(0), to, ids, amounts);\n\n        _afterTokenTransfer(operator, address(0), to, ids, amounts, data);\n\n        _doSafeBatchTransferAcceptanceCheck(operator, address(0), to, ids, amounts, data);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens of token type `id` from `from`\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `from` must have at least `amount` tokens of token type `id`.\n     */\n    function _burn(\n        address from,\n        uint256 id,\n        uint256 amount\n    ) internal virtual {\n        require(from != address(0), \"ERC1155: burn from the zero address\");\n\n        address operator = _msgSender();\n        uint256[] memory ids = _asSingletonArray(id);\n        uint256[] memory amounts = _asSingletonArray(amount);\n\n        _beforeTokenTransfer(operator, from, address(0), ids, amounts, \"\");\n\n        uint256 fromBalance = _balances[id][from];\n        require(fromBalance >= amount, \"ERC1155: burn amount exceeds balance\");\n        unchecked {\n            _balances[id][from] = fromBalance - amount;\n        }\n\n        emit TransferSingle(operator, from, address(0), id, amount);\n\n        _afterTokenTransfer(operator, from, address(0), ids, amounts, \"\");\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     */\n    function _burnBatch(\n        address from,\n        uint256[] memory ids,\n        uint256[] memory amounts\n    ) internal virtual {\n        require(from != address(0), \"ERC1155: burn from the zero address\");\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, from, address(0), ids, amounts, \"\");\n\n        for (uint256 i = 0; i < ids.length; i++) {\n            uint256 id = ids[i];\n            uint256 amount = amounts[i];\n\n            uint256 fromBalance = _balances[id][from];\n            require(fromBalance >= amount, \"ERC1155: burn amount exceeds balance\");\n            unchecked {\n                _balances[id][from] = fromBalance - amount;\n            }\n        }\n\n        emit TransferBatch(operator, from, address(0), ids, amounts);\n\n        _afterTokenTransfer(operator, from, address(0), ids, amounts, \"\");\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(\n        address owner,\n        address operator,\n        bool approved\n    ) internal virtual {\n        require(owner != operator, \"ERC1155: setting approval status for self\");\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting\n     * and burning, as well as batched variants.\n     *\n     * The same hook is called on both single and batched variants. For single\n     * transfers, the length of the `ids` and `amounts` arrays will be 1.\n     *\n     * Calling conditions (for each `id` and `amount` pair):\n     *\n     * - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * of token type `id` will be  transferred to `to`.\n     * - When `from` is zero, `amount` tokens of token type `id` will be minted\n     * for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n     * will be burned.\n     * - `from` and `to` are never both zero.\n     * - `ids` and `amounts` have the same, non-zero length.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any token transfer. This includes minting\n     * and burning, as well as batched variants.\n     *\n     * The same hook is called on both single and batched variants. For single\n     * transfers, the length of the `id` and `amount` arrays will be 1.\n     *\n     * Calling conditions (for each `id` and `amount` pair):\n     *\n     * - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * of token type `id` will be  transferred to `to`.\n     * - When `from` is zero, `amount` tokens of token type `id` will be minted\n     * for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n     * will be burned.\n     * - `from` and `to` are never both zero.\n     * - `ids` and `amounts` have the same, non-zero length.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {}\n\n    function _doSafeTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) private {\n        if (to.isContract()) {\n            try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {\n                if (response != IERC1155Receiver.onERC1155Received.selector) {\n                    revert(\"ERC1155: ERC1155Receiver rejected tokens\");\n                }\n            } catch Error(string memory reason) {\n                revert(reason);\n            } catch {\n                revert(\"ERC1155: transfer to non-ERC1155Receiver implementer\");\n            }\n        }\n    }\n\n    function _doSafeBatchTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) private {\n        if (to.isContract()) {\n            try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (\n                bytes4 response\n            ) {\n                if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {\n                    revert(\"ERC1155: ERC1155Receiver rejected tokens\");\n                }\n            } catch Error(string memory reason) {\n                revert(reason);\n            } catch {\n                revert(\"ERC1155: transfer to non-ERC1155Receiver implementer\");\n            }\n        }\n    }\n\n    function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {\n        uint256[] memory array = new uint256[](1);\n        array[0] = element;\n\n        return array;\n    }\n}\n"
			},
			"localhost/.deps/npm/@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"localhost/.deps/npm/@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"localhost/.deps/npm/@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"
			},
			"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/extensions/IERC1155MetadataURI.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC1155.sol\";\n\n/**\n * @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n * in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\n *\n * _Available since v3.1._\n */\ninterface IERC1155MetadataURI is IERC1155 {\n    /**\n     * @dev Returns the URI for token type `id`.\n     *\n     * If the `\\{id\\}` substring is present in the URI, it must be replaced by\n     * clients with the actual token type ID.\n     */\n    function uri(uint256 id) external view returns (string memory);\n}\n"
			},
			"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC1155/IERC1155Receiver.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev _Available since v3.1._\n */\ninterface IERC1155Receiver is IERC165 {\n    /**\n     * @dev Handles the receipt of a single ERC1155 token type. This function is\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\n     *\n     * NOTE: To accept the transfer, this must return\n     * `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n     * (i.e. 0xf23a6e61, or its own function selector).\n     *\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param id The ID of the token being transferred\n     * @param value The amount of tokens being transferred\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed\n     */\n    function onERC1155Received(\n        address operator,\n        address from,\n        uint256 id,\n        uint256 value,\n        bytes calldata data\n    ) external returns (bytes4);\n\n    /**\n     * @dev Handles the receipt of a multiple ERC1155 token types. This function\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\n     * been updated.\n     *\n     * NOTE: To accept the transfer(s), this must return\n     * `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n     * (i.e. 0xbc197c81, or its own function selector).\n     *\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed\n     */\n    function onERC1155BatchReceived(\n        address operator,\n        address from,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC1155/IERC1155.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\n *\n * _Available since v3.1._\n */\ninterface IERC1155 is IERC165 {\n    /**\n     * @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\n     */\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\n\n    /**\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n     * transfers.\n     */\n    event TransferBatch(\n        address indexed operator,\n        address indexed from,\n        address indexed to,\n        uint256[] ids,\n        uint256[] values\n    );\n\n    /**\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n     * `approved`.\n     */\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\n\n    /**\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n     *\n     * If an {URI} event was emitted for `id`, the standard\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n     * returned by {IERC1155MetadataURI-uri}.\n     */\n    event URI(string value, uint256 indexed id);\n\n    /**\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function balanceOf(address account, uint256 id) external view returns (uint256);\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(address[] calldata accounts, uint256[] calldata ids)\n        external\n        view\n        returns (uint256[] memory);\n\n    /**\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the caller.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address account, address operator) external view returns (bool);\n\n    /**\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata amounts,\n        bytes calldata data\n    ) external;\n}\n"
			},
			"localhost/.deps/npm/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol": {
				"ERC1155": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "uri_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155 _Available since v3.1._",
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"constructor": {
								"details": "See {_setURI}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC1155-isApprovedForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "See {IERC1155-safeBatchTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "See {IERC1155-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC1155-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"uri(uint256)": {
								"details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":570:17259  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {... */\n  mstore(0x40, 0x80)\n    /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1107:1169  constructor(string memory uri_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1149:1162  _setURI(uri_) */\n  tag_6\n    /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1157:1161  uri_ */\n  dup2\n    /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1149:1156  _setURI */\n  shl(0x20, tag_7)\n    /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1149:1162  _setURI(uri_) */\n  0x20\n  shr\n  jump\t// in\ntag_6:\n    /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1107:1169  constructor(string memory uri_) {... */\n  pop\n    /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":570:17259  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {... */\n  jump(tag_8)\n    /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8171:8257  function _setURI(string memory newuri) internal virtual {... */\ntag_7:\n    /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8244:8250  newuri */\n  dup1\n    /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8237:8241  _uri */\n  0x02\n    /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8237:8250  _uri = newuri */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_10\n  swap3\n  swap2\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  pop\n    /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8171:8257  function _setURI(string memory newuri) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":570:17259  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {... */\ntag_11:\n  dup3\n  dup1\n  sload\n  tag_12\n  swap1\n  tag_13\n  jump\t// in\ntag_12:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_15\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_14)\ntag_15:\n  dup3\n  0x1f\n  lt\n  tag_16\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_14)\ntag_16:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_14\n  jumpi\n  swap2\n  dup3\n  add\ntag_17:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_18\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_17)\ntag_18:\ntag_14:\n  pop\n  swap1\n  pop\n  tag_19\n  swap2\n  swap1\n  tag_20\n  jump\t// in\ntag_19:\n  pop\n  swap1\n  jump\t// out\ntag_20:\ntag_21:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_22\n  jumpi\n  0x00\n  dup2\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_21)\ntag_22:\n  pop\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":7:82   */\ntag_23:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_24:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_25:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  dup1\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:451   */\ntag_26:\n    /* \"#utility.yul\":443:444   */\n  0x00\n    /* \"#utility.yul\":440:441   */\n  dup1\n    /* \"#utility.yul\":433:445   */\n  revert\n    /* \"#utility.yul\":457:574   */\ntag_27:\n    /* \"#utility.yul\":566:567   */\n  0x00\n    /* \"#utility.yul\":563:564   */\n  dup1\n    /* \"#utility.yul\":556:568   */\n  revert\n    /* \"#utility.yul\":580:682   */\ntag_28:\n    /* \"#utility.yul\":621:627   */\n  0x00\n    /* \"#utility.yul\":672:674   */\n  0x1f\n    /* \"#utility.yul\":668:675   */\n  not\n    /* \"#utility.yul\":663:665   */\n  0x1f\n    /* \"#utility.yul\":656:661   */\n  dup4\n    /* \"#utility.yul\":652:666   */\n  add\n    /* \"#utility.yul\":648:676   */\n  and\n    /* \"#utility.yul\":638:676   */\n  swap1\n  pop\n    /* \"#utility.yul\":580:682   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":688:868   */\ntag_29:\n    /* \"#utility.yul\":736:813   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":733:734   */\n  0x00\n    /* \"#utility.yul\":726:814   */\n  mstore\n    /* \"#utility.yul\":833:837   */\n  0x41\n    /* \"#utility.yul\":830:831   */\n  0x04\n    /* \"#utility.yul\":823:838   */\n  mstore\n    /* \"#utility.yul\":857:861   */\n  0x24\n    /* \"#utility.yul\":854:855   */\n  0x00\n    /* \"#utility.yul\":847:862   */\n  revert\n    /* \"#utility.yul\":874:1155   */\ntag_30:\n    /* \"#utility.yul\":957:984   */\n  tag_46\n    /* \"#utility.yul\":979:983   */\n  dup3\n    /* \"#utility.yul\":957:984   */\n  tag_28\n  jump\t// in\ntag_46:\n    /* \"#utility.yul\":949:955   */\n  dup2\n    /* \"#utility.yul\":945:985   */\n  add\n    /* \"#utility.yul\":1087:1093   */\n  dup2\n    /* \"#utility.yul\":1075:1085   */\n  dup2\n    /* \"#utility.yul\":1072:1094   */\n  lt\n    /* \"#utility.yul\":1051:1069   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1039:1049   */\n  dup3\n    /* \"#utility.yul\":1036:1070   */\n  gt\n    /* \"#utility.yul\":1033:1095   */\n  or\n    /* \"#utility.yul\":1030:1118   */\n  iszero\n  tag_47\n  jumpi\n    /* \"#utility.yul\":1098:1116   */\n  tag_48\n  tag_29\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":1030:1118   */\ntag_47:\n    /* \"#utility.yul\":1138:1148   */\n  dup1\n    /* \"#utility.yul\":1134:1136   */\n  0x40\n    /* \"#utility.yul\":1127:1149   */\n  mstore\n    /* \"#utility.yul\":917:1155   */\n  pop\n    /* \"#utility.yul\":874:1155   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1161:1290   */\ntag_31:\n    /* \"#utility.yul\":1195:1201   */\n  0x00\n    /* \"#utility.yul\":1222:1242   */\n  tag_50\n  tag_23\n  jump\t// in\ntag_50:\n    /* \"#utility.yul\":1212:1242   */\n  swap1\n  pop\n    /* \"#utility.yul\":1251:1284   */\n  tag_51\n    /* \"#utility.yul\":1279:1283   */\n  dup3\n    /* \"#utility.yul\":1271:1277   */\n  dup3\n    /* \"#utility.yul\":1251:1284   */\n  tag_30\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":1161:1290   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1296:1604   */\ntag_32:\n    /* \"#utility.yul\":1358:1362   */\n  0x00\n    /* \"#utility.yul\":1448:1466   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1440:1446   */\n  dup3\n    /* \"#utility.yul\":1437:1467   */\n  gt\n    /* \"#utility.yul\":1434:1490   */\n  iszero\n  tag_53\n  jumpi\n    /* \"#utility.yul\":1470:1488   */\n  tag_54\n  tag_29\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":1434:1490   */\ntag_53:\n    /* \"#utility.yul\":1508:1537   */\n  tag_55\n    /* \"#utility.yul\":1530:1536   */\n  dup3\n    /* \"#utility.yul\":1508:1537   */\n  tag_28\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":1500:1537   */\n  swap1\n  pop\n    /* \"#utility.yul\":1592:1596   */\n  0x20\n    /* \"#utility.yul\":1586:1590   */\n  dup2\n    /* \"#utility.yul\":1582:1597   */\n  add\n    /* \"#utility.yul\":1574:1597   */\n  swap1\n  pop\n    /* \"#utility.yul\":1296:1604   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1610:1917   */\ntag_33:\n    /* \"#utility.yul\":1678:1679   */\n  0x00\n    /* \"#utility.yul\":1688:1801   */\ntag_57:\n    /* \"#utility.yul\":1702:1708   */\n  dup4\n    /* \"#utility.yul\":1699:1700   */\n  dup2\n    /* \"#utility.yul\":1696:1709   */\n  lt\n    /* \"#utility.yul\":1688:1801   */\n  iszero\n  tag_59\n  jumpi\n    /* \"#utility.yul\":1787:1788   */\n  dup1\n    /* \"#utility.yul\":1782:1785   */\n  dup3\n    /* \"#utility.yul\":1778:1789   */\n  add\n    /* \"#utility.yul\":1772:1790   */\n  mload\n    /* \"#utility.yul\":1768:1769   */\n  dup2\n    /* \"#utility.yul\":1763:1766   */\n  dup5\n    /* \"#utility.yul\":1759:1770   */\n  add\n    /* \"#utility.yul\":1752:1791   */\n  mstore\n    /* \"#utility.yul\":1724:1726   */\n  0x20\n    /* \"#utility.yul\":1721:1722   */\n  dup2\n    /* \"#utility.yul\":1717:1727   */\n  add\n    /* \"#utility.yul\":1712:1727   */\n  swap1\n  pop\n    /* \"#utility.yul\":1688:1801   */\n  jump(tag_57)\ntag_59:\n    /* \"#utility.yul\":1819:1825   */\n  dup4\n    /* \"#utility.yul\":1816:1817   */\n  dup2\n    /* \"#utility.yul\":1813:1826   */\n  gt\n    /* \"#utility.yul\":1810:1911   */\n  iszero\n  tag_60\n  jumpi\n    /* \"#utility.yul\":1899:1900   */\n  0x00\n    /* \"#utility.yul\":1890:1896   */\n  dup5\n    /* \"#utility.yul\":1885:1888   */\n  dup5\n    /* \"#utility.yul\":1881:1897   */\n  add\n    /* \"#utility.yul\":1874:1901   */\n  mstore\n    /* \"#utility.yul\":1810:1911   */\ntag_60:\n    /* \"#utility.yul\":1659:1917   */\n  pop\n    /* \"#utility.yul\":1610:1917   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1923:2344   */\ntag_34:\n    /* \"#utility.yul\":2012:2017   */\n  0x00\n    /* \"#utility.yul\":2037:2103   */\n  tag_62\n    /* \"#utility.yul\":2053:2102   */\n  tag_63\n    /* \"#utility.yul\":2095:2101   */\n  dup5\n    /* \"#utility.yul\":2053:2102   */\n  tag_32\n  jump\t// in\ntag_63:\n    /* \"#utility.yul\":2037:2103   */\n  tag_31\n  jump\t// in\ntag_62:\n    /* \"#utility.yul\":2028:2103   */\n  swap1\n  pop\n    /* \"#utility.yul\":2126:2132   */\n  dup3\n    /* \"#utility.yul\":2119:2124   */\n  dup2\n    /* \"#utility.yul\":2112:2133   */\n  mstore\n    /* \"#utility.yul\":2164:2168   */\n  0x20\n    /* \"#utility.yul\":2157:2162   */\n  dup2\n    /* \"#utility.yul\":2153:2169   */\n  add\n    /* \"#utility.yul\":2202:2205   */\n  dup5\n    /* \"#utility.yul\":2193:2199   */\n  dup5\n    /* \"#utility.yul\":2188:2191   */\n  dup5\n    /* \"#utility.yul\":2184:2200   */\n  add\n    /* \"#utility.yul\":2181:2206   */\n  gt\n    /* \"#utility.yul\":2178:2290   */\n  iszero\n  tag_64\n  jumpi\n    /* \"#utility.yul\":2209:2288   */\n  tag_65\n  tag_27\n  jump\t// in\ntag_65:\n    /* \"#utility.yul\":2178:2290   */\ntag_64:\n    /* \"#utility.yul\":2299:2338   */\n  tag_66\n    /* \"#utility.yul\":2331:2337   */\n  dup5\n    /* \"#utility.yul\":2326:2329   */\n  dup3\n    /* \"#utility.yul\":2321:2324   */\n  dup6\n    /* \"#utility.yul\":2299:2338   */\n  tag_33\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":2018:2344   */\n  pop\n    /* \"#utility.yul\":1923:2344   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2364:2719   */\ntag_35:\n    /* \"#utility.yul\":2431:2436   */\n  0x00\n    /* \"#utility.yul\":2480:2483   */\n  dup3\n    /* \"#utility.yul\":2473:2477   */\n  0x1f\n    /* \"#utility.yul\":2465:2471   */\n  dup4\n    /* \"#utility.yul\":2461:2478   */\n  add\n    /* \"#utility.yul\":2457:2484   */\n  slt\n    /* \"#utility.yul\":2447:2569   */\n  tag_68\n  jumpi\n    /* \"#utility.yul\":2488:2567   */\n  tag_69\n  tag_26\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":2447:2569   */\ntag_68:\n    /* \"#utility.yul\":2598:2604   */\n  dup2\n    /* \"#utility.yul\":2592:2605   */\n  mload\n    /* \"#utility.yul\":2623:2713   */\n  tag_70\n    /* \"#utility.yul\":2709:2712   */\n  dup5\n    /* \"#utility.yul\":2701:2707   */\n  dup3\n    /* \"#utility.yul\":2694:2698   */\n  0x20\n    /* \"#utility.yul\":2686:2692   */\n  dup7\n    /* \"#utility.yul\":2682:2699   */\n  add\n    /* \"#utility.yul\":2623:2713   */\n  tag_34\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":2614:2713   */\n  swap2\n  pop\n    /* \"#utility.yul\":2437:2719   */\n  pop\n    /* \"#utility.yul\":2364:2719   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2725:3249   */\ntag_3:\n    /* \"#utility.yul\":2805:2811   */\n  0x00\n    /* \"#utility.yul\":2854:2856   */\n  0x20\n    /* \"#utility.yul\":2842:2851   */\n  dup3\n    /* \"#utility.yul\":2833:2840   */\n  dup5\n    /* \"#utility.yul\":2829:2852   */\n  sub\n    /* \"#utility.yul\":2825:2857   */\n  slt\n    /* \"#utility.yul\":2822:2941   */\n  iszero\n  tag_72\n  jumpi\n    /* \"#utility.yul\":2860:2939   */\n  tag_73\n  tag_24\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":2822:2941   */\ntag_72:\n    /* \"#utility.yul\":3001:3002   */\n  0x00\n    /* \"#utility.yul\":2990:2999   */\n  dup3\n    /* \"#utility.yul\":2986:3003   */\n  add\n    /* \"#utility.yul\":2980:3004   */\n  mload\n    /* \"#utility.yul\":3031:3049   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3023:3029   */\n  dup2\n    /* \"#utility.yul\":3020:3050   */\n  gt\n    /* \"#utility.yul\":3017:3134   */\n  iszero\n  tag_74\n  jumpi\n    /* \"#utility.yul\":3053:3132   */\n  tag_75\n  tag_25\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":3017:3134   */\ntag_74:\n    /* \"#utility.yul\":3158:3232   */\n  tag_76\n    /* \"#utility.yul\":3224:3231   */\n  dup5\n    /* \"#utility.yul\":3215:3221   */\n  dup3\n    /* \"#utility.yul\":3204:3213   */\n  dup6\n    /* \"#utility.yul\":3200:3222   */\n  add\n    /* \"#utility.yul\":3158:3232   */\n  tag_35\n  jump\t// in\ntag_76:\n    /* \"#utility.yul\":3148:3232   */\n  swap2\n  pop\n    /* \"#utility.yul\":2951:3242   */\n  pop\n    /* \"#utility.yul\":2725:3249   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3255:3435   */\ntag_36:\n    /* \"#utility.yul\":3303:3380   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":3300:3301   */\n  0x00\n    /* \"#utility.yul\":3293:3381   */\n  mstore\n    /* \"#utility.yul\":3400:3404   */\n  0x22\n    /* \"#utility.yul\":3397:3398   */\n  0x04\n    /* \"#utility.yul\":3390:3405   */\n  mstore\n    /* \"#utility.yul\":3424:3428   */\n  0x24\n    /* \"#utility.yul\":3421:3422   */\n  0x00\n    /* \"#utility.yul\":3414:3429   */\n  revert\n    /* \"#utility.yul\":3441:3761   */\ntag_13:\n    /* \"#utility.yul\":3485:3491   */\n  0x00\n    /* \"#utility.yul\":3522:3523   */\n  0x02\n    /* \"#utility.yul\":3516:3520   */\n  dup3\n    /* \"#utility.yul\":3512:3524   */\n  div\n    /* \"#utility.yul\":3502:3524   */\n  swap1\n  pop\n    /* \"#utility.yul\":3569:3570   */\n  0x01\n    /* \"#utility.yul\":3563:3567   */\n  dup3\n    /* \"#utility.yul\":3559:3571   */\n  and\n    /* \"#utility.yul\":3590:3608   */\n  dup1\n    /* \"#utility.yul\":3580:3661   */\n  tag_79\n  jumpi\n    /* \"#utility.yul\":3646:3650   */\n  0x7f\n    /* \"#utility.yul\":3638:3644   */\n  dup3\n    /* \"#utility.yul\":3634:3651   */\n  and\n    /* \"#utility.yul\":3624:3651   */\n  swap2\n  pop\n    /* \"#utility.yul\":3580:3661   */\ntag_79:\n    /* \"#utility.yul\":3708:3710   */\n  0x20\n    /* \"#utility.yul\":3700:3706   */\n  dup3\n    /* \"#utility.yul\":3697:3711   */\n  lt\n    /* \"#utility.yul\":3677:3695   */\n  dup2\n    /* \"#utility.yul\":3674:3712   */\n  eq\n    /* \"#utility.yul\":3671:3755   */\n  iszero\n  tag_80\n  jumpi\n    /* \"#utility.yul\":3727:3745   */\n  tag_81\n  tag_36\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":3671:3755   */\ntag_80:\n    /* \"#utility.yul\":3492:3761   */\n  pop\n    /* \"#utility.yul\":3441:3761   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":570:17259  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {... */\ntag_8:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":570:17259  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x4e1273f4\n      gt\n      tag_11\n      jumpi\n      dup1\n      0x4e1273f4\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xf242432a\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_11:\n      dup1\n      0xfdd58e\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x01ffc9a7\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x0e89341c\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x2eb2c2d6\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2185:2412  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n    tag_3:\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1236:1541  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_4:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1940:2043  function uri(uint256) public view virtual override returns (string memory) {... */\n    tag_5:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4064:4490  function safeBatchTransferFrom(... */\n    tag_6:\n      tag_30\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      stop\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2569:3077  function balanceOfBatch(address[] memory accounts, uint256[] memory ids)... */\n    tag_7:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3145:3298  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_8:\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n    tag_40:\n      stop\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3365:3531  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n    tag_9:\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      tag_47\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3598:3992  function safeTransferFrom(... */\n    tag_10:\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      tag_52\n      jump\t// in\n    tag_49:\n      stop\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2185:2412  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n    tag_15:\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2271:2278  uint256 */\n      0x00\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2317:2318  0 */\n      dup1\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2298:2319  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2298:2305  account */\n      dup4\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2298:2319  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2290:2366  require(account != address(0), \"ERC1155: address zero is not a valid owner\") */\n      tag_54\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_54:\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2383:2392  _balances */\n      0x00\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2383:2396  _balances[id] */\n      dup1\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2393:2395  id */\n      dup4\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2383:2396  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2383:2405  _balances[id][account] */\n      0x00\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2397:2404  account */\n      dup5\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2383:2405  _balances[id][account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2376:2405  return _balances[id][account] */\n      swap1\n      pop\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2185:2412  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1236:1541  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_21:\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1338:1342  bool */\n      0x00\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1388:1414  type(IERC1155).interfaceId */\n      0xd9b67a2600000000000000000000000000000000000000000000000000000000\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1373:1414  interfaceId == type(IERC1155).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1373:1384  interfaceId */\n      dup3\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1373:1414  interfaceId == type(IERC1155).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1373:1482  interfaceId == type(IERC1155).interfaceId ||... */\n      dup1\n      tag_58\n      jumpi\n      pop\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1445:1482  type(IERC1155MetadataURI).interfaceId */\n      0x0e89341c00000000000000000000000000000000000000000000000000000000\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1430:1482  interfaceId == type(IERC1155MetadataURI).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1430:1441  interfaceId */\n      dup3\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1430:1482  interfaceId == type(IERC1155MetadataURI).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1373:1482  interfaceId == type(IERC1155).interfaceId ||... */\n    tag_58:\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1373:1534  interfaceId == type(IERC1155).interfaceId ||... */\n      dup1\n      tag_59\n      jumpi\n      pop\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1498:1534  super.supportsInterface(interfaceId) */\n      tag_60\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1522:1533  interfaceId */\n      dup3\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1498:1521  super.supportsInterface */\n      tag_61\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1498:1534  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_60:\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1373:1534  interfaceId == type(IERC1155).interfaceId ||... */\n    tag_59:\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1354:1534  return... */\n      swap1\n      pop\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1236:1541  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1940:2043  function uri(uint256) public view virtual override returns (string memory) {... */\n    tag_27:\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2000:2013  string memory */\n      0x60\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2032:2036  _uri */\n      0x02\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2025:2036  return _uri */\n      dup1\n      sload\n      tag_63\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_65\n      swap1\n      tag_64\n      jump\t// in\n    tag_65:\n      dup1\n      iszero\n      tag_66\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_67\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_66)\n    tag_67:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_68:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_68\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_66:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1940:2043  function uri(uint256) public view virtual override returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4064:4490  function safeBatchTransferFrom(... */\n    tag_33:\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4297:4309  _msgSender() */\n      tag_70\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4297:4307  _msgSender */\n      tag_71\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4297:4309  _msgSender() */\n      jump\t// in\n    tag_70:\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4289:4309  from == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4289:4293  from */\n      dup6\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4289:4309  from == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4289:4349  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n      dup1\n      tag_72\n      jumpi\n      pop\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4313:4349  isApprovedForAll(from, _msgSender()) */\n      tag_73\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4330:4334  from */\n      dup6\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4336:4348  _msgSender() */\n      tag_74\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4336:4346  _msgSender */\n      tag_71\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4336:4348  _msgSender() */\n      jump\t// in\n    tag_74:\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4313:4329  isApprovedForAll */\n      tag_47\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4313:4349  isApprovedForAll(from, _msgSender()) */\n      jump\t// in\n    tag_73:\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4289:4349  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n    tag_72:\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4268:4421  require(... */\n      tag_75\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_76\n      swap1\n      tag_77\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_75:\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4431:4483  _safeBatchTransferFrom(from, to, ids, amounts, data) */\n      tag_78\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4454:4458  from */\n      dup6\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4460:4462  to */\n      dup6\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4464:4467  ids */\n      dup6\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4469:4476  amounts */\n      dup6\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4478:4482  data */\n      dup6\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4431:4453  _safeBatchTransferFrom */\n      tag_79\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4431:4483  _safeBatchTransferFrom(from, to, ids, amounts, data) */\n      jump\t// in\n    tag_78:\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4064:4490  function safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2569:3077  function balanceOfBatch(address[] memory accounts, uint256[] memory ids)... */\n    tag_37:\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2720:2736  uint256[] memory */\n      0x60\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2779:2782  ids */\n      dup2\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2779:2789  ids.length */\n      mload\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2760:2768  accounts */\n      dup4\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2760:2775  accounts.length */\n      mload\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2760:2789  accounts.length == ids.length */\n      eq\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2752:2835  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n      tag_81\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_82\n      swap1\n      tag_83\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_81:\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2846:2876  uint256[] memory batchBalances */\n      0x00\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2893:2901  accounts */\n      dup4\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2893:2908  accounts.length */\n      mload\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2879:2909  new uint256[](accounts.length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_84\n      jumpi\n      tag_85\n      tag_86\n      jump\t// in\n    tag_85:\n    tag_84:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_87\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_87:\n      pop\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2846:2909  uint256[] memory batchBalances = new uint256[](accounts.length) */\n      swap1\n      pop\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2925:2934  uint256 i */\n      0x00\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2920:3040  for (uint256 i = 0; i < accounts.length; ++i) {... */\n    tag_88:\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2944:2952  accounts */\n      dup5\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2944:2959  accounts.length */\n      mload\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2940:2941  i */\n      dup2\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2940:2959  i < accounts.length */\n      lt\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2920:3040  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      iszero\n      tag_89\n      jumpi\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2999:3029  balanceOf(accounts[i], ids[i]) */\n      tag_91\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3009:3017  accounts */\n      dup6\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3018:3019  i */\n      dup3\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3009:3020  accounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_92\n      jumpi\n      tag_93\n      tag_94\n      jump\t// in\n    tag_93:\n    tag_92:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3022:3025  ids */\n      dup6\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3026:3027  i */\n      dup4\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3022:3028  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_95\n      jumpi\n      tag_96\n      tag_94\n      jump\t// in\n    tag_96:\n    tag_95:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2999:3008  balanceOf */\n      tag_15\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2999:3029  balanceOf(accounts[i], ids[i]) */\n      jump\t// in\n    tag_91:\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2980:2993  batchBalances */\n      dup3\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2994:2995  i */\n      dup3\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2980:2996  batchBalances[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_97\n      jumpi\n      tag_98\n      tag_94\n      jump\t// in\n    tag_98:\n    tag_97:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2980:3029  batchBalances[i] = balanceOf(accounts[i], ids[i]) */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2961:2964  ++i */\n      dup1\n      tag_99\n      swap1\n      tag_100\n      jump\t// in\n    tag_99:\n      swap1\n      pop\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2920:3040  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      jump(tag_88)\n    tag_89:\n      pop\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3057:3070  batchBalances */\n      dup1\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3050:3070  return batchBalances */\n      swap2\n      pop\n      pop\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2569:3077  function balanceOfBatch(address[] memory accounts, uint256[] memory ids)... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3145:3298  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_43:\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3239:3291  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_102\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3258:3270  _msgSender() */\n      tag_103\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3258:3268  _msgSender */\n      tag_71\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3258:3270  _msgSender() */\n      jump\t// in\n    tag_103:\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3272:3280  operator */\n      dup4\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3282:3290  approved */\n      dup4\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3239:3257  _setApprovalForAll */\n      tag_104\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3239:3291  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_102:\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3145:3298  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3365:3531  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n    tag_47:\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3464:3468  bool */\n      0x00\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3487:3505  _operatorApprovals */\n      0x01\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3487:3514  _operatorApprovals[account] */\n      0x00\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3506:3513  account */\n      dup5\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3487:3514  _operatorApprovals[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3487:3524  _operatorApprovals[account][operator] */\n      0x00\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3515:3523  operator */\n      dup4\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3487:3524  _operatorApprovals[account][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3480:3524  return _operatorApprovals[account][operator] */\n      swap1\n      pop\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3365:3531  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3598:3992  function safeTransferFrom(... */\n    tag_52:\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3806:3818  _msgSender() */\n      tag_107\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3806:3816  _msgSender */\n      tag_71\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3806:3818  _msgSender() */\n      jump\t// in\n    tag_107:\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3798:3818  from == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3798:3802  from */\n      dup6\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3798:3818  from == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3798:3858  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n      dup1\n      tag_108\n      jumpi\n      pop\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3822:3858  isApprovedForAll(from, _msgSender()) */\n      tag_109\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3839:3843  from */\n      dup6\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3845:3857  _msgSender() */\n      tag_110\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3845:3855  _msgSender */\n      tag_71\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3845:3857  _msgSender() */\n      jump\t// in\n    tag_110:\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3822:3838  isApprovedForAll */\n      tag_47\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3822:3858  isApprovedForAll(from, _msgSender()) */\n      jump\t// in\n    tag_109:\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3798:3858  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n    tag_108:\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3777:3930  require(... */\n      tag_111\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_112\n      swap1\n      tag_77\n      jump\t// in\n    tag_112:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_111:\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3940:3985  _safeTransferFrom(from, to, id, amount, data) */\n      tag_113\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3958:3962  from */\n      dup6\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3964:3966  to */\n      dup6\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3968:3970  id */\n      dup6\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3972:3978  amount */\n      dup6\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3980:3984  data */\n      dup6\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3940:3957  _safeTransferFrom */\n      tag_114\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3940:3985  _safeTransferFrom(from, to, id, amount, data) */\n      jump\t// in\n    tag_113:\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3598:3992  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:984  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_61:\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/utils/introspection/ERC165.sol\":914:918  bool */\n      0x00\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/utils/introspection/ERC165.sol\":952:977  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:948  interfaceId */\n      dup3\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/utils/introspection/ERC165.sol\":930:977  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:984  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_71:\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6233:7348  function _safeBatchTransferFrom(... */\n    tag_79:\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6453:6460  amounts */\n      dup2\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6453:6467  amounts.length */\n      mload\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6439:6442  ids */\n      dup4\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6439:6449  ids.length */\n      mload\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6439:6467  ids.length == amounts.length */\n      eq\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6431:6512  require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\") */\n      tag_118\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_119\n      swap1\n      tag_120\n      jump\t// in\n    tag_119:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_118:\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6544:6545  0 */\n      0x00\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6530:6546  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6530:6532  to */\n      dup5\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6530:6546  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6522:6588  require(to != address(0), \"ERC1155: transfer to the zero address\") */\n      tag_121\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_122\n      swap1\n      tag_123\n      jump\t// in\n    tag_122:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_121:\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6599:6615  address operator */\n      0x00\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6618:6630  _msgSender() */\n      tag_124\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6618:6628  _msgSender */\n      tag_71\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6618:6630  _msgSender() */\n      jump\t// in\n    tag_124:\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6599:6630  address operator = _msgSender() */\n      swap1\n      pop\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6641:6701  _beforeTokenTransfer(operator, from, to, ids, amounts, data) */\n      tag_125\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6662:6670  operator */\n      dup2\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6672:6676  from */\n      dup8\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6678:6680  to */\n      dup8\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6682:6685  ids */\n      dup8\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6687:6694  amounts */\n      dup8\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6696:6700  data */\n      dup8\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6641:6661  _beforeTokenTransfer */\n      tag_126\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6641:6701  _beforeTokenTransfer(operator, from, to, ids, amounts, data) */\n      jump\t// in\n    tag_125:\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6717:6726  uint256 i */\n      0x00\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6712:7123  for (uint256 i = 0; i < ids.length; ++i) {... */\n    tag_127:\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6736:6739  ids */\n      dup5\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6736:6746  ids.length */\n      mload\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6732:6733  i */\n      dup2\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6732:6746  i < ids.length */\n      lt\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6712:7123  for (uint256 i = 0; i < ids.length; ++i) {... */\n      iszero\n      tag_128\n      jumpi\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6767:6777  uint256 id */\n      0x00\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6780:6783  ids */\n      dup6\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6784:6785  i */\n      dup3\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6780:6786  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_130\n      jumpi\n      tag_131\n      tag_94\n      jump\t// in\n    tag_131:\n    tag_130:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6767:6786  uint256 id = ids[i] */\n      swap1\n      pop\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6800:6814  uint256 amount */\n      0x00\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6817:6824  amounts */\n      dup6\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6825:6826  i */\n      dup4\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6817:6827  amounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_132\n      jumpi\n      tag_133\n      tag_94\n      jump\t// in\n    tag_133:\n    tag_132:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6800:6827  uint256 amount = amounts[i] */\n      swap1\n      pop\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6842:6861  uint256 fromBalance */\n      0x00\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6864:6873  _balances */\n      dup1\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6864:6877  _balances[id] */\n      0x00\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6874:6876  id */\n      dup5\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6864:6877  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6864:6883  _balances[id][from] */\n      0x00\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6878:6882  from */\n      dup12\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6864:6883  _balances[id][from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6842:6883  uint256 fromBalance = _balances[id][from] */\n      swap1\n      pop\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6920:6926  amount */\n      dup2\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6905:6916  fromBalance */\n      dup2\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6905:6926  fromBalance >= amount */\n      lt\n      iszero\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6897:6973  require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\") */\n      tag_134\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_135\n      swap1\n      tag_136\n      jump\t// in\n    tag_135:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_134:\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7051:7057  amount */\n      dup2\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7037:7048  fromBalance */\n      dup2\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7037:7057  fromBalance - amount */\n      sub\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7015:7024  _balances */\n      0x00\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7015:7028  _balances[id] */\n      dup1\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7025:7027  id */\n      dup6\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7015:7028  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7015:7034  _balances[id][from] */\n      0x00\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7029:7033  from */\n      dup13\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7015:7034  _balances[id][from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7015:7057  _balances[id][from] = fromBalance - amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7106:7112  amount */\n      dup2\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7085:7094  _balances */\n      0x00\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7085:7098  _balances[id] */\n      dup1\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7095:7097  id */\n      dup6\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7085:7098  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7085:7102  _balances[id][to] */\n      0x00\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7099:7101  to */\n      dup12\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7085:7102  _balances[id][to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7085:7112  _balances[id][to] += amount */\n      dup3\n      dup3\n      sload\n      tag_137\n      swap2\n      swap1\n      tag_138\n      jump\t// in\n    tag_137:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6753:7123  {... */\n      pop\n      pop\n      pop\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6748:6751  ++i */\n      dup1\n      tag_139\n      swap1\n      tag_100\n      jump\t// in\n    tag_139:\n      swap1\n      pop\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6712:7123  for (uint256 i = 0; i < ids.length; ++i) {... */\n      jump(tag_127)\n    tag_128:\n      pop\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7168:7170  to */\n      dup5\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7138:7185  TransferBatch(operator, from, to, ids, amounts) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7162:7166  from */\n      dup7\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7138:7185  TransferBatch(operator, from, to, ids, amounts) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7152:7160  operator */\n      dup3\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7138:7185  TransferBatch(operator, from, to, ids, amounts) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7172:7175  ids */\n      dup8\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7177:7184  amounts */\n      dup8\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7138:7185  TransferBatch(operator, from, to, ids, amounts) */\n      mload(0x40)\n      tag_140\n      swap3\n      swap2\n      swap1\n      tag_141\n      jump\t// in\n    tag_140:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7196:7255  _afterTokenTransfer(operator, from, to, ids, amounts, data) */\n      tag_142\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7216:7224  operator */\n      dup2\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7226:7230  from */\n      dup8\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7232:7234  to */\n      dup8\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7236:7239  ids */\n      dup8\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7241:7248  amounts */\n      dup8\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7250:7254  data */\n      dup8\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7196:7215  _afterTokenTransfer */\n      tag_143\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7196:7255  _afterTokenTransfer(operator, from, to, ids, amounts, data) */\n      jump\t// in\n    tag_142:\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7266:7341  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data) */\n      tag_144\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7302:7310  operator */\n      dup2\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7312:7316  from */\n      dup8\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7318:7320  to */\n      dup8\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7322:7325  ids */\n      dup8\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7327:7334  amounts */\n      dup8\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7336:7340  data */\n      dup8\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7266:7301  _doSafeBatchTransferAcceptanceCheck */\n      tag_145\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7266:7341  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data) */\n      jump\t// in\n    tag_144:\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6421:7348  {... */\n      pop\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6233:7348  function _safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12910:13233  function _setApprovalForAll(... */\n    tag_104:\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13060:13068  operator */\n      dup2\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13051:13068  owner != operator */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13051:13056  owner */\n      dup4\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13051:13068  owner != operator */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13043:13114  require(owner != operator, \"ERC1155: setting approval status for self\") */\n      tag_147\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_148\n      swap1\n      tag_149\n      jump\t// in\n    tag_148:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_147:\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13162:13170  approved */\n      dup1\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13124:13142  _operatorApprovals */\n      0x01\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13124:13149  _operatorApprovals[owner] */\n      0x00\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13143:13148  owner */\n      dup6\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13124:13149  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13124:13159  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13150:13158  operator */\n      dup5\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13124:13159  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13124:13170  _operatorApprovals[owner][operator] = approved */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13207:13215  operator */\n      dup2\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13185:13226  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13200:13205  owner */\n      dup4\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13185:13226  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13217:13225  approved */\n      dup4\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13185:13226  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      tag_150\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_150:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12910:13233  function _setApprovalForAll(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4940:5887  function _safeTransferFrom(... */\n    tag_114:\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5135:5136  0 */\n      0x00\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5121:5137  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5121:5123  to */\n      dup5\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5121:5137  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5113:5179  require(to != address(0), \"ERC1155: transfer to the zero address\") */\n      tag_152\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_153\n      swap1\n      tag_123\n      jump\t// in\n    tag_153:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_152:\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5190:5206  address operator */\n      0x00\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5209:5221  _msgSender() */\n      tag_154\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5209:5219  _msgSender */\n      tag_71\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5209:5221  _msgSender() */\n      jump\t// in\n    tag_154:\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5190:5221  address operator = _msgSender() */\n      swap1\n      pop\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5231:5251  uint256[] memory ids */\n      0x00\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5254:5275  _asSingletonArray(id) */\n      tag_155\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5272:5274  id */\n      dup6\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5254:5271  _asSingletonArray */\n      tag_156\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5254:5275  _asSingletonArray(id) */\n      jump\t// in\n    tag_155:\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5231:5275  uint256[] memory ids = _asSingletonArray(id) */\n      swap1\n      pop\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5285:5309  uint256[] memory amounts */\n      0x00\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5312:5337  _asSingletonArray(amount) */\n      tag_157\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5330:5336  amount */\n      dup6\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5312:5329  _asSingletonArray */\n      tag_156\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5312:5337  _asSingletonArray(amount) */\n      jump\t// in\n    tag_157:\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5285:5337  uint256[] memory amounts = _asSingletonArray(amount) */\n      swap1\n      pop\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5348:5408  _beforeTokenTransfer(operator, from, to, ids, amounts, data) */\n      tag_158\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5369:5377  operator */\n      dup4\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5379:5383  from */\n      dup10\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5385:5387  to */\n      dup10\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5389:5392  ids */\n      dup6\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5394:5401  amounts */\n      dup6\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5403:5407  data */\n      dup10\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5348:5368  _beforeTokenTransfer */\n      tag_126\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5348:5408  _beforeTokenTransfer(operator, from, to, ids, amounts, data) */\n      jump\t// in\n    tag_158:\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5419:5438  uint256 fromBalance */\n      0x00\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5441:5450  _balances */\n      dup1\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5441:5454  _balances[id] */\n      0x00\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5451:5453  id */\n      dup9\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5441:5454  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5441:5460  _balances[id][from] */\n      0x00\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5455:5459  from */\n      dup11\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5441:5460  _balances[id][from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5419:5460  uint256 fromBalance = _balances[id][from] */\n      swap1\n      pop\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5493:5499  amount */\n      dup6\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5478:5489  fromBalance */\n      dup2\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5478:5499  fromBalance >= amount */\n      lt\n      iszero\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5470:5546  require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\") */\n      tag_159\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_160\n      swap1\n      tag_136\n      jump\t// in\n    tag_160:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_159:\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5616:5622  amount */\n      dup6\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5602:5613  fromBalance */\n      dup2\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5602:5622  fromBalance - amount */\n      sub\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5580:5589  _balances */\n      0x00\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5580:5593  _balances[id] */\n      dup1\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5590:5592  id */\n      dup10\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5580:5593  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5580:5599  _balances[id][from] */\n      0x00\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5594:5598  from */\n      dup12\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5580:5599  _balances[id][from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5580:5622  _balances[id][from] = fromBalance - amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5663:5669  amount */\n      dup6\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5642:5651  _balances */\n      0x00\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5642:5655  _balances[id] */\n      dup1\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5652:5654  id */\n      dup10\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5642:5655  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5642:5659  _balances[id][to] */\n      0x00\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5656:5658  to */\n      dup11\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5642:5659  _balances[id][to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5642:5669  _balances[id][to] += amount */\n      dup3\n      dup3\n      sload\n      tag_161\n      swap2\n      swap1\n      tag_138\n      jump\t// in\n    tag_161:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5716:5718  to */\n      dup8\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5685:5731  TransferSingle(operator, from, to, id, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5710:5714  from */\n      dup10\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5685:5731  TransferSingle(operator, from, to, id, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5700:5708  operator */\n      dup6\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5685:5731  TransferSingle(operator, from, to, id, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5720:5722  id */\n      dup11\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5724:5730  amount */\n      dup11\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5685:5731  TransferSingle(operator, from, to, id, amount) */\n      mload(0x40)\n      tag_162\n      swap3\n      swap2\n      swap1\n      tag_163\n      jump\t// in\n    tag_162:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5742:5801  _afterTokenTransfer(operator, from, to, ids, amounts, data) */\n      tag_164\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5762:5770  operator */\n      dup5\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5772:5776  from */\n      dup11\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5778:5780  to */\n      dup11\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5782:5785  ids */\n      dup7\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5787:5794  amounts */\n      dup7\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5796:5800  data */\n      dup11\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5742:5761  _afterTokenTransfer */\n      tag_143\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5742:5801  _afterTokenTransfer(operator, from, to, ids, amounts, data) */\n      jump\t// in\n    tag_164:\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5812:5880  _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data) */\n      tag_165\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5843:5851  operator */\n      dup5\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5853:5857  from */\n      dup11\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5859:5861  to */\n      dup11\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5863:5865  id */\n      dup11\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5867:5873  amount */\n      dup11\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5875:5879  data */\n      dup11\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5812:5842  _doSafeTransferAcceptanceCheck */\n      tag_166\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5812:5880  _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data) */\n      jump\t// in\n    tag_165:\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5103:5887  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4940:5887  function _safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14169:14383  function _beforeTokenTransfer(... */\n    tag_126:\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15316:15529  function _afterTokenTransfer(... */\n    tag_143:\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16266:17058  function _doSafeBatchTransferAcceptanceCheck(... */\n    tag_145:\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16498:16513  to.isContract() */\n      tag_170\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16498:16500  to */\n      dup5\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16498:16511  to.isContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_171\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16498:16513  to.isContract() */\n      jump\t// in\n    tag_170:\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16494:17052  if (to.isContract()) {... */\n      iszero\n      tag_172\n      jumpi\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16550:16552  to */\n      dup4\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16533:16576  IERC1155Receiver(to).onERC1155BatchReceived */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xbc197c81\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16577:16585  operator */\n      dup8\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16587:16591  from */\n      dup8\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16593:16596  ids */\n      dup7\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16598:16605  amounts */\n      dup7\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16607:16611  data */\n      dup7\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16533:16612  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) */\n      mload(0x40)\n      dup7\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_173\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_174\n      jump\t// in\n    tag_173:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_175\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_175:\n      pop\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_176\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_177\n      swap2\n      swap1\n      tag_178\n      jump\t// in\n    tag_177:\n      0x01\n    tag_176:\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16529:17042  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (... */\n      tag_179\n      jumpi\n      tag_183\n      tag_184\n      jump\t// in\n    tag_183:\n      dup1\n      0x08c379a0\n      eq\n      iszero\n      tag_182\n      jumpi\n      pop\n      tag_185\n      tag_186\n      jump\t// in\n    tag_185:\n      dup1\n      tag_187\n      jumpi\n      pop\n      jump(tag_181)\n    tag_187:\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16918:16924  reason */\n      dup1\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16911:16925  revert(reason) */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_188\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_188:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16529:17042  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (... */\n    tag_182:\n      pop\n    tag_181:\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16965:17027  revert(\"ERC1155: transfer to non-ERC1155Receiver implementer\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_189\n      swap1\n      tag_190\n      jump\t// in\n    tag_189:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16529:17042  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (... */\n    tag_179:\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16703:16751  IERC1155Receiver.onERC1155BatchReceived.selector */\n      shl(0xe0, 0xbc197c81)\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16691:16751  response != IERC1155Receiver.onERC1155BatchReceived.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16691:16699  response */\n      dup2\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16691:16751  response != IERC1155Receiver.onERC1155BatchReceived.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16687:16844  if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {... */\n      tag_192\n      jumpi\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16775:16825  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_193\n      swap1\n      tag_194\n      jump\t// in\n    tag_193:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16687:16844  if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {... */\n    tag_192:\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16613:16858  returns (... */\n      pop\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16494:17052  if (to.isContract()) {... */\n    tag_172:\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16266:17058  function _doSafeBatchTransferAcceptanceCheck(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":17064:17257  function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {... */\n    tag_156:\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":17130:17146  uint256[] memory */\n      0x60\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":17158:17180  uint256[] memory array */\n      0x00\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":17197:17198  1 */\n      0x01\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":17183:17199  new uint256[](1) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_196\n      jumpi\n      tag_197\n      tag_86\n      jump\t// in\n    tag_197:\n    tag_196:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_198\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_198:\n      pop\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":17158:17199  uint256[] memory array = new uint256[](1) */\n      swap1\n      pop\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":17220:17227  element */\n      dup3\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":17209:17214  array */\n      dup2\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":17215:17216  0 */\n      0x00\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":17209:17217  array[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_199\n      jumpi\n      tag_200\n      tag_94\n      jump\t// in\n    tag_200:\n    tag_199:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":17209:17227  array[0] = element */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":17245:17250  array */\n      dup1\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":17238:17250  return array */\n      swap2\n      pop\n      pop\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":17064:17257  function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15535:16260  function _doSafeTransferAcceptanceCheck(... */\n    tag_166:\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15742:15757  to.isContract() */\n      tag_202\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15742:15744  to */\n      dup5\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15742:15755  to.isContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_171\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15742:15757  to.isContract() */\n      jump\t// in\n    tag_202:\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15738:16254  if (to.isContract()) {... */\n      iszero\n      tag_203\n      jumpi\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15794:15796  to */\n      dup4\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15777:15815  IERC1155Receiver(to).onERC1155Received */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf23a6e61\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15816:15824  operator */\n      dup8\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15826:15830  from */\n      dup8\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15832:15834  id */\n      dup7\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15836:15842  amount */\n      dup7\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15844:15848  data */\n      dup7\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15777:15849  IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) */\n      mload(0x40)\n      dup7\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_204\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_205\n      jump\t// in\n    tag_204:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_206\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_206:\n      pop\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_207\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_208\n      swap2\n      swap1\n      tag_178\n      jump\t// in\n    tag_208:\n      0x01\n    tag_207:\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15773:16244  try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {... */\n      tag_209\n      jumpi\n      tag_213\n      tag_184\n      jump\t// in\n    tag_213:\n      dup1\n      0x08c379a0\n      eq\n      iszero\n      tag_212\n      jumpi\n      pop\n      tag_214\n      tag_186\n      jump\t// in\n    tag_214:\n      dup1\n      tag_215\n      jumpi\n      pop\n      jump(tag_211)\n    tag_215:\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16120:16126  reason */\n      dup1\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16113:16127  revert(reason) */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_216\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_216:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15773:16244  try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {... */\n    tag_212:\n      pop\n    tag_211:\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16167:16229  revert(\"ERC1155: transfer to non-ERC1155Receiver implementer\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_217\n      swap1\n      tag_190\n      jump\t// in\n    tag_217:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15773:16244  try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {... */\n    tag_209:\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15910:15953  IERC1155Receiver.onERC1155Received.selector */\n      shl(0xe0, 0xf23a6e61)\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15898:15953  response != IERC1155Receiver.onERC1155Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15898:15906  response */\n      dup2\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15898:15953  response != IERC1155Receiver.onERC1155Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15894:16046  if (response != IERC1155Receiver.onERC1155Received.selector) {... */\n      tag_219\n      jumpi\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15977:16027  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_220\n      swap1\n      tag_194\n      jump\t// in\n    tag_220:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15894:16046  if (response != IERC1155Receiver.onERC1155Received.selector) {... */\n    tag_219:\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15850:16060  returns (bytes4 response) {... */\n      pop\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15738:16254  if (to.isContract()) {... */\n    tag_203:\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15535:16260  function _doSafeTransferAcceptanceCheck(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/utils/Address.sol\":1175:1495  function isContract(address account) internal view returns (bool) {... */\n    tag_171:\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/utils/Address.sol\":1235:1239  bool */\n      0x00\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/utils/Address.sol\":1487:1488  0 */\n      dup1\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/utils/Address.sol\":1465:1472  account */\n      dup3\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/utils/Address.sol\":1465:1484  account.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/utils/Address.sol\":1465:1488  account.code.length > 0 */\n      gt\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/utils/Address.sol\":1458:1488  return account.code.length > 0 */\n      swap1\n      pop\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/utils/Address.sol\":1175:1495  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_222:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_223:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_224:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_225:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_226:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_299\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_225\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_227:\n        /* \"#utility.yul\":641:665   */\n      tag_301\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_226\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_302\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_302:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_228:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_304\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_227\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:918   */\n    tag_229:\n        /* \"#utility.yul\":878:885   */\n      0x00\n        /* \"#utility.yul\":907:912   */\n      dup2\n        /* \"#utility.yul\":896:912   */\n      swap1\n      pop\n        /* \"#utility.yul\":841:918   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":924:1046   */\n    tag_230:\n        /* \"#utility.yul\":997:1021   */\n      tag_307\n        /* \"#utility.yul\":1015:1020   */\n      dup2\n        /* \"#utility.yul\":997:1021   */\n      tag_229\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":990:995   */\n      dup2\n        /* \"#utility.yul\":987:1022   */\n      eq\n        /* \"#utility.yul\":977:1040   */\n      tag_308\n      jumpi\n        /* \"#utility.yul\":1036:1037   */\n      0x00\n        /* \"#utility.yul\":1033:1034   */\n      dup1\n        /* \"#utility.yul\":1026:1038   */\n      revert\n        /* \"#utility.yul\":977:1040   */\n    tag_308:\n        /* \"#utility.yul\":924:1046   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1052:1191   */\n    tag_231:\n        /* \"#utility.yul\":1098:1103   */\n      0x00\n        /* \"#utility.yul\":1136:1142   */\n      dup2\n        /* \"#utility.yul\":1123:1143   */\n      calldataload\n        /* \"#utility.yul\":1114:1143   */\n      swap1\n      pop\n        /* \"#utility.yul\":1152:1185   */\n      tag_310\n        /* \"#utility.yul\":1179:1184   */\n      dup2\n        /* \"#utility.yul\":1152:1185   */\n      tag_230\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":1052:1191   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1197:1671   */\n    tag_14:\n        /* \"#utility.yul\":1265:1271   */\n      0x00\n        /* \"#utility.yul\":1273:1279   */\n      dup1\n        /* \"#utility.yul\":1322:1324   */\n      0x40\n        /* \"#utility.yul\":1310:1319   */\n      dup4\n        /* \"#utility.yul\":1301:1308   */\n      dup6\n        /* \"#utility.yul\":1297:1320   */\n      sub\n        /* \"#utility.yul\":1293:1325   */\n      slt\n        /* \"#utility.yul\":1290:1409   */\n      iszero\n      tag_312\n      jumpi\n        /* \"#utility.yul\":1328:1407   */\n      tag_313\n      tag_223\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":1290:1409   */\n    tag_312:\n        /* \"#utility.yul\":1448:1449   */\n      0x00\n        /* \"#utility.yul\":1473:1526   */\n      tag_314\n        /* \"#utility.yul\":1518:1525   */\n      dup6\n        /* \"#utility.yul\":1509:1515   */\n      dup3\n        /* \"#utility.yul\":1498:1507   */\n      dup7\n        /* \"#utility.yul\":1494:1516   */\n      add\n        /* \"#utility.yul\":1473:1526   */\n      tag_228\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":1463:1526   */\n      swap3\n      pop\n        /* \"#utility.yul\":1419:1536   */\n      pop\n        /* \"#utility.yul\":1575:1577   */\n      0x20\n        /* \"#utility.yul\":1601:1654   */\n      tag_315\n        /* \"#utility.yul\":1646:1653   */\n      dup6\n        /* \"#utility.yul\":1637:1643   */\n      dup3\n        /* \"#utility.yul\":1626:1635   */\n      dup7\n        /* \"#utility.yul\":1622:1644   */\n      add\n        /* \"#utility.yul\":1601:1654   */\n      tag_231\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":1591:1654   */\n      swap2\n      pop\n        /* \"#utility.yul\":1546:1664   */\n      pop\n        /* \"#utility.yul\":1197:1671   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1677:1795   */\n    tag_232:\n        /* \"#utility.yul\":1764:1788   */\n      tag_317\n        /* \"#utility.yul\":1782:1787   */\n      dup2\n        /* \"#utility.yul\":1764:1788   */\n      tag_229\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":1759:1762   */\n      dup3\n        /* \"#utility.yul\":1752:1789   */\n      mstore\n        /* \"#utility.yul\":1677:1795   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1801:2023   */\n    tag_17:\n        /* \"#utility.yul\":1894:1898   */\n      0x00\n        /* \"#utility.yul\":1932:1934   */\n      0x20\n        /* \"#utility.yul\":1921:1930   */\n      dup3\n        /* \"#utility.yul\":1917:1935   */\n      add\n        /* \"#utility.yul\":1909:1935   */\n      swap1\n      pop\n        /* \"#utility.yul\":1945:2016   */\n      tag_319\n        /* \"#utility.yul\":2013:2014   */\n      0x00\n        /* \"#utility.yul\":2002:2011   */\n      dup4\n        /* \"#utility.yul\":1998:2015   */\n      add\n        /* \"#utility.yul\":1989:1995   */\n      dup5\n        /* \"#utility.yul\":1945:2016   */\n      tag_232\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":1801:2023   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2029:2178   */\n    tag_233:\n        /* \"#utility.yul\":2065:2072   */\n      0x00\n        /* \"#utility.yul\":2105:2171   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2098:2103   */\n      dup3\n        /* \"#utility.yul\":2094:2172   */\n      and\n        /* \"#utility.yul\":2083:2172   */\n      swap1\n      pop\n        /* \"#utility.yul\":2029:2178   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2184:2304   */\n    tag_234:\n        /* \"#utility.yul\":2256:2279   */\n      tag_322\n        /* \"#utility.yul\":2273:2278   */\n      dup2\n        /* \"#utility.yul\":2256:2279   */\n      tag_233\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":2249:2254   */\n      dup2\n        /* \"#utility.yul\":2246:2280   */\n      eq\n        /* \"#utility.yul\":2236:2298   */\n      tag_323\n      jumpi\n        /* \"#utility.yul\":2294:2295   */\n      0x00\n        /* \"#utility.yul\":2291:2292   */\n      dup1\n        /* \"#utility.yul\":2284:2296   */\n      revert\n        /* \"#utility.yul\":2236:2298   */\n    tag_323:\n        /* \"#utility.yul\":2184:2304   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2310:2447   */\n    tag_235:\n        /* \"#utility.yul\":2355:2360   */\n      0x00\n        /* \"#utility.yul\":2393:2399   */\n      dup2\n        /* \"#utility.yul\":2380:2400   */\n      calldataload\n        /* \"#utility.yul\":2371:2400   */\n      swap1\n      pop\n        /* \"#utility.yul\":2409:2441   */\n      tag_325\n        /* \"#utility.yul\":2435:2440   */\n      dup2\n        /* \"#utility.yul\":2409:2441   */\n      tag_234\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":2310:2447   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2453:2780   */\n    tag_20:\n        /* \"#utility.yul\":2511:2517   */\n      0x00\n        /* \"#utility.yul\":2560:2562   */\n      0x20\n        /* \"#utility.yul\":2548:2557   */\n      dup3\n        /* \"#utility.yul\":2539:2546   */\n      dup5\n        /* \"#utility.yul\":2535:2558   */\n      sub\n        /* \"#utility.yul\":2531:2563   */\n      slt\n        /* \"#utility.yul\":2528:2647   */\n      iszero\n      tag_327\n      jumpi\n        /* \"#utility.yul\":2566:2645   */\n      tag_328\n      tag_223\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":2528:2647   */\n    tag_327:\n        /* \"#utility.yul\":2686:2687   */\n      0x00\n        /* \"#utility.yul\":2711:2763   */\n      tag_329\n        /* \"#utility.yul\":2755:2762   */\n      dup5\n        /* \"#utility.yul\":2746:2752   */\n      dup3\n        /* \"#utility.yul\":2735:2744   */\n      dup6\n        /* \"#utility.yul\":2731:2753   */\n      add\n        /* \"#utility.yul\":2711:2763   */\n      tag_235\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":2701:2763   */\n      swap2\n      pop\n        /* \"#utility.yul\":2657:2773   */\n      pop\n        /* \"#utility.yul\":2453:2780   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2786:2876   */\n    tag_236:\n        /* \"#utility.yul\":2820:2827   */\n      0x00\n        /* \"#utility.yul\":2863:2868   */\n      dup2\n        /* \"#utility.yul\":2856:2869   */\n      iszero\n        /* \"#utility.yul\":2849:2870   */\n      iszero\n        /* \"#utility.yul\":2838:2870   */\n      swap1\n      pop\n        /* \"#utility.yul\":2786:2876   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2882:2991   */\n    tag_237:\n        /* \"#utility.yul\":2963:2984   */\n      tag_332\n        /* \"#utility.yul\":2978:2983   */\n      dup2\n        /* \"#utility.yul\":2963:2984   */\n      tag_236\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":2958:2961   */\n      dup3\n        /* \"#utility.yul\":2951:2985   */\n      mstore\n        /* \"#utility.yul\":2882:2991   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2997:3207   */\n    tag_23:\n        /* \"#utility.yul\":3084:3088   */\n      0x00\n        /* \"#utility.yul\":3122:3124   */\n      0x20\n        /* \"#utility.yul\":3111:3120   */\n      dup3\n        /* \"#utility.yul\":3107:3125   */\n      add\n        /* \"#utility.yul\":3099:3125   */\n      swap1\n      pop\n        /* \"#utility.yul\":3135:3200   */\n      tag_334\n        /* \"#utility.yul\":3197:3198   */\n      0x00\n        /* \"#utility.yul\":3186:3195   */\n      dup4\n        /* \"#utility.yul\":3182:3199   */\n      add\n        /* \"#utility.yul\":3173:3179   */\n      dup5\n        /* \"#utility.yul\":3135:3200   */\n      tag_237\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":2997:3207   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3213:3542   */\n    tag_26:\n        /* \"#utility.yul\":3272:3278   */\n      0x00\n        /* \"#utility.yul\":3321:3323   */\n      0x20\n        /* \"#utility.yul\":3309:3318   */\n      dup3\n        /* \"#utility.yul\":3300:3307   */\n      dup5\n        /* \"#utility.yul\":3296:3319   */\n      sub\n        /* \"#utility.yul\":3292:3324   */\n      slt\n        /* \"#utility.yul\":3289:3408   */\n      iszero\n      tag_336\n      jumpi\n        /* \"#utility.yul\":3327:3406   */\n      tag_337\n      tag_223\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":3289:3408   */\n    tag_336:\n        /* \"#utility.yul\":3447:3448   */\n      0x00\n        /* \"#utility.yul\":3472:3525   */\n      tag_338\n        /* \"#utility.yul\":3517:3524   */\n      dup5\n        /* \"#utility.yul\":3508:3514   */\n      dup3\n        /* \"#utility.yul\":3497:3506   */\n      dup6\n        /* \"#utility.yul\":3493:3515   */\n      add\n        /* \"#utility.yul\":3472:3525   */\n      tag_231\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":3462:3525   */\n      swap2\n      pop\n        /* \"#utility.yul\":3418:3535   */\n      pop\n        /* \"#utility.yul\":3213:3542   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3548:3647   */\n    tag_238:\n        /* \"#utility.yul\":3600:3606   */\n      0x00\n        /* \"#utility.yul\":3634:3639   */\n      dup2\n        /* \"#utility.yul\":3628:3640   */\n      mload\n        /* \"#utility.yul\":3618:3640   */\n      swap1\n      pop\n        /* \"#utility.yul\":3548:3647   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3653:3822   */\n    tag_239:\n        /* \"#utility.yul\":3737:3748   */\n      0x00\n        /* \"#utility.yul\":3771:3777   */\n      dup3\n        /* \"#utility.yul\":3766:3769   */\n      dup3\n        /* \"#utility.yul\":3759:3778   */\n      mstore\n        /* \"#utility.yul\":3811:3815   */\n      0x20\n        /* \"#utility.yul\":3806:3809   */\n      dup3\n        /* \"#utility.yul\":3802:3816   */\n      add\n        /* \"#utility.yul\":3787:3816   */\n      swap1\n      pop\n        /* \"#utility.yul\":3653:3822   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3828:4135   */\n    tag_240:\n        /* \"#utility.yul\":3896:3897   */\n      0x00\n        /* \"#utility.yul\":3906:4019   */\n    tag_342:\n        /* \"#utility.yul\":3920:3926   */\n      dup4\n        /* \"#utility.yul\":3917:3918   */\n      dup2\n        /* \"#utility.yul\":3914:3927   */\n      lt\n        /* \"#utility.yul\":3906:4019   */\n      iszero\n      tag_344\n      jumpi\n        /* \"#utility.yul\":4005:4006   */\n      dup1\n        /* \"#utility.yul\":4000:4003   */\n      dup3\n        /* \"#utility.yul\":3996:4007   */\n      add\n        /* \"#utility.yul\":3990:4008   */\n      mload\n        /* \"#utility.yul\":3986:3987   */\n      dup2\n        /* \"#utility.yul\":3981:3984   */\n      dup5\n        /* \"#utility.yul\":3977:3988   */\n      add\n        /* \"#utility.yul\":3970:4009   */\n      mstore\n        /* \"#utility.yul\":3942:3944   */\n      0x20\n        /* \"#utility.yul\":3939:3940   */\n      dup2\n        /* \"#utility.yul\":3935:3945   */\n      add\n        /* \"#utility.yul\":3930:3945   */\n      swap1\n      pop\n        /* \"#utility.yul\":3906:4019   */\n      jump(tag_342)\n    tag_344:\n        /* \"#utility.yul\":4037:4043   */\n      dup4\n        /* \"#utility.yul\":4034:4035   */\n      dup2\n        /* \"#utility.yul\":4031:4044   */\n      gt\n        /* \"#utility.yul\":4028:4129   */\n      iszero\n      tag_345\n      jumpi\n        /* \"#utility.yul\":4117:4118   */\n      0x00\n        /* \"#utility.yul\":4108:4114   */\n      dup5\n        /* \"#utility.yul\":4103:4106   */\n      dup5\n        /* \"#utility.yul\":4099:4115   */\n      add\n        /* \"#utility.yul\":4092:4119   */\n      mstore\n        /* \"#utility.yul\":4028:4129   */\n    tag_345:\n        /* \"#utility.yul\":3877:4135   */\n      pop\n        /* \"#utility.yul\":3828:4135   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4141:4243   */\n    tag_241:\n        /* \"#utility.yul\":4182:4188   */\n      0x00\n        /* \"#utility.yul\":4233:4235   */\n      0x1f\n        /* \"#utility.yul\":4229:4236   */\n      not\n        /* \"#utility.yul\":4224:4226   */\n      0x1f\n        /* \"#utility.yul\":4217:4222   */\n      dup4\n        /* \"#utility.yul\":4213:4227   */\n      add\n        /* \"#utility.yul\":4209:4237   */\n      and\n        /* \"#utility.yul\":4199:4237   */\n      swap1\n      pop\n        /* \"#utility.yul\":4141:4243   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4249:4613   */\n    tag_242:\n        /* \"#utility.yul\":4337:4340   */\n      0x00\n        /* \"#utility.yul\":4365:4404   */\n      tag_348\n        /* \"#utility.yul\":4398:4403   */\n      dup3\n        /* \"#utility.yul\":4365:4404   */\n      tag_238\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":4420:4491   */\n      tag_349\n        /* \"#utility.yul\":4484:4490   */\n      dup2\n        /* \"#utility.yul\":4479:4482   */\n      dup6\n        /* \"#utility.yul\":4420:4491   */\n      tag_239\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":4413:4491   */\n      swap4\n      pop\n        /* \"#utility.yul\":4500:4552   */\n      tag_350\n        /* \"#utility.yul\":4545:4551   */\n      dup2\n        /* \"#utility.yul\":4540:4543   */\n      dup6\n        /* \"#utility.yul\":4533:4537   */\n      0x20\n        /* \"#utility.yul\":4526:4531   */\n      dup7\n        /* \"#utility.yul\":4522:4538   */\n      add\n        /* \"#utility.yul\":4500:4552   */\n      tag_240\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":4577:4606   */\n      tag_351\n        /* \"#utility.yul\":4599:4605   */\n      dup2\n        /* \"#utility.yul\":4577:4606   */\n      tag_241\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":4572:4575   */\n      dup5\n        /* \"#utility.yul\":4568:4607   */\n      add\n        /* \"#utility.yul\":4561:4607   */\n      swap2\n      pop\n        /* \"#utility.yul\":4341:4613   */\n      pop\n        /* \"#utility.yul\":4249:4613   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4619:4932   */\n    tag_29:\n        /* \"#utility.yul\":4732:4736   */\n      0x00\n        /* \"#utility.yul\":4770:4772   */\n      0x20\n        /* \"#utility.yul\":4759:4768   */\n      dup3\n        /* \"#utility.yul\":4755:4773   */\n      add\n        /* \"#utility.yul\":4747:4773   */\n      swap1\n      pop\n        /* \"#utility.yul\":4819:4828   */\n      dup2\n        /* \"#utility.yul\":4813:4817   */\n      dup2\n        /* \"#utility.yul\":4809:4829   */\n      sub\n        /* \"#utility.yul\":4805:4806   */\n      0x00\n        /* \"#utility.yul\":4794:4803   */\n      dup4\n        /* \"#utility.yul\":4790:4807   */\n      add\n        /* \"#utility.yul\":4783:4830   */\n      mstore\n        /* \"#utility.yul\":4847:4925   */\n      tag_353\n        /* \"#utility.yul\":4920:4924   */\n      dup2\n        /* \"#utility.yul\":4911:4917   */\n      dup5\n        /* \"#utility.yul\":4847:4925   */\n      tag_242\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":4839:4925   */\n      swap1\n      pop\n        /* \"#utility.yul\":4619:4932   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4938:5055   */\n    tag_243:\n        /* \"#utility.yul\":5047:5048   */\n      0x00\n        /* \"#utility.yul\":5044:5045   */\n      dup1\n        /* \"#utility.yul\":5037:5049   */\n      revert\n        /* \"#utility.yul\":5061:5241   */\n    tag_86:\n        /* \"#utility.yul\":5109:5186   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5106:5107   */\n      0x00\n        /* \"#utility.yul\":5099:5187   */\n      mstore\n        /* \"#utility.yul\":5206:5210   */\n      0x41\n        /* \"#utility.yul\":5203:5204   */\n      0x04\n        /* \"#utility.yul\":5196:5211   */\n      mstore\n        /* \"#utility.yul\":5230:5234   */\n      0x24\n        /* \"#utility.yul\":5227:5228   */\n      0x00\n        /* \"#utility.yul\":5220:5235   */\n      revert\n        /* \"#utility.yul\":5247:5528   */\n    tag_244:\n        /* \"#utility.yul\":5330:5357   */\n      tag_357\n        /* \"#utility.yul\":5352:5356   */\n      dup3\n        /* \"#utility.yul\":5330:5357   */\n      tag_241\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":5322:5328   */\n      dup2\n        /* \"#utility.yul\":5318:5358   */\n      add\n        /* \"#utility.yul\":5460:5466   */\n      dup2\n        /* \"#utility.yul\":5448:5458   */\n      dup2\n        /* \"#utility.yul\":5445:5467   */\n      lt\n        /* \"#utility.yul\":5424:5442   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5412:5422   */\n      dup3\n        /* \"#utility.yul\":5409:5443   */\n      gt\n        /* \"#utility.yul\":5406:5468   */\n      or\n        /* \"#utility.yul\":5403:5491   */\n      iszero\n      tag_358\n      jumpi\n        /* \"#utility.yul\":5471:5489   */\n      tag_359\n      tag_86\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":5403:5491   */\n    tag_358:\n        /* \"#utility.yul\":5511:5521   */\n      dup1\n        /* \"#utility.yul\":5507:5509   */\n      0x40\n        /* \"#utility.yul\":5500:5522   */\n      mstore\n        /* \"#utility.yul\":5290:5528   */\n      pop\n        /* \"#utility.yul\":5247:5528   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5534:5663   */\n    tag_245:\n        /* \"#utility.yul\":5568:5574   */\n      0x00\n        /* \"#utility.yul\":5595:5615   */\n      tag_361\n      tag_222\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":5585:5615   */\n      swap1\n      pop\n        /* \"#utility.yul\":5624:5657   */\n      tag_362\n        /* \"#utility.yul\":5652:5656   */\n      dup3\n        /* \"#utility.yul\":5644:5650   */\n      dup3\n        /* \"#utility.yul\":5624:5657   */\n      tag_244\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":5534:5663   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5669:5980   */\n    tag_246:\n        /* \"#utility.yul\":5746:5750   */\n      0x00\n        /* \"#utility.yul\":5836:5854   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5828:5834   */\n      dup3\n        /* \"#utility.yul\":5825:5855   */\n      gt\n        /* \"#utility.yul\":5822:5878   */\n      iszero\n      tag_364\n      jumpi\n        /* \"#utility.yul\":5858:5876   */\n      tag_365\n      tag_86\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":5822:5878   */\n    tag_364:\n        /* \"#utility.yul\":5908:5912   */\n      0x20\n        /* \"#utility.yul\":5900:5906   */\n      dup3\n        /* \"#utility.yul\":5896:5913   */\n      mul\n        /* \"#utility.yul\":5888:5913   */\n      swap1\n      pop\n        /* \"#utility.yul\":5968:5972   */\n      0x20\n        /* \"#utility.yul\":5962:5966   */\n      dup2\n        /* \"#utility.yul\":5958:5973   */\n      add\n        /* \"#utility.yul\":5950:5973   */\n      swap1\n      pop\n        /* \"#utility.yul\":5669:5980   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5986:6103   */\n    tag_247:\n        /* \"#utility.yul\":6095:6096   */\n      0x00\n        /* \"#utility.yul\":6092:6093   */\n      dup1\n        /* \"#utility.yul\":6085:6097   */\n      revert\n        /* \"#utility.yul\":6126:6836   */\n    tag_248:\n        /* \"#utility.yul\":6222:6227   */\n      0x00\n        /* \"#utility.yul\":6247:6328   */\n      tag_368\n        /* \"#utility.yul\":6263:6327   */\n      tag_369\n        /* \"#utility.yul\":6320:6326   */\n      dup5\n        /* \"#utility.yul\":6263:6327   */\n      tag_246\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":6247:6328   */\n      tag_245\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":6238:6328   */\n      swap1\n      pop\n        /* \"#utility.yul\":6348:6353   */\n      dup1\n        /* \"#utility.yul\":6377:6383   */\n      dup4\n        /* \"#utility.yul\":6370:6375   */\n      dup3\n        /* \"#utility.yul\":6363:6384   */\n      mstore\n        /* \"#utility.yul\":6411:6415   */\n      0x20\n        /* \"#utility.yul\":6404:6409   */\n      dup3\n        /* \"#utility.yul\":6400:6416   */\n      add\n        /* \"#utility.yul\":6393:6416   */\n      swap1\n      pop\n        /* \"#utility.yul\":6464:6468   */\n      0x20\n        /* \"#utility.yul\":6456:6462   */\n      dup5\n        /* \"#utility.yul\":6452:6469   */\n      mul\n        /* \"#utility.yul\":6444:6450   */\n      dup4\n        /* \"#utility.yul\":6440:6470   */\n      add\n        /* \"#utility.yul\":6493:6496   */\n      dup6\n        /* \"#utility.yul\":6485:6491   */\n      dup2\n        /* \"#utility.yul\":6482:6497   */\n      gt\n        /* \"#utility.yul\":6479:6601   */\n      iszero\n      tag_370\n      jumpi\n        /* \"#utility.yul\":6512:6591   */\n      tag_371\n      tag_247\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":6479:6601   */\n    tag_370:\n        /* \"#utility.yul\":6627:6633   */\n      dup4\n        /* \"#utility.yul\":6610:6830   */\n    tag_372:\n        /* \"#utility.yul\":6644:6650   */\n      dup2\n        /* \"#utility.yul\":6639:6642   */\n      dup2\n        /* \"#utility.yul\":6636:6651   */\n      lt\n        /* \"#utility.yul\":6610:6830   */\n      iszero\n      tag_374\n      jumpi\n        /* \"#utility.yul\":6719:6722   */\n      dup1\n        /* \"#utility.yul\":6748:6785   */\n      tag_375\n        /* \"#utility.yul\":6781:6784   */\n      dup9\n        /* \"#utility.yul\":6769:6779   */\n      dup3\n        /* \"#utility.yul\":6748:6785   */\n      tag_231\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":6743:6746   */\n      dup5\n        /* \"#utility.yul\":6736:6786   */\n      mstore\n        /* \"#utility.yul\":6815:6819   */\n      0x20\n        /* \"#utility.yul\":6810:6813   */\n      dup5\n        /* \"#utility.yul\":6806:6820   */\n      add\n        /* \"#utility.yul\":6799:6820   */\n      swap4\n      pop\n        /* \"#utility.yul\":6686:6830   */\n      pop\n        /* \"#utility.yul\":6670:6674   */\n      0x20\n        /* \"#utility.yul\":6665:6668   */\n      dup2\n        /* \"#utility.yul\":6661:6675   */\n      add\n        /* \"#utility.yul\":6654:6675   */\n      swap1\n      pop\n        /* \"#utility.yul\":6610:6830   */\n      jump(tag_372)\n    tag_374:\n        /* \"#utility.yul\":6614:6635   */\n      pop\n        /* \"#utility.yul\":6228:6836   */\n      pop\n      pop\n        /* \"#utility.yul\":6126:6836   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6859:7229   */\n    tag_249:\n        /* \"#utility.yul\":6930:6935   */\n      0x00\n        /* \"#utility.yul\":6979:6982   */\n      dup3\n        /* \"#utility.yul\":6972:6976   */\n      0x1f\n        /* \"#utility.yul\":6964:6970   */\n      dup4\n        /* \"#utility.yul\":6960:6977   */\n      add\n        /* \"#utility.yul\":6956:6983   */\n      slt\n        /* \"#utility.yul\":6946:7068   */\n      tag_377\n      jumpi\n        /* \"#utility.yul\":6987:7066   */\n      tag_378\n      tag_243\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":6946:7068   */\n    tag_377:\n        /* \"#utility.yul\":7104:7110   */\n      dup2\n        /* \"#utility.yul\":7091:7111   */\n      calldataload\n        /* \"#utility.yul\":7129:7223   */\n      tag_379\n        /* \"#utility.yul\":7219:7222   */\n      dup5\n        /* \"#utility.yul\":7211:7217   */\n      dup3\n        /* \"#utility.yul\":7204:7208   */\n      0x20\n        /* \"#utility.yul\":7196:7202   */\n      dup7\n        /* \"#utility.yul\":7192:7209   */\n      add\n        /* \"#utility.yul\":7129:7223   */\n      tag_248\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":7120:7223   */\n      swap2\n      pop\n        /* \"#utility.yul\":6936:7229   */\n      pop\n        /* \"#utility.yul\":6859:7229   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7235:7352   */\n    tag_250:\n        /* \"#utility.yul\":7344:7345   */\n      0x00\n        /* \"#utility.yul\":7341:7342   */\n      dup1\n        /* \"#utility.yul\":7334:7346   */\n      revert\n        /* \"#utility.yul\":7358:7665   */\n    tag_251:\n        /* \"#utility.yul\":7419:7423   */\n      0x00\n        /* \"#utility.yul\":7509:7527   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7501:7507   */\n      dup3\n        /* \"#utility.yul\":7498:7528   */\n      gt\n        /* \"#utility.yul\":7495:7551   */\n      iszero\n      tag_382\n      jumpi\n        /* \"#utility.yul\":7531:7549   */\n      tag_383\n      tag_86\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":7495:7551   */\n    tag_382:\n        /* \"#utility.yul\":7569:7598   */\n      tag_384\n        /* \"#utility.yul\":7591:7597   */\n      dup3\n        /* \"#utility.yul\":7569:7598   */\n      tag_241\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":7561:7598   */\n      swap1\n      pop\n        /* \"#utility.yul\":7653:7657   */\n      0x20\n        /* \"#utility.yul\":7647:7651   */\n      dup2\n        /* \"#utility.yul\":7643:7658   */\n      add\n        /* \"#utility.yul\":7635:7658   */\n      swap1\n      pop\n        /* \"#utility.yul\":7358:7665   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7671:7825   */\n    tag_252:\n        /* \"#utility.yul\":7755:7761   */\n      dup3\n        /* \"#utility.yul\":7750:7753   */\n      dup2\n        /* \"#utility.yul\":7745:7748   */\n      dup4\n        /* \"#utility.yul\":7732:7762   */\n      calldatacopy\n        /* \"#utility.yul\":7817:7818   */\n      0x00\n        /* \"#utility.yul\":7808:7814   */\n      dup4\n        /* \"#utility.yul\":7803:7806   */\n      dup4\n        /* \"#utility.yul\":7799:7815   */\n      add\n        /* \"#utility.yul\":7792:7819   */\n      mstore\n        /* \"#utility.yul\":7671:7825   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7831:8241   */\n    tag_253:\n        /* \"#utility.yul\":7908:7913   */\n      0x00\n        /* \"#utility.yul\":7933:7998   */\n      tag_387\n        /* \"#utility.yul\":7949:7997   */\n      tag_388\n        /* \"#utility.yul\":7990:7996   */\n      dup5\n        /* \"#utility.yul\":7949:7997   */\n      tag_251\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":7933:7998   */\n      tag_245\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":7924:7998   */\n      swap1\n      pop\n        /* \"#utility.yul\":8021:8027   */\n      dup3\n        /* \"#utility.yul\":8014:8019   */\n      dup2\n        /* \"#utility.yul\":8007:8028   */\n      mstore\n        /* \"#utility.yul\":8059:8063   */\n      0x20\n        /* \"#utility.yul\":8052:8057   */\n      dup2\n        /* \"#utility.yul\":8048:8064   */\n      add\n        /* \"#utility.yul\":8097:8100   */\n      dup5\n        /* \"#utility.yul\":8088:8094   */\n      dup5\n        /* \"#utility.yul\":8083:8086   */\n      dup5\n        /* \"#utility.yul\":8079:8095   */\n      add\n        /* \"#utility.yul\":8076:8101   */\n      gt\n        /* \"#utility.yul\":8073:8185   */\n      iszero\n      tag_389\n      jumpi\n        /* \"#utility.yul\":8104:8183   */\n      tag_390\n      tag_250\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":8073:8185   */\n    tag_389:\n        /* \"#utility.yul\":8194:8235   */\n      tag_391\n        /* \"#utility.yul\":8228:8234   */\n      dup5\n        /* \"#utility.yul\":8223:8226   */\n      dup3\n        /* \"#utility.yul\":8218:8221   */\n      dup6\n        /* \"#utility.yul\":8194:8235   */\n      tag_252\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":7914:8241   */\n      pop\n        /* \"#utility.yul\":7831:8241   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8260:8598   */\n    tag_254:\n        /* \"#utility.yul\":8315:8320   */\n      0x00\n        /* \"#utility.yul\":8364:8367   */\n      dup3\n        /* \"#utility.yul\":8357:8361   */\n      0x1f\n        /* \"#utility.yul\":8349:8355   */\n      dup4\n        /* \"#utility.yul\":8345:8362   */\n      add\n        /* \"#utility.yul\":8341:8368   */\n      slt\n        /* \"#utility.yul\":8331:8453   */\n      tag_393\n      jumpi\n        /* \"#utility.yul\":8372:8451   */\n      tag_394\n      tag_243\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":8331:8453   */\n    tag_393:\n        /* \"#utility.yul\":8489:8495   */\n      dup2\n        /* \"#utility.yul\":8476:8496   */\n      calldataload\n        /* \"#utility.yul\":8514:8592   */\n      tag_395\n        /* \"#utility.yul\":8588:8591   */\n      dup5\n        /* \"#utility.yul\":8580:8586   */\n      dup3\n        /* \"#utility.yul\":8573:8577   */\n      0x20\n        /* \"#utility.yul\":8565:8571   */\n      dup7\n        /* \"#utility.yul\":8561:8578   */\n      add\n        /* \"#utility.yul\":8514:8592   */\n      tag_253\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":8505:8592   */\n      swap2\n      pop\n        /* \"#utility.yul\":8321:8598   */\n      pop\n        /* \"#utility.yul\":8260:8598   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8604:10113   */\n    tag_32:\n        /* \"#utility.yul\":8758:8764   */\n      0x00\n        /* \"#utility.yul\":8766:8772   */\n      dup1\n        /* \"#utility.yul\":8774:8780   */\n      0x00\n        /* \"#utility.yul\":8782:8788   */\n      dup1\n        /* \"#utility.yul\":8790:8796   */\n      0x00\n        /* \"#utility.yul\":8839:8842   */\n      0xa0\n        /* \"#utility.yul\":8827:8836   */\n      dup7\n        /* \"#utility.yul\":8818:8825   */\n      dup9\n        /* \"#utility.yul\":8814:8837   */\n      sub\n        /* \"#utility.yul\":8810:8843   */\n      slt\n        /* \"#utility.yul\":8807:8927   */\n      iszero\n      tag_397\n      jumpi\n        /* \"#utility.yul\":8846:8925   */\n      tag_398\n      tag_223\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":8807:8927   */\n    tag_397:\n        /* \"#utility.yul\":8966:8967   */\n      0x00\n        /* \"#utility.yul\":8991:9044   */\n      tag_399\n        /* \"#utility.yul\":9036:9043   */\n      dup9\n        /* \"#utility.yul\":9027:9033   */\n      dup3\n        /* \"#utility.yul\":9016:9025   */\n      dup10\n        /* \"#utility.yul\":9012:9034   */\n      add\n        /* \"#utility.yul\":8991:9044   */\n      tag_228\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":8981:9044   */\n      swap6\n      pop\n        /* \"#utility.yul\":8937:9054   */\n      pop\n        /* \"#utility.yul\":9093:9095   */\n      0x20\n        /* \"#utility.yul\":9119:9172   */\n      tag_400\n        /* \"#utility.yul\":9164:9171   */\n      dup9\n        /* \"#utility.yul\":9155:9161   */\n      dup3\n        /* \"#utility.yul\":9144:9153   */\n      dup10\n        /* \"#utility.yul\":9140:9162   */\n      add\n        /* \"#utility.yul\":9119:9172   */\n      tag_228\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":9109:9172   */\n      swap5\n      pop\n        /* \"#utility.yul\":9064:9182   */\n      pop\n        /* \"#utility.yul\":9249:9251   */\n      0x40\n        /* \"#utility.yul\":9238:9247   */\n      dup7\n        /* \"#utility.yul\":9234:9252   */\n      add\n        /* \"#utility.yul\":9221:9253   */\n      calldataload\n        /* \"#utility.yul\":9280:9298   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9272:9278   */\n      dup2\n        /* \"#utility.yul\":9269:9299   */\n      gt\n        /* \"#utility.yul\":9266:9383   */\n      iszero\n      tag_401\n      jumpi\n        /* \"#utility.yul\":9302:9381   */\n      tag_402\n      tag_224\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":9266:9383   */\n    tag_401:\n        /* \"#utility.yul\":9407:9485   */\n      tag_403\n        /* \"#utility.yul\":9477:9484   */\n      dup9\n        /* \"#utility.yul\":9468:9474   */\n      dup3\n        /* \"#utility.yul\":9457:9466   */\n      dup10\n        /* \"#utility.yul\":9453:9475   */\n      add\n        /* \"#utility.yul\":9407:9485   */\n      tag_249\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":9397:9485   */\n      swap4\n      pop\n        /* \"#utility.yul\":9192:9495   */\n      pop\n        /* \"#utility.yul\":9562:9564   */\n      0x60\n        /* \"#utility.yul\":9551:9560   */\n      dup7\n        /* \"#utility.yul\":9547:9565   */\n      add\n        /* \"#utility.yul\":9534:9566   */\n      calldataload\n        /* \"#utility.yul\":9593:9611   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9585:9591   */\n      dup2\n        /* \"#utility.yul\":9582:9612   */\n      gt\n        /* \"#utility.yul\":9579:9696   */\n      iszero\n      tag_404\n      jumpi\n        /* \"#utility.yul\":9615:9694   */\n      tag_405\n      tag_224\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":9579:9696   */\n    tag_404:\n        /* \"#utility.yul\":9720:9798   */\n      tag_406\n        /* \"#utility.yul\":9790:9797   */\n      dup9\n        /* \"#utility.yul\":9781:9787   */\n      dup3\n        /* \"#utility.yul\":9770:9779   */\n      dup10\n        /* \"#utility.yul\":9766:9788   */\n      add\n        /* \"#utility.yul\":9720:9798   */\n      tag_249\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":9710:9798   */\n      swap3\n      pop\n        /* \"#utility.yul\":9505:9808   */\n      pop\n        /* \"#utility.yul\":9875:9878   */\n      0x80\n        /* \"#utility.yul\":9864:9873   */\n      dup7\n        /* \"#utility.yul\":9860:9879   */\n      add\n        /* \"#utility.yul\":9847:9880   */\n      calldataload\n        /* \"#utility.yul\":9907:9925   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9899:9905   */\n      dup2\n        /* \"#utility.yul\":9896:9926   */\n      gt\n        /* \"#utility.yul\":9893:10010   */\n      iszero\n      tag_407\n      jumpi\n        /* \"#utility.yul\":9929:10008   */\n      tag_408\n      tag_224\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":9893:10010   */\n    tag_407:\n        /* \"#utility.yul\":10034:10096   */\n      tag_409\n        /* \"#utility.yul\":10088:10095   */\n      dup9\n        /* \"#utility.yul\":10079:10085   */\n      dup3\n        /* \"#utility.yul\":10068:10077   */\n      dup10\n        /* \"#utility.yul\":10064:10086   */\n      add\n        /* \"#utility.yul\":10034:10096   */\n      tag_254\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":10024:10096   */\n      swap2\n      pop\n        /* \"#utility.yul\":9818:10106   */\n      pop\n        /* \"#utility.yul\":8604:10113   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10119:10430   */\n    tag_255:\n        /* \"#utility.yul\":10196:10200   */\n      0x00\n        /* \"#utility.yul\":10286:10304   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10278:10284   */\n      dup3\n        /* \"#utility.yul\":10275:10305   */\n      gt\n        /* \"#utility.yul\":10272:10328   */\n      iszero\n      tag_411\n      jumpi\n        /* \"#utility.yul\":10308:10326   */\n      tag_412\n      tag_86\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":10272:10328   */\n    tag_411:\n        /* \"#utility.yul\":10358:10362   */\n      0x20\n        /* \"#utility.yul\":10350:10356   */\n      dup3\n        /* \"#utility.yul\":10346:10363   */\n      mul\n        /* \"#utility.yul\":10338:10363   */\n      swap1\n      pop\n        /* \"#utility.yul\":10418:10422   */\n      0x20\n        /* \"#utility.yul\":10412:10416   */\n      dup2\n        /* \"#utility.yul\":10408:10423   */\n      add\n        /* \"#utility.yul\":10400:10423   */\n      swap1\n      pop\n        /* \"#utility.yul\":10119:10430   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10453:11163   */\n    tag_256:\n        /* \"#utility.yul\":10549:10554   */\n      0x00\n        /* \"#utility.yul\":10574:10655   */\n      tag_414\n        /* \"#utility.yul\":10590:10654   */\n      tag_415\n        /* \"#utility.yul\":10647:10653   */\n      dup5\n        /* \"#utility.yul\":10590:10654   */\n      tag_255\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":10574:10655   */\n      tag_245\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":10565:10655   */\n      swap1\n      pop\n        /* \"#utility.yul\":10675:10680   */\n      dup1\n        /* \"#utility.yul\":10704:10710   */\n      dup4\n        /* \"#utility.yul\":10697:10702   */\n      dup3\n        /* \"#utility.yul\":10690:10711   */\n      mstore\n        /* \"#utility.yul\":10738:10742   */\n      0x20\n        /* \"#utility.yul\":10731:10736   */\n      dup3\n        /* \"#utility.yul\":10727:10743   */\n      add\n        /* \"#utility.yul\":10720:10743   */\n      swap1\n      pop\n        /* \"#utility.yul\":10791:10795   */\n      0x20\n        /* \"#utility.yul\":10783:10789   */\n      dup5\n        /* \"#utility.yul\":10779:10796   */\n      mul\n        /* \"#utility.yul\":10771:10777   */\n      dup4\n        /* \"#utility.yul\":10767:10797   */\n      add\n        /* \"#utility.yul\":10820:10823   */\n      dup6\n        /* \"#utility.yul\":10812:10818   */\n      dup2\n        /* \"#utility.yul\":10809:10824   */\n      gt\n        /* \"#utility.yul\":10806:10928   */\n      iszero\n      tag_416\n      jumpi\n        /* \"#utility.yul\":10839:10918   */\n      tag_417\n      tag_247\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":10806:10928   */\n    tag_416:\n        /* \"#utility.yul\":10954:10960   */\n      dup4\n        /* \"#utility.yul\":10937:11157   */\n    tag_418:\n        /* \"#utility.yul\":10971:10977   */\n      dup2\n        /* \"#utility.yul\":10966:10969   */\n      dup2\n        /* \"#utility.yul\":10963:10978   */\n      lt\n        /* \"#utility.yul\":10937:11157   */\n      iszero\n      tag_420\n      jumpi\n        /* \"#utility.yul\":11046:11049   */\n      dup1\n        /* \"#utility.yul\":11075:11112   */\n      tag_421\n        /* \"#utility.yul\":11108:11111   */\n      dup9\n        /* \"#utility.yul\":11096:11106   */\n      dup3\n        /* \"#utility.yul\":11075:11112   */\n      tag_228\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":11070:11073   */\n      dup5\n        /* \"#utility.yul\":11063:11113   */\n      mstore\n        /* \"#utility.yul\":11142:11146   */\n      0x20\n        /* \"#utility.yul\":11137:11140   */\n      dup5\n        /* \"#utility.yul\":11133:11147   */\n      add\n        /* \"#utility.yul\":11126:11147   */\n      swap4\n      pop\n        /* \"#utility.yul\":11013:11157   */\n      pop\n        /* \"#utility.yul\":10997:11001   */\n      0x20\n        /* \"#utility.yul\":10992:10995   */\n      dup2\n        /* \"#utility.yul\":10988:11002   */\n      add\n        /* \"#utility.yul\":10981:11002   */\n      swap1\n      pop\n        /* \"#utility.yul\":10937:11157   */\n      jump(tag_418)\n    tag_420:\n        /* \"#utility.yul\":10941:10962   */\n      pop\n        /* \"#utility.yul\":10555:11163   */\n      pop\n      pop\n        /* \"#utility.yul\":10453:11163   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11186:11556   */\n    tag_257:\n        /* \"#utility.yul\":11257:11262   */\n      0x00\n        /* \"#utility.yul\":11306:11309   */\n      dup3\n        /* \"#utility.yul\":11299:11303   */\n      0x1f\n        /* \"#utility.yul\":11291:11297   */\n      dup4\n        /* \"#utility.yul\":11287:11304   */\n      add\n        /* \"#utility.yul\":11283:11310   */\n      slt\n        /* \"#utility.yul\":11273:11395   */\n      tag_423\n      jumpi\n        /* \"#utility.yul\":11314:11393   */\n      tag_424\n      tag_243\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":11273:11395   */\n    tag_423:\n        /* \"#utility.yul\":11431:11437   */\n      dup2\n        /* \"#utility.yul\":11418:11438   */\n      calldataload\n        /* \"#utility.yul\":11456:11550   */\n      tag_425\n        /* \"#utility.yul\":11546:11549   */\n      dup5\n        /* \"#utility.yul\":11538:11544   */\n      dup3\n        /* \"#utility.yul\":11531:11535   */\n      0x20\n        /* \"#utility.yul\":11523:11529   */\n      dup7\n        /* \"#utility.yul\":11519:11536   */\n      add\n        /* \"#utility.yul\":11456:11550   */\n      tag_256\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":11447:11550   */\n      swap2\n      pop\n        /* \"#utility.yul\":11263:11556   */\n      pop\n        /* \"#utility.yul\":11186:11556   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11562:12456   */\n    tag_36:\n        /* \"#utility.yul\":11680:11686   */\n      0x00\n        /* \"#utility.yul\":11688:11694   */\n      dup1\n        /* \"#utility.yul\":11737:11739   */\n      0x40\n        /* \"#utility.yul\":11725:11734   */\n      dup4\n        /* \"#utility.yul\":11716:11723   */\n      dup6\n        /* \"#utility.yul\":11712:11735   */\n      sub\n        /* \"#utility.yul\":11708:11740   */\n      slt\n        /* \"#utility.yul\":11705:11824   */\n      iszero\n      tag_427\n      jumpi\n        /* \"#utility.yul\":11743:11822   */\n      tag_428\n      tag_223\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":11705:11824   */\n    tag_427:\n        /* \"#utility.yul\":11891:11892   */\n      0x00\n        /* \"#utility.yul\":11880:11889   */\n      dup4\n        /* \"#utility.yul\":11876:11893   */\n      add\n        /* \"#utility.yul\":11863:11894   */\n      calldataload\n        /* \"#utility.yul\":11921:11939   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":11913:11919   */\n      dup2\n        /* \"#utility.yul\":11910:11940   */\n      gt\n        /* \"#utility.yul\":11907:12024   */\n      iszero\n      tag_429\n      jumpi\n        /* \"#utility.yul\":11943:12022   */\n      tag_430\n      tag_224\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":11907:12024   */\n    tag_429:\n        /* \"#utility.yul\":12048:12126   */\n      tag_431\n        /* \"#utility.yul\":12118:12125   */\n      dup6\n        /* \"#utility.yul\":12109:12115   */\n      dup3\n        /* \"#utility.yul\":12098:12107   */\n      dup7\n        /* \"#utility.yul\":12094:12116   */\n      add\n        /* \"#utility.yul\":12048:12126   */\n      tag_257\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":12038:12126   */\n      swap3\n      pop\n        /* \"#utility.yul\":11834:12136   */\n      pop\n        /* \"#utility.yul\":12203:12205   */\n      0x20\n        /* \"#utility.yul\":12192:12201   */\n      dup4\n        /* \"#utility.yul\":12188:12206   */\n      add\n        /* \"#utility.yul\":12175:12207   */\n      calldataload\n        /* \"#utility.yul\":12234:12252   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":12226:12232   */\n      dup2\n        /* \"#utility.yul\":12223:12253   */\n      gt\n        /* \"#utility.yul\":12220:12337   */\n      iszero\n      tag_432\n      jumpi\n        /* \"#utility.yul\":12256:12335   */\n      tag_433\n      tag_224\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":12220:12337   */\n    tag_432:\n        /* \"#utility.yul\":12361:12439   */\n      tag_434\n        /* \"#utility.yul\":12431:12438   */\n      dup6\n        /* \"#utility.yul\":12422:12428   */\n      dup3\n        /* \"#utility.yul\":12411:12420   */\n      dup7\n        /* \"#utility.yul\":12407:12429   */\n      add\n        /* \"#utility.yul\":12361:12439   */\n      tag_249\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":12351:12439   */\n      swap2\n      pop\n        /* \"#utility.yul\":12146:12449   */\n      pop\n        /* \"#utility.yul\":11562:12456   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12462:12576   */\n    tag_258:\n        /* \"#utility.yul\":12529:12535   */\n      0x00\n        /* \"#utility.yul\":12563:12568   */\n      dup2\n        /* \"#utility.yul\":12557:12569   */\n      mload\n        /* \"#utility.yul\":12547:12569   */\n      swap1\n      pop\n        /* \"#utility.yul\":12462:12576   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12582:12766   */\n    tag_259:\n        /* \"#utility.yul\":12681:12692   */\n      0x00\n        /* \"#utility.yul\":12715:12721   */\n      dup3\n        /* \"#utility.yul\":12710:12713   */\n      dup3\n        /* \"#utility.yul\":12703:12722   */\n      mstore\n        /* \"#utility.yul\":12755:12759   */\n      0x20\n        /* \"#utility.yul\":12750:12753   */\n      dup3\n        /* \"#utility.yul\":12746:12760   */\n      add\n        /* \"#utility.yul\":12731:12760   */\n      swap1\n      pop\n        /* \"#utility.yul\":12582:12766   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12772:12904   */\n    tag_260:\n        /* \"#utility.yul\":12839:12843   */\n      0x00\n        /* \"#utility.yul\":12862:12865   */\n      dup2\n        /* \"#utility.yul\":12854:12865   */\n      swap1\n      pop\n        /* \"#utility.yul\":12892:12896   */\n      0x20\n        /* \"#utility.yul\":12887:12890   */\n      dup3\n        /* \"#utility.yul\":12883:12897   */\n      add\n        /* \"#utility.yul\":12875:12897   */\n      swap1\n      pop\n        /* \"#utility.yul\":12772:12904   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12910:13018   */\n    tag_261:\n        /* \"#utility.yul\":12987:13011   */\n      tag_439\n        /* \"#utility.yul\":13005:13010   */\n      dup2\n        /* \"#utility.yul\":12987:13011   */\n      tag_229\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":12982:12985   */\n      dup3\n        /* \"#utility.yul\":12975:13012   */\n      mstore\n        /* \"#utility.yul\":12910:13018   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13024:13203   */\n    tag_262:\n        /* \"#utility.yul\":13093:13103   */\n      0x00\n        /* \"#utility.yul\":13114:13160   */\n      tag_441\n        /* \"#utility.yul\":13156:13159   */\n      dup4\n        /* \"#utility.yul\":13148:13154   */\n      dup4\n        /* \"#utility.yul\":13114:13160   */\n      tag_261\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":13192:13196   */\n      0x20\n        /* \"#utility.yul\":13187:13190   */\n      dup4\n        /* \"#utility.yul\":13183:13197   */\n      add\n        /* \"#utility.yul\":13169:13197   */\n      swap1\n      pop\n        /* \"#utility.yul\":13024:13203   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13209:13322   */\n    tag_263:\n        /* \"#utility.yul\":13279:13283   */\n      0x00\n        /* \"#utility.yul\":13311:13315   */\n      0x20\n        /* \"#utility.yul\":13306:13309   */\n      dup3\n        /* \"#utility.yul\":13302:13316   */\n      add\n        /* \"#utility.yul\":13294:13316   */\n      swap1\n      pop\n        /* \"#utility.yul\":13209:13322   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13358:14090   */\n    tag_264:\n        /* \"#utility.yul\":13477:13480   */\n      0x00\n        /* \"#utility.yul\":13506:13560   */\n      tag_444\n        /* \"#utility.yul\":13554:13559   */\n      dup3\n        /* \"#utility.yul\":13506:13560   */\n      tag_258\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":13576:13662   */\n      tag_445\n        /* \"#utility.yul\":13655:13661   */\n      dup2\n        /* \"#utility.yul\":13650:13653   */\n      dup6\n        /* \"#utility.yul\":13576:13662   */\n      tag_259\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":13569:13662   */\n      swap4\n      pop\n        /* \"#utility.yul\":13686:13742   */\n      tag_446\n        /* \"#utility.yul\":13736:13741   */\n      dup4\n        /* \"#utility.yul\":13686:13742   */\n      tag_260\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":13765:13772   */\n      dup1\n        /* \"#utility.yul\":13796:13797   */\n      0x00\n        /* \"#utility.yul\":13781:14065   */\n    tag_447:\n        /* \"#utility.yul\":13806:13812   */\n      dup4\n        /* \"#utility.yul\":13803:13804   */\n      dup2\n        /* \"#utility.yul\":13800:13813   */\n      lt\n        /* \"#utility.yul\":13781:14065   */\n      iszero\n      tag_449\n      jumpi\n        /* \"#utility.yul\":13882:13888   */\n      dup2\n        /* \"#utility.yul\":13876:13889   */\n      mload\n        /* \"#utility.yul\":13909:13972   */\n      tag_450\n        /* \"#utility.yul\":13968:13971   */\n      dup9\n        /* \"#utility.yul\":13953:13966   */\n      dup3\n        /* \"#utility.yul\":13909:13972   */\n      tag_262\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":13902:13972   */\n      swap8\n      pop\n        /* \"#utility.yul\":13995:14055   */\n      tag_451\n        /* \"#utility.yul\":14048:14054   */\n      dup4\n        /* \"#utility.yul\":13995:14055   */\n      tag_263\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":13985:14055   */\n      swap3\n      pop\n        /* \"#utility.yul\":13841:14065   */\n      pop\n        /* \"#utility.yul\":13828:13829   */\n      0x01\n        /* \"#utility.yul\":13825:13826   */\n      dup2\n        /* \"#utility.yul\":13821:13830   */\n      add\n        /* \"#utility.yul\":13816:13830   */\n      swap1\n      pop\n        /* \"#utility.yul\":13781:14065   */\n      jump(tag_447)\n    tag_449:\n        /* \"#utility.yul\":13785:13799   */\n      pop\n        /* \"#utility.yul\":14081:14084   */\n      dup6\n        /* \"#utility.yul\":14074:14084   */\n      swap4\n      pop\n        /* \"#utility.yul\":13482:14090   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":13358:14090   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14096:14469   */\n    tag_39:\n        /* \"#utility.yul\":14239:14243   */\n      0x00\n        /* \"#utility.yul\":14277:14279   */\n      0x20\n        /* \"#utility.yul\":14266:14275   */\n      dup3\n        /* \"#utility.yul\":14262:14280   */\n      add\n        /* \"#utility.yul\":14254:14280   */\n      swap1\n      pop\n        /* \"#utility.yul\":14326:14335   */\n      dup2\n        /* \"#utility.yul\":14320:14324   */\n      dup2\n        /* \"#utility.yul\":14316:14336   */\n      sub\n        /* \"#utility.yul\":14312:14313   */\n      0x00\n        /* \"#utility.yul\":14301:14310   */\n      dup4\n        /* \"#utility.yul\":14297:14314   */\n      add\n        /* \"#utility.yul\":14290:14337   */\n      mstore\n        /* \"#utility.yul\":14354:14462   */\n      tag_453\n        /* \"#utility.yul\":14457:14461   */\n      dup2\n        /* \"#utility.yul\":14448:14454   */\n      dup5\n        /* \"#utility.yul\":14354:14462   */\n      tag_264\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":14346:14462   */\n      swap1\n      pop\n        /* \"#utility.yul\":14096:14469   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14475:14591   */\n    tag_265:\n        /* \"#utility.yul\":14545:14566   */\n      tag_455\n        /* \"#utility.yul\":14560:14565   */\n      dup2\n        /* \"#utility.yul\":14545:14566   */\n      tag_236\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":14538:14543   */\n      dup2\n        /* \"#utility.yul\":14535:14567   */\n      eq\n        /* \"#utility.yul\":14525:14585   */\n      tag_456\n      jumpi\n        /* \"#utility.yul\":14581:14582   */\n      0x00\n        /* \"#utility.yul\":14578:14579   */\n      dup1\n        /* \"#utility.yul\":14571:14583   */\n      revert\n        /* \"#utility.yul\":14525:14585   */\n    tag_456:\n        /* \"#utility.yul\":14475:14591   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14597:14730   */\n    tag_266:\n        /* \"#utility.yul\":14640:14645   */\n      0x00\n        /* \"#utility.yul\":14678:14684   */\n      dup2\n        /* \"#utility.yul\":14665:14685   */\n      calldataload\n        /* \"#utility.yul\":14656:14685   */\n      swap1\n      pop\n        /* \"#utility.yul\":14694:14724   */\n      tag_458\n        /* \"#utility.yul\":14718:14723   */\n      dup2\n        /* \"#utility.yul\":14694:14724   */\n      tag_265\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":14597:14730   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14736:15204   */\n    tag_42:\n        /* \"#utility.yul\":14801:14807   */\n      0x00\n        /* \"#utility.yul\":14809:14815   */\n      dup1\n        /* \"#utility.yul\":14858:14860   */\n      0x40\n        /* \"#utility.yul\":14846:14855   */\n      dup4\n        /* \"#utility.yul\":14837:14844   */\n      dup6\n        /* \"#utility.yul\":14833:14856   */\n      sub\n        /* \"#utility.yul\":14829:14861   */\n      slt\n        /* \"#utility.yul\":14826:14945   */\n      iszero\n      tag_460\n      jumpi\n        /* \"#utility.yul\":14864:14943   */\n      tag_461\n      tag_223\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":14826:14945   */\n    tag_460:\n        /* \"#utility.yul\":14984:14985   */\n      0x00\n        /* \"#utility.yul\":15009:15062   */\n      tag_462\n        /* \"#utility.yul\":15054:15061   */\n      dup6\n        /* \"#utility.yul\":15045:15051   */\n      dup3\n        /* \"#utility.yul\":15034:15043   */\n      dup7\n        /* \"#utility.yul\":15030:15052   */\n      add\n        /* \"#utility.yul\":15009:15062   */\n      tag_228\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":14999:15062   */\n      swap3\n      pop\n        /* \"#utility.yul\":14955:15072   */\n      pop\n        /* \"#utility.yul\":15111:15113   */\n      0x20\n        /* \"#utility.yul\":15137:15187   */\n      tag_463\n        /* \"#utility.yul\":15179:15186   */\n      dup6\n        /* \"#utility.yul\":15170:15176   */\n      dup3\n        /* \"#utility.yul\":15159:15168   */\n      dup7\n        /* \"#utility.yul\":15155:15177   */\n      add\n        /* \"#utility.yul\":15137:15187   */\n      tag_266\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":15127:15187   */\n      swap2\n      pop\n        /* \"#utility.yul\":15082:15197   */\n      pop\n        /* \"#utility.yul\":14736:15204   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15210:15684   */\n    tag_46:\n        /* \"#utility.yul\":15278:15284   */\n      0x00\n        /* \"#utility.yul\":15286:15292   */\n      dup1\n        /* \"#utility.yul\":15335:15337   */\n      0x40\n        /* \"#utility.yul\":15323:15332   */\n      dup4\n        /* \"#utility.yul\":15314:15321   */\n      dup6\n        /* \"#utility.yul\":15310:15333   */\n      sub\n        /* \"#utility.yul\":15306:15338   */\n      slt\n        /* \"#utility.yul\":15303:15422   */\n      iszero\n      tag_465\n      jumpi\n        /* \"#utility.yul\":15341:15420   */\n      tag_466\n      tag_223\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":15303:15422   */\n    tag_465:\n        /* \"#utility.yul\":15461:15462   */\n      0x00\n        /* \"#utility.yul\":15486:15539   */\n      tag_467\n        /* \"#utility.yul\":15531:15538   */\n      dup6\n        /* \"#utility.yul\":15522:15528   */\n      dup3\n        /* \"#utility.yul\":15511:15520   */\n      dup7\n        /* \"#utility.yul\":15507:15529   */\n      add\n        /* \"#utility.yul\":15486:15539   */\n      tag_228\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":15476:15539   */\n      swap3\n      pop\n        /* \"#utility.yul\":15432:15549   */\n      pop\n        /* \"#utility.yul\":15588:15590   */\n      0x20\n        /* \"#utility.yul\":15614:15667   */\n      tag_468\n        /* \"#utility.yul\":15659:15666   */\n      dup6\n        /* \"#utility.yul\":15650:15656   */\n      dup3\n        /* \"#utility.yul\":15639:15648   */\n      dup7\n        /* \"#utility.yul\":15635:15657   */\n      add\n        /* \"#utility.yul\":15614:15667   */\n      tag_228\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":15604:15667   */\n      swap2\n      pop\n        /* \"#utility.yul\":15559:15677   */\n      pop\n        /* \"#utility.yul\":15210:15684   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15690:16779   */\n    tag_51:\n        /* \"#utility.yul\":15794:15800   */\n      0x00\n        /* \"#utility.yul\":15802:15808   */\n      dup1\n        /* \"#utility.yul\":15810:15816   */\n      0x00\n        /* \"#utility.yul\":15818:15824   */\n      dup1\n        /* \"#utility.yul\":15826:15832   */\n      0x00\n        /* \"#utility.yul\":15875:15878   */\n      0xa0\n        /* \"#utility.yul\":15863:15872   */\n      dup7\n        /* \"#utility.yul\":15854:15861   */\n      dup9\n        /* \"#utility.yul\":15850:15873   */\n      sub\n        /* \"#utility.yul\":15846:15879   */\n      slt\n        /* \"#utility.yul\":15843:15963   */\n      iszero\n      tag_470\n      jumpi\n        /* \"#utility.yul\":15882:15961   */\n      tag_471\n      tag_223\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":15843:15963   */\n    tag_470:\n        /* \"#utility.yul\":16002:16003   */\n      0x00\n        /* \"#utility.yul\":16027:16080   */\n      tag_472\n        /* \"#utility.yul\":16072:16079   */\n      dup9\n        /* \"#utility.yul\":16063:16069   */\n      dup3\n        /* \"#utility.yul\":16052:16061   */\n      dup10\n        /* \"#utility.yul\":16048:16070   */\n      add\n        /* \"#utility.yul\":16027:16080   */\n      tag_228\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":16017:16080   */\n      swap6\n      pop\n        /* \"#utility.yul\":15973:16090   */\n      pop\n        /* \"#utility.yul\":16129:16131   */\n      0x20\n        /* \"#utility.yul\":16155:16208   */\n      tag_473\n        /* \"#utility.yul\":16200:16207   */\n      dup9\n        /* \"#utility.yul\":16191:16197   */\n      dup3\n        /* \"#utility.yul\":16180:16189   */\n      dup10\n        /* \"#utility.yul\":16176:16198   */\n      add\n        /* \"#utility.yul\":16155:16208   */\n      tag_228\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":16145:16208   */\n      swap5\n      pop\n        /* \"#utility.yul\":16100:16218   */\n      pop\n        /* \"#utility.yul\":16257:16259   */\n      0x40\n        /* \"#utility.yul\":16283:16336   */\n      tag_474\n        /* \"#utility.yul\":16328:16335   */\n      dup9\n        /* \"#utility.yul\":16319:16325   */\n      dup3\n        /* \"#utility.yul\":16308:16317   */\n      dup10\n        /* \"#utility.yul\":16304:16326   */\n      add\n        /* \"#utility.yul\":16283:16336   */\n      tag_231\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":16273:16336   */\n      swap4\n      pop\n        /* \"#utility.yul\":16228:16346   */\n      pop\n        /* \"#utility.yul\":16385:16387   */\n      0x60\n        /* \"#utility.yul\":16411:16464   */\n      tag_475\n        /* \"#utility.yul\":16456:16463   */\n      dup9\n        /* \"#utility.yul\":16447:16453   */\n      dup3\n        /* \"#utility.yul\":16436:16445   */\n      dup10\n        /* \"#utility.yul\":16432:16454   */\n      add\n        /* \"#utility.yul\":16411:16464   */\n      tag_231\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":16401:16464   */\n      swap3\n      pop\n        /* \"#utility.yul\":16356:16474   */\n      pop\n        /* \"#utility.yul\":16541:16544   */\n      0x80\n        /* \"#utility.yul\":16530:16539   */\n      dup7\n        /* \"#utility.yul\":16526:16545   */\n      add\n        /* \"#utility.yul\":16513:16546   */\n      calldataload\n        /* \"#utility.yul\":16573:16591   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":16565:16571   */\n      dup2\n        /* \"#utility.yul\":16562:16592   */\n      gt\n        /* \"#utility.yul\":16559:16676   */\n      iszero\n      tag_476\n      jumpi\n        /* \"#utility.yul\":16595:16674   */\n      tag_477\n      tag_224\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":16559:16676   */\n    tag_476:\n        /* \"#utility.yul\":16700:16762   */\n      tag_478\n        /* \"#utility.yul\":16754:16761   */\n      dup9\n        /* \"#utility.yul\":16745:16751   */\n      dup3\n        /* \"#utility.yul\":16734:16743   */\n      dup10\n        /* \"#utility.yul\":16730:16752   */\n      add\n        /* \"#utility.yul\":16700:16762   */\n      tag_254\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":16690:16762   */\n      swap2\n      pop\n        /* \"#utility.yul\":16484:16772   */\n      pop\n        /* \"#utility.yul\":15690:16779   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16785:17014   */\n    tag_267:\n        /* \"#utility.yul\":16925:16959   */\n      0x455243313135353a2061646472657373207a65726f206973206e6f7420612076\n        /* \"#utility.yul\":16921:16922   */\n      0x00\n        /* \"#utility.yul\":16913:16919   */\n      dup3\n        /* \"#utility.yul\":16909:16923   */\n      add\n        /* \"#utility.yul\":16902:16960   */\n      mstore\n        /* \"#utility.yul\":16994:17006   */\n      0x616c6964206f776e657200000000000000000000000000000000000000000000\n        /* \"#utility.yul\":16989:16991   */\n      0x20\n        /* \"#utility.yul\":16981:16987   */\n      dup3\n        /* \"#utility.yul\":16977:16992   */\n      add\n        /* \"#utility.yul\":16970:17007   */\n      mstore\n        /* \"#utility.yul\":16785:17014   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17020:17386   */\n    tag_268:\n        /* \"#utility.yul\":17162:17165   */\n      0x00\n        /* \"#utility.yul\":17183:17250   */\n      tag_481\n        /* \"#utility.yul\":17247:17249   */\n      0x2a\n        /* \"#utility.yul\":17242:17245   */\n      dup4\n        /* \"#utility.yul\":17183:17250   */\n      tag_239\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":17176:17250   */\n      swap2\n      pop\n        /* \"#utility.yul\":17259:17352   */\n      tag_482\n        /* \"#utility.yul\":17348:17351   */\n      dup3\n        /* \"#utility.yul\":17259:17352   */\n      tag_267\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":17377:17379   */\n      0x40\n        /* \"#utility.yul\":17372:17375   */\n      dup3\n        /* \"#utility.yul\":17368:17380   */\n      add\n        /* \"#utility.yul\":17361:17380   */\n      swap1\n      pop\n        /* \"#utility.yul\":17020:17386   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17392:17811   */\n    tag_56:\n        /* \"#utility.yul\":17558:17562   */\n      0x00\n        /* \"#utility.yul\":17596:17598   */\n      0x20\n        /* \"#utility.yul\":17585:17594   */\n      dup3\n        /* \"#utility.yul\":17581:17599   */\n      add\n        /* \"#utility.yul\":17573:17599   */\n      swap1\n      pop\n        /* \"#utility.yul\":17645:17654   */\n      dup2\n        /* \"#utility.yul\":17639:17643   */\n      dup2\n        /* \"#utility.yul\":17635:17655   */\n      sub\n        /* \"#utility.yul\":17631:17632   */\n      0x00\n        /* \"#utility.yul\":17620:17629   */\n      dup4\n        /* \"#utility.yul\":17616:17633   */\n      add\n        /* \"#utility.yul\":17609:17656   */\n      mstore\n        /* \"#utility.yul\":17673:17804   */\n      tag_484\n        /* \"#utility.yul\":17799:17803   */\n      dup2\n        /* \"#utility.yul\":17673:17804   */\n      tag_268\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":17665:17804   */\n      swap1\n      pop\n        /* \"#utility.yul\":17392:17811   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17817:17997   */\n    tag_269:\n        /* \"#utility.yul\":17865:17942   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17862:17863   */\n      0x00\n        /* \"#utility.yul\":17855:17943   */\n      mstore\n        /* \"#utility.yul\":17962:17966   */\n      0x22\n        /* \"#utility.yul\":17959:17960   */\n      0x04\n        /* \"#utility.yul\":17952:17967   */\n      mstore\n        /* \"#utility.yul\":17986:17990   */\n      0x24\n        /* \"#utility.yul\":17983:17984   */\n      0x00\n        /* \"#utility.yul\":17976:17991   */\n      revert\n        /* \"#utility.yul\":18003:18323   */\n    tag_64:\n        /* \"#utility.yul\":18047:18053   */\n      0x00\n        /* \"#utility.yul\":18084:18085   */\n      0x02\n        /* \"#utility.yul\":18078:18082   */\n      dup3\n        /* \"#utility.yul\":18074:18086   */\n      div\n        /* \"#utility.yul\":18064:18086   */\n      swap1\n      pop\n        /* \"#utility.yul\":18131:18132   */\n      0x01\n        /* \"#utility.yul\":18125:18129   */\n      dup3\n        /* \"#utility.yul\":18121:18133   */\n      and\n        /* \"#utility.yul\":18152:18170   */\n      dup1\n        /* \"#utility.yul\":18142:18223   */\n      tag_487\n      jumpi\n        /* \"#utility.yul\":18208:18212   */\n      0x7f\n        /* \"#utility.yul\":18200:18206   */\n      dup3\n        /* \"#utility.yul\":18196:18213   */\n      and\n        /* \"#utility.yul\":18186:18213   */\n      swap2\n      pop\n        /* \"#utility.yul\":18142:18223   */\n    tag_487:\n        /* \"#utility.yul\":18270:18272   */\n      0x20\n        /* \"#utility.yul\":18262:18268   */\n      dup3\n        /* \"#utility.yul\":18259:18273   */\n      lt\n        /* \"#utility.yul\":18239:18257   */\n      dup2\n        /* \"#utility.yul\":18236:18274   */\n      eq\n        /* \"#utility.yul\":18233:18317   */\n      iszero\n      tag_488\n      jumpi\n        /* \"#utility.yul\":18289:18307   */\n      tag_489\n      tag_269\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":18233:18317   */\n    tag_488:\n        /* \"#utility.yul\":18054:18323   */\n      pop\n        /* \"#utility.yul\":18003:18323   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18329:18562   */\n    tag_270:\n        /* \"#utility.yul\":18469:18503   */\n      0x455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e\n        /* \"#utility.yul\":18465:18466   */\n      0x00\n        /* \"#utility.yul\":18457:18463   */\n      dup3\n        /* \"#utility.yul\":18453:18467   */\n      add\n        /* \"#utility.yul\":18446:18504   */\n      mstore\n        /* \"#utility.yul\":18538:18554   */\n      0x6572206f7220617070726f766564000000000000000000000000000000000000\n        /* \"#utility.yul\":18533:18535   */\n      0x20\n        /* \"#utility.yul\":18525:18531   */\n      dup3\n        /* \"#utility.yul\":18521:18536   */\n      add\n        /* \"#utility.yul\":18514:18555   */\n      mstore\n        /* \"#utility.yul\":18329:18562   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18568:18934   */\n    tag_271:\n        /* \"#utility.yul\":18710:18713   */\n      0x00\n        /* \"#utility.yul\":18731:18798   */\n      tag_492\n        /* \"#utility.yul\":18795:18797   */\n      0x2e\n        /* \"#utility.yul\":18790:18793   */\n      dup4\n        /* \"#utility.yul\":18731:18798   */\n      tag_239\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":18724:18798   */\n      swap2\n      pop\n        /* \"#utility.yul\":18807:18900   */\n      tag_493\n        /* \"#utility.yul\":18896:18899   */\n      dup3\n        /* \"#utility.yul\":18807:18900   */\n      tag_270\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":18925:18927   */\n      0x40\n        /* \"#utility.yul\":18920:18923   */\n      dup3\n        /* \"#utility.yul\":18916:18928   */\n      add\n        /* \"#utility.yul\":18909:18928   */\n      swap1\n      pop\n        /* \"#utility.yul\":18568:18934   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18940:19359   */\n    tag_77:\n        /* \"#utility.yul\":19106:19110   */\n      0x00\n        /* \"#utility.yul\":19144:19146   */\n      0x20\n        /* \"#utility.yul\":19133:19142   */\n      dup3\n        /* \"#utility.yul\":19129:19147   */\n      add\n        /* \"#utility.yul\":19121:19147   */\n      swap1\n      pop\n        /* \"#utility.yul\":19193:19202   */\n      dup2\n        /* \"#utility.yul\":19187:19191   */\n      dup2\n        /* \"#utility.yul\":19183:19203   */\n      sub\n        /* \"#utility.yul\":19179:19180   */\n      0x00\n        /* \"#utility.yul\":19168:19177   */\n      dup4\n        /* \"#utility.yul\":19164:19181   */\n      add\n        /* \"#utility.yul\":19157:19204   */\n      mstore\n        /* \"#utility.yul\":19221:19352   */\n      tag_495\n        /* \"#utility.yul\":19347:19351   */\n      dup2\n        /* \"#utility.yul\":19221:19352   */\n      tag_271\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":19213:19352   */\n      swap1\n      pop\n        /* \"#utility.yul\":18940:19359   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19365:19593   */\n    tag_272:\n        /* \"#utility.yul\":19505:19539   */\n      0x455243313135353a206163636f756e747320616e6420696473206c656e677468\n        /* \"#utility.yul\":19501:19502   */\n      0x00\n        /* \"#utility.yul\":19493:19499   */\n      dup3\n        /* \"#utility.yul\":19489:19503   */\n      add\n        /* \"#utility.yul\":19482:19540   */\n      mstore\n        /* \"#utility.yul\":19574:19585   */\n      0x206d69736d617463680000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":19569:19571   */\n      0x20\n        /* \"#utility.yul\":19561:19567   */\n      dup3\n        /* \"#utility.yul\":19557:19572   */\n      add\n        /* \"#utility.yul\":19550:19586   */\n      mstore\n        /* \"#utility.yul\":19365:19593   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19599:19965   */\n    tag_273:\n        /* \"#utility.yul\":19741:19744   */\n      0x00\n        /* \"#utility.yul\":19762:19829   */\n      tag_498\n        /* \"#utility.yul\":19826:19828   */\n      0x29\n        /* \"#utility.yul\":19821:19824   */\n      dup4\n        /* \"#utility.yul\":19762:19829   */\n      tag_239\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":19755:19829   */\n      swap2\n      pop\n        /* \"#utility.yul\":19838:19931   */\n      tag_499\n        /* \"#utility.yul\":19927:19930   */\n      dup3\n        /* \"#utility.yul\":19838:19931   */\n      tag_272\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":19956:19958   */\n      0x40\n        /* \"#utility.yul\":19951:19954   */\n      dup3\n        /* \"#utility.yul\":19947:19959   */\n      add\n        /* \"#utility.yul\":19940:19959   */\n      swap1\n      pop\n        /* \"#utility.yul\":19599:19965   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19971:20390   */\n    tag_83:\n        /* \"#utility.yul\":20137:20141   */\n      0x00\n        /* \"#utility.yul\":20175:20177   */\n      0x20\n        /* \"#utility.yul\":20164:20173   */\n      dup3\n        /* \"#utility.yul\":20160:20178   */\n      add\n        /* \"#utility.yul\":20152:20178   */\n      swap1\n      pop\n        /* \"#utility.yul\":20224:20233   */\n      dup2\n        /* \"#utility.yul\":20218:20222   */\n      dup2\n        /* \"#utility.yul\":20214:20234   */\n      sub\n        /* \"#utility.yul\":20210:20211   */\n      0x00\n        /* \"#utility.yul\":20199:20208   */\n      dup4\n        /* \"#utility.yul\":20195:20212   */\n      add\n        /* \"#utility.yul\":20188:20235   */\n      mstore\n        /* \"#utility.yul\":20252:20383   */\n      tag_501\n        /* \"#utility.yul\":20378:20382   */\n      dup2\n        /* \"#utility.yul\":20252:20383   */\n      tag_273\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":20244:20383   */\n      swap1\n      pop\n        /* \"#utility.yul\":19971:20390   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20396:20576   */\n    tag_94:\n        /* \"#utility.yul\":20444:20521   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":20441:20442   */\n      0x00\n        /* \"#utility.yul\":20434:20522   */\n      mstore\n        /* \"#utility.yul\":20541:20545   */\n      0x32\n        /* \"#utility.yul\":20538:20539   */\n      0x04\n        /* \"#utility.yul\":20531:20546   */\n      mstore\n        /* \"#utility.yul\":20565:20569   */\n      0x24\n        /* \"#utility.yul\":20562:20563   */\n      0x00\n        /* \"#utility.yul\":20555:20570   */\n      revert\n        /* \"#utility.yul\":20582:20762   */\n    tag_274:\n        /* \"#utility.yul\":20630:20707   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":20627:20628   */\n      0x00\n        /* \"#utility.yul\":20620:20708   */\n      mstore\n        /* \"#utility.yul\":20727:20731   */\n      0x11\n        /* \"#utility.yul\":20724:20725   */\n      0x04\n        /* \"#utility.yul\":20717:20732   */\n      mstore\n        /* \"#utility.yul\":20751:20755   */\n      0x24\n        /* \"#utility.yul\":20748:20749   */\n      0x00\n        /* \"#utility.yul\":20741:20756   */\n      revert\n        /* \"#utility.yul\":20768:21001   */\n    tag_100:\n        /* \"#utility.yul\":20807:20810   */\n      0x00\n        /* \"#utility.yul\":20830:20854   */\n      tag_505\n        /* \"#utility.yul\":20848:20853   */\n      dup3\n        /* \"#utility.yul\":20830:20854   */\n      tag_229\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":20821:20854   */\n      swap2\n      pop\n        /* \"#utility.yul\":20876:20942   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":20869:20874   */\n      dup3\n        /* \"#utility.yul\":20866:20943   */\n      eq\n        /* \"#utility.yul\":20863:20966   */\n      iszero\n      tag_506\n      jumpi\n        /* \"#utility.yul\":20946:20964   */\n      tag_507\n      tag_274\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":20863:20966   */\n    tag_506:\n        /* \"#utility.yul\":20993:20994   */\n      0x01\n        /* \"#utility.yul\":20986:20991   */\n      dup3\n        /* \"#utility.yul\":20982:20995   */\n      add\n        /* \"#utility.yul\":20975:20995   */\n      swap1\n      pop\n        /* \"#utility.yul\":20768:21001   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21007:21234   */\n    tag_275:\n        /* \"#utility.yul\":21147:21181   */\n      0x455243313135353a2069647320616e6420616d6f756e7473206c656e67746820\n        /* \"#utility.yul\":21143:21144   */\n      0x00\n        /* \"#utility.yul\":21135:21141   */\n      dup3\n        /* \"#utility.yul\":21131:21145   */\n      add\n        /* \"#utility.yul\":21124:21182   */\n      mstore\n        /* \"#utility.yul\":21216:21226   */\n      0x6d69736d61746368000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":21211:21213   */\n      0x20\n        /* \"#utility.yul\":21203:21209   */\n      dup3\n        /* \"#utility.yul\":21199:21214   */\n      add\n        /* \"#utility.yul\":21192:21227   */\n      mstore\n        /* \"#utility.yul\":21007:21234   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21240:21606   */\n    tag_276:\n        /* \"#utility.yul\":21382:21385   */\n      0x00\n        /* \"#utility.yul\":21403:21470   */\n      tag_510\n        /* \"#utility.yul\":21467:21469   */\n      0x28\n        /* \"#utility.yul\":21462:21465   */\n      dup4\n        /* \"#utility.yul\":21403:21470   */\n      tag_239\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":21396:21470   */\n      swap2\n      pop\n        /* \"#utility.yul\":21479:21572   */\n      tag_511\n        /* \"#utility.yul\":21568:21571   */\n      dup3\n        /* \"#utility.yul\":21479:21572   */\n      tag_275\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":21597:21599   */\n      0x40\n        /* \"#utility.yul\":21592:21595   */\n      dup3\n        /* \"#utility.yul\":21588:21600   */\n      add\n        /* \"#utility.yul\":21581:21600   */\n      swap1\n      pop\n        /* \"#utility.yul\":21240:21606   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21612:22031   */\n    tag_120:\n        /* \"#utility.yul\":21778:21782   */\n      0x00\n        /* \"#utility.yul\":21816:21818   */\n      0x20\n        /* \"#utility.yul\":21805:21814   */\n      dup3\n        /* \"#utility.yul\":21801:21819   */\n      add\n        /* \"#utility.yul\":21793:21819   */\n      swap1\n      pop\n        /* \"#utility.yul\":21865:21874   */\n      dup2\n        /* \"#utility.yul\":21859:21863   */\n      dup2\n        /* \"#utility.yul\":21855:21875   */\n      sub\n        /* \"#utility.yul\":21851:21852   */\n      0x00\n        /* \"#utility.yul\":21840:21849   */\n      dup4\n        /* \"#utility.yul\":21836:21853   */\n      add\n        /* \"#utility.yul\":21829:21876   */\n      mstore\n        /* \"#utility.yul\":21893:22024   */\n      tag_513\n        /* \"#utility.yul\":22019:22023   */\n      dup2\n        /* \"#utility.yul\":21893:22024   */\n      tag_276\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":21885:22024   */\n      swap1\n      pop\n        /* \"#utility.yul\":21612:22031   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22037:22261   */\n    tag_277:\n        /* \"#utility.yul\":22177:22211   */\n      0x455243313135353a207472616e7366657220746f20746865207a65726f206164\n        /* \"#utility.yul\":22173:22174   */\n      0x00\n        /* \"#utility.yul\":22165:22171   */\n      dup3\n        /* \"#utility.yul\":22161:22175   */\n      add\n        /* \"#utility.yul\":22154:22212   */\n      mstore\n        /* \"#utility.yul\":22246:22253   */\n      0x6472657373000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":22241:22243   */\n      0x20\n        /* \"#utility.yul\":22233:22239   */\n      dup3\n        /* \"#utility.yul\":22229:22244   */\n      add\n        /* \"#utility.yul\":22222:22254   */\n      mstore\n        /* \"#utility.yul\":22037:22261   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22267:22633   */\n    tag_278:\n        /* \"#utility.yul\":22409:22412   */\n      0x00\n        /* \"#utility.yul\":22430:22497   */\n      tag_516\n        /* \"#utility.yul\":22494:22496   */\n      0x25\n        /* \"#utility.yul\":22489:22492   */\n      dup4\n        /* \"#utility.yul\":22430:22497   */\n      tag_239\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":22423:22497   */\n      swap2\n      pop\n        /* \"#utility.yul\":22506:22599   */\n      tag_517\n        /* \"#utility.yul\":22595:22598   */\n      dup3\n        /* \"#utility.yul\":22506:22599   */\n      tag_277\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":22624:22626   */\n      0x40\n        /* \"#utility.yul\":22619:22622   */\n      dup3\n        /* \"#utility.yul\":22615:22627   */\n      add\n        /* \"#utility.yul\":22608:22627   */\n      swap1\n      pop\n        /* \"#utility.yul\":22267:22633   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22639:23058   */\n    tag_123:\n        /* \"#utility.yul\":22805:22809   */\n      0x00\n        /* \"#utility.yul\":22843:22845   */\n      0x20\n        /* \"#utility.yul\":22832:22841   */\n      dup3\n        /* \"#utility.yul\":22828:22846   */\n      add\n        /* \"#utility.yul\":22820:22846   */\n      swap1\n      pop\n        /* \"#utility.yul\":22892:22901   */\n      dup2\n        /* \"#utility.yul\":22886:22890   */\n      dup2\n        /* \"#utility.yul\":22882:22902   */\n      sub\n        /* \"#utility.yul\":22878:22879   */\n      0x00\n        /* \"#utility.yul\":22867:22876   */\n      dup4\n        /* \"#utility.yul\":22863:22880   */\n      add\n        /* \"#utility.yul\":22856:22903   */\n      mstore\n        /* \"#utility.yul\":22920:23051   */\n      tag_519\n        /* \"#utility.yul\":23046:23050   */\n      dup2\n        /* \"#utility.yul\":22920:23051   */\n      tag_278\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":22912:23051   */\n      swap1\n      pop\n        /* \"#utility.yul\":22639:23058   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23064:23293   */\n    tag_279:\n        /* \"#utility.yul\":23204:23238   */\n      0x455243313135353a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":23200:23201   */\n      0x00\n        /* \"#utility.yul\":23192:23198   */\n      dup3\n        /* \"#utility.yul\":23188:23202   */\n      add\n        /* \"#utility.yul\":23181:23239   */\n      mstore\n        /* \"#utility.yul\":23273:23285   */\n      0x72207472616e7366657200000000000000000000000000000000000000000000\n        /* \"#utility.yul\":23268:23270   */\n      0x20\n        /* \"#utility.yul\":23260:23266   */\n      dup3\n        /* \"#utility.yul\":23256:23271   */\n      add\n        /* \"#utility.yul\":23249:23286   */\n      mstore\n        /* \"#utility.yul\":23064:23293   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23299:23665   */\n    tag_280:\n        /* \"#utility.yul\":23441:23444   */\n      0x00\n        /* \"#utility.yul\":23462:23529   */\n      tag_522\n        /* \"#utility.yul\":23526:23528   */\n      0x2a\n        /* \"#utility.yul\":23521:23524   */\n      dup4\n        /* \"#utility.yul\":23462:23529   */\n      tag_239\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":23455:23529   */\n      swap2\n      pop\n        /* \"#utility.yul\":23538:23631   */\n      tag_523\n        /* \"#utility.yul\":23627:23630   */\n      dup3\n        /* \"#utility.yul\":23538:23631   */\n      tag_279\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":23656:23658   */\n      0x40\n        /* \"#utility.yul\":23651:23654   */\n      dup3\n        /* \"#utility.yul\":23647:23659   */\n      add\n        /* \"#utility.yul\":23640:23659   */\n      swap1\n      pop\n        /* \"#utility.yul\":23299:23665   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23671:24090   */\n    tag_136:\n        /* \"#utility.yul\":23837:23841   */\n      0x00\n        /* \"#utility.yul\":23875:23877   */\n      0x20\n        /* \"#utility.yul\":23864:23873   */\n      dup3\n        /* \"#utility.yul\":23860:23878   */\n      add\n        /* \"#utility.yul\":23852:23878   */\n      swap1\n      pop\n        /* \"#utility.yul\":23924:23933   */\n      dup2\n        /* \"#utility.yul\":23918:23922   */\n      dup2\n        /* \"#utility.yul\":23914:23934   */\n      sub\n        /* \"#utility.yul\":23910:23911   */\n      0x00\n        /* \"#utility.yul\":23899:23908   */\n      dup4\n        /* \"#utility.yul\":23895:23912   */\n      add\n        /* \"#utility.yul\":23888:23935   */\n      mstore\n        /* \"#utility.yul\":23952:24083   */\n      tag_525\n        /* \"#utility.yul\":24078:24082   */\n      dup2\n        /* \"#utility.yul\":23952:24083   */\n      tag_280\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":23944:24083   */\n      swap1\n      pop\n        /* \"#utility.yul\":23671:24090   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24096:24401   */\n    tag_138:\n        /* \"#utility.yul\":24136:24139   */\n      0x00\n        /* \"#utility.yul\":24155:24175   */\n      tag_527\n        /* \"#utility.yul\":24173:24174   */\n      dup3\n        /* \"#utility.yul\":24155:24175   */\n      tag_229\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":24150:24175   */\n      swap2\n      pop\n        /* \"#utility.yul\":24189:24209   */\n      tag_528\n        /* \"#utility.yul\":24207:24208   */\n      dup4\n        /* \"#utility.yul\":24189:24209   */\n      tag_229\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":24184:24209   */\n      swap3\n      pop\n        /* \"#utility.yul\":24343:24344   */\n      dup3\n        /* \"#utility.yul\":24275:24341   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":24271:24345   */\n      sub\n        /* \"#utility.yul\":24268:24269   */\n      dup3\n        /* \"#utility.yul\":24265:24346   */\n      gt\n        /* \"#utility.yul\":24262:24369   */\n      iszero\n      tag_529\n      jumpi\n        /* \"#utility.yul\":24349:24367   */\n      tag_530\n      tag_274\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":24262:24369   */\n    tag_529:\n        /* \"#utility.yul\":24393:24394   */\n      dup3\n        /* \"#utility.yul\":24390:24391   */\n      dup3\n        /* \"#utility.yul\":24386:24395   */\n      add\n        /* \"#utility.yul\":24379:24395   */\n      swap1\n      pop\n        /* \"#utility.yul\":24096:24401   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24407:25041   */\n    tag_141:\n        /* \"#utility.yul\":24628:24632   */\n      0x00\n        /* \"#utility.yul\":24666:24668   */\n      0x40\n        /* \"#utility.yul\":24655:24664   */\n      dup3\n        /* \"#utility.yul\":24651:24669   */\n      add\n        /* \"#utility.yul\":24643:24669   */\n      swap1\n      pop\n        /* \"#utility.yul\":24715:24724   */\n      dup2\n        /* \"#utility.yul\":24709:24713   */\n      dup2\n        /* \"#utility.yul\":24705:24725   */\n      sub\n        /* \"#utility.yul\":24701:24702   */\n      0x00\n        /* \"#utility.yul\":24690:24699   */\n      dup4\n        /* \"#utility.yul\":24686:24703   */\n      add\n        /* \"#utility.yul\":24679:24726   */\n      mstore\n        /* \"#utility.yul\":24743:24851   */\n      tag_532\n        /* \"#utility.yul\":24846:24850   */\n      dup2\n        /* \"#utility.yul\":24837:24843   */\n      dup6\n        /* \"#utility.yul\":24743:24851   */\n      tag_264\n      jump\t// in\n    tag_532:\n        /* \"#utility.yul\":24735:24851   */\n      swap1\n      pop\n        /* \"#utility.yul\":24898:24907   */\n      dup2\n        /* \"#utility.yul\":24892:24896   */\n      dup2\n        /* \"#utility.yul\":24888:24908   */\n      sub\n        /* \"#utility.yul\":24883:24885   */\n      0x20\n        /* \"#utility.yul\":24872:24881   */\n      dup4\n        /* \"#utility.yul\":24868:24886   */\n      add\n        /* \"#utility.yul\":24861:24909   */\n      mstore\n        /* \"#utility.yul\":24926:25034   */\n      tag_533\n        /* \"#utility.yul\":25029:25033   */\n      dup2\n        /* \"#utility.yul\":25020:25026   */\n      dup5\n        /* \"#utility.yul\":24926:25034   */\n      tag_264\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":24918:25034   */\n      swap1\n      pop\n        /* \"#utility.yul\":24407:25041   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25047:25275   */\n    tag_281:\n        /* \"#utility.yul\":25187:25221   */\n      0x455243313135353a2073657474696e6720617070726f76616c20737461747573\n        /* \"#utility.yul\":25183:25184   */\n      0x00\n        /* \"#utility.yul\":25175:25181   */\n      dup3\n        /* \"#utility.yul\":25171:25185   */\n      add\n        /* \"#utility.yul\":25164:25222   */\n      mstore\n        /* \"#utility.yul\":25256:25267   */\n      0x20666f722073656c660000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":25251:25253   */\n      0x20\n        /* \"#utility.yul\":25243:25249   */\n      dup3\n        /* \"#utility.yul\":25239:25254   */\n      add\n        /* \"#utility.yul\":25232:25268   */\n      mstore\n        /* \"#utility.yul\":25047:25275   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25281:25647   */\n    tag_282:\n        /* \"#utility.yul\":25423:25426   */\n      0x00\n        /* \"#utility.yul\":25444:25511   */\n      tag_536\n        /* \"#utility.yul\":25508:25510   */\n      0x29\n        /* \"#utility.yul\":25503:25506   */\n      dup4\n        /* \"#utility.yul\":25444:25511   */\n      tag_239\n      jump\t// in\n    tag_536:\n        /* \"#utility.yul\":25437:25511   */\n      swap2\n      pop\n        /* \"#utility.yul\":25520:25613   */\n      tag_537\n        /* \"#utility.yul\":25609:25612   */\n      dup3\n        /* \"#utility.yul\":25520:25613   */\n      tag_281\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":25638:25640   */\n      0x40\n        /* \"#utility.yul\":25633:25636   */\n      dup3\n        /* \"#utility.yul\":25629:25641   */\n      add\n        /* \"#utility.yul\":25622:25641   */\n      swap1\n      pop\n        /* \"#utility.yul\":25281:25647   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25653:26072   */\n    tag_149:\n        /* \"#utility.yul\":25819:25823   */\n      0x00\n        /* \"#utility.yul\":25857:25859   */\n      0x20\n        /* \"#utility.yul\":25846:25855   */\n      dup3\n        /* \"#utility.yul\":25842:25860   */\n      add\n        /* \"#utility.yul\":25834:25860   */\n      swap1\n      pop\n        /* \"#utility.yul\":25906:25915   */\n      dup2\n        /* \"#utility.yul\":25900:25904   */\n      dup2\n        /* \"#utility.yul\":25896:25916   */\n      sub\n        /* \"#utility.yul\":25892:25893   */\n      0x00\n        /* \"#utility.yul\":25881:25890   */\n      dup4\n        /* \"#utility.yul\":25877:25894   */\n      add\n        /* \"#utility.yul\":25870:25917   */\n      mstore\n        /* \"#utility.yul\":25934:26065   */\n      tag_539\n        /* \"#utility.yul\":26060:26064   */\n      dup2\n        /* \"#utility.yul\":25934:26065   */\n      tag_282\n      jump\t// in\n    tag_539:\n        /* \"#utility.yul\":25926:26065   */\n      swap1\n      pop\n        /* \"#utility.yul\":25653:26072   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26078:26410   */\n    tag_163:\n        /* \"#utility.yul\":26199:26203   */\n      0x00\n        /* \"#utility.yul\":26237:26239   */\n      0x40\n        /* \"#utility.yul\":26226:26235   */\n      dup3\n        /* \"#utility.yul\":26222:26240   */\n      add\n        /* \"#utility.yul\":26214:26240   */\n      swap1\n      pop\n        /* \"#utility.yul\":26250:26321   */\n      tag_541\n        /* \"#utility.yul\":26318:26319   */\n      0x00\n        /* \"#utility.yul\":26307:26316   */\n      dup4\n        /* \"#utility.yul\":26303:26320   */\n      add\n        /* \"#utility.yul\":26294:26300   */\n      dup6\n        /* \"#utility.yul\":26250:26321   */\n      tag_232\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":26331:26403   */\n      tag_542\n        /* \"#utility.yul\":26399:26401   */\n      0x20\n        /* \"#utility.yul\":26388:26397   */\n      dup4\n        /* \"#utility.yul\":26384:26402   */\n      add\n        /* \"#utility.yul\":26375:26381   */\n      dup5\n        /* \"#utility.yul\":26331:26403   */\n      tag_232\n      jump\t// in\n    tag_542:\n        /* \"#utility.yul\":26078:26410   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26416:26534   */\n    tag_283:\n        /* \"#utility.yul\":26503:26527   */\n      tag_544\n        /* \"#utility.yul\":26521:26526   */\n      dup2\n        /* \"#utility.yul\":26503:26527   */\n      tag_226\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":26498:26501   */\n      dup3\n        /* \"#utility.yul\":26491:26528   */\n      mstore\n        /* \"#utility.yul\":26416:26534   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26540:26638   */\n    tag_284:\n        /* \"#utility.yul\":26591:26597   */\n      0x00\n        /* \"#utility.yul\":26625:26630   */\n      dup2\n        /* \"#utility.yul\":26619:26631   */\n      mload\n        /* \"#utility.yul\":26609:26631   */\n      swap1\n      pop\n        /* \"#utility.yul\":26540:26638   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26644:26812   */\n    tag_285:\n        /* \"#utility.yul\":26727:26738   */\n      0x00\n        /* \"#utility.yul\":26761:26767   */\n      dup3\n        /* \"#utility.yul\":26756:26759   */\n      dup3\n        /* \"#utility.yul\":26749:26768   */\n      mstore\n        /* \"#utility.yul\":26801:26805   */\n      0x20\n        /* \"#utility.yul\":26796:26799   */\n      dup3\n        /* \"#utility.yul\":26792:26806   */\n      add\n        /* \"#utility.yul\":26777:26806   */\n      swap1\n      pop\n        /* \"#utility.yul\":26644:26812   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26818:27178   */\n    tag_286:\n        /* \"#utility.yul\":26904:26907   */\n      0x00\n        /* \"#utility.yul\":26932:26970   */\n      tag_548\n        /* \"#utility.yul\":26964:26969   */\n      dup3\n        /* \"#utility.yul\":26932:26970   */\n      tag_284\n      jump\t// in\n    tag_548:\n        /* \"#utility.yul\":26986:27056   */\n      tag_549\n        /* \"#utility.yul\":27049:27055   */\n      dup2\n        /* \"#utility.yul\":27044:27047   */\n      dup6\n        /* \"#utility.yul\":26986:27056   */\n      tag_285\n      jump\t// in\n    tag_549:\n        /* \"#utility.yul\":26979:27056   */\n      swap4\n      pop\n        /* \"#utility.yul\":27065:27117   */\n      tag_550\n        /* \"#utility.yul\":27110:27116   */\n      dup2\n        /* \"#utility.yul\":27105:27108   */\n      dup6\n        /* \"#utility.yul\":27098:27102   */\n      0x20\n        /* \"#utility.yul\":27091:27096   */\n      dup7\n        /* \"#utility.yul\":27087:27103   */\n      add\n        /* \"#utility.yul\":27065:27117   */\n      tag_240\n      jump\t// in\n    tag_550:\n        /* \"#utility.yul\":27142:27171   */\n      tag_551\n        /* \"#utility.yul\":27164:27170   */\n      dup2\n        /* \"#utility.yul\":27142:27171   */\n      tag_241\n      jump\t// in\n    tag_551:\n        /* \"#utility.yul\":27137:27140   */\n      dup5\n        /* \"#utility.yul\":27133:27172   */\n      add\n        /* \"#utility.yul\":27126:27172   */\n      swap2\n      pop\n        /* \"#utility.yul\":26908:27178   */\n      pop\n        /* \"#utility.yul\":26818:27178   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27184:28237   */\n    tag_174:\n        /* \"#utility.yul\":27507:27511   */\n      0x00\n        /* \"#utility.yul\":27545:27548   */\n      0xa0\n        /* \"#utility.yul\":27534:27543   */\n      dup3\n        /* \"#utility.yul\":27530:27549   */\n      add\n        /* \"#utility.yul\":27522:27549   */\n      swap1\n      pop\n        /* \"#utility.yul\":27559:27630   */\n      tag_553\n        /* \"#utility.yul\":27627:27628   */\n      0x00\n        /* \"#utility.yul\":27616:27625   */\n      dup4\n        /* \"#utility.yul\":27612:27629   */\n      add\n        /* \"#utility.yul\":27603:27609   */\n      dup9\n        /* \"#utility.yul\":27559:27630   */\n      tag_283\n      jump\t// in\n    tag_553:\n        /* \"#utility.yul\":27640:27712   */\n      tag_554\n        /* \"#utility.yul\":27708:27710   */\n      0x20\n        /* \"#utility.yul\":27697:27706   */\n      dup4\n        /* \"#utility.yul\":27693:27711   */\n      add\n        /* \"#utility.yul\":27684:27690   */\n      dup8\n        /* \"#utility.yul\":27640:27712   */\n      tag_283\n      jump\t// in\n    tag_554:\n        /* \"#utility.yul\":27759:27768   */\n      dup2\n        /* \"#utility.yul\":27753:27757   */\n      dup2\n        /* \"#utility.yul\":27749:27769   */\n      sub\n        /* \"#utility.yul\":27744:27746   */\n      0x40\n        /* \"#utility.yul\":27733:27742   */\n      dup4\n        /* \"#utility.yul\":27729:27747   */\n      add\n        /* \"#utility.yul\":27722:27770   */\n      mstore\n        /* \"#utility.yul\":27787:27895   */\n      tag_555\n        /* \"#utility.yul\":27890:27894   */\n      dup2\n        /* \"#utility.yul\":27881:27887   */\n      dup7\n        /* \"#utility.yul\":27787:27895   */\n      tag_264\n      jump\t// in\n    tag_555:\n        /* \"#utility.yul\":27779:27895   */\n      swap1\n      pop\n        /* \"#utility.yul\":27942:27951   */\n      dup2\n        /* \"#utility.yul\":27936:27940   */\n      dup2\n        /* \"#utility.yul\":27932:27952   */\n      sub\n        /* \"#utility.yul\":27927:27929   */\n      0x60\n        /* \"#utility.yul\":27916:27925   */\n      dup4\n        /* \"#utility.yul\":27912:27930   */\n      add\n        /* \"#utility.yul\":27905:27953   */\n      mstore\n        /* \"#utility.yul\":27970:28078   */\n      tag_556\n        /* \"#utility.yul\":28073:28077   */\n      dup2\n        /* \"#utility.yul\":28064:28070   */\n      dup6\n        /* \"#utility.yul\":27970:28078   */\n      tag_264\n      jump\t// in\n    tag_556:\n        /* \"#utility.yul\":27962:28078   */\n      swap1\n      pop\n        /* \"#utility.yul\":28126:28135   */\n      dup2\n        /* \"#utility.yul\":28120:28124   */\n      dup2\n        /* \"#utility.yul\":28116:28136   */\n      sub\n        /* \"#utility.yul\":28110:28113   */\n      0x80\n        /* \"#utility.yul\":28099:28108   */\n      dup4\n        /* \"#utility.yul\":28095:28114   */\n      add\n        /* \"#utility.yul\":28088:28137   */\n      mstore\n        /* \"#utility.yul\":28154:28230   */\n      tag_557\n        /* \"#utility.yul\":28225:28229   */\n      dup2\n        /* \"#utility.yul\":28216:28222   */\n      dup5\n        /* \"#utility.yul\":28154:28230   */\n      tag_286\n      jump\t// in\n    tag_557:\n        /* \"#utility.yul\":28146:28230   */\n      swap1\n      pop\n        /* \"#utility.yul\":27184:28237   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28243:28384   */\n    tag_287:\n        /* \"#utility.yul\":28299:28304   */\n      0x00\n        /* \"#utility.yul\":28330:28336   */\n      dup2\n        /* \"#utility.yul\":28324:28337   */\n      mload\n        /* \"#utility.yul\":28315:28337   */\n      swap1\n      pop\n        /* \"#utility.yul\":28346:28378   */\n      tag_559\n        /* \"#utility.yul\":28372:28377   */\n      dup2\n        /* \"#utility.yul\":28346:28378   */\n      tag_234\n      jump\t// in\n    tag_559:\n        /* \"#utility.yul\":28243:28384   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28390:28739   */\n    tag_178:\n        /* \"#utility.yul\":28459:28465   */\n      0x00\n        /* \"#utility.yul\":28508:28510   */\n      0x20\n        /* \"#utility.yul\":28496:28505   */\n      dup3\n        /* \"#utility.yul\":28487:28494   */\n      dup5\n        /* \"#utility.yul\":28483:28506   */\n      sub\n        /* \"#utility.yul\":28479:28511   */\n      slt\n        /* \"#utility.yul\":28476:28595   */\n      iszero\n      tag_561\n      jumpi\n        /* \"#utility.yul\":28514:28593   */\n      tag_562\n      tag_223\n      jump\t// in\n    tag_562:\n        /* \"#utility.yul\":28476:28595   */\n    tag_561:\n        /* \"#utility.yul\":28634:28635   */\n      0x00\n        /* \"#utility.yul\":28659:28722   */\n      tag_563\n        /* \"#utility.yul\":28714:28721   */\n      dup5\n        /* \"#utility.yul\":28705:28711   */\n      dup3\n        /* \"#utility.yul\":28694:28703   */\n      dup6\n        /* \"#utility.yul\":28690:28712   */\n      add\n        /* \"#utility.yul\":28659:28722   */\n      tag_287\n      jump\t// in\n    tag_563:\n        /* \"#utility.yul\":28649:28722   */\n      swap2\n      pop\n        /* \"#utility.yul\":28605:28732   */\n      pop\n        /* \"#utility.yul\":28390:28739   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28745:28851   */\n    tag_288:\n        /* \"#utility.yul\":28789:28797   */\n      0x00\n        /* \"#utility.yul\":28838:28843   */\n      dup2\n        /* \"#utility.yul\":28833:28836   */\n      0xe0\n        /* \"#utility.yul\":28829:28844   */\n      shr\n        /* \"#utility.yul\":28808:28844   */\n      swap1\n      pop\n        /* \"#utility.yul\":28745:28851   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28857:29040   */\n    tag_184:\n        /* \"#utility.yul\":28892:28895   */\n      0x00\n        /* \"#utility.yul\":28930:28931   */\n      0x03\n        /* \"#utility.yul\":28912:28928   */\n      returndatasize\n        /* \"#utility.yul\":28909:28932   */\n      gt\n        /* \"#utility.yul\":28906:29034   */\n      iszero\n      tag_566\n      jumpi\n        /* \"#utility.yul\":28968:28969   */\n      0x04\n        /* \"#utility.yul\":28965:28966   */\n      0x00\n        /* \"#utility.yul\":28962:28963   */\n      dup1\n        /* \"#utility.yul\":28947:28970   */\n      returndatacopy\n        /* \"#utility.yul\":28990:29024   */\n      tag_567\n        /* \"#utility.yul\":29021:29022   */\n      0x00\n        /* \"#utility.yul\":29015:29023   */\n      mload\n        /* \"#utility.yul\":28990:29024   */\n      tag_288\n      jump\t// in\n    tag_567:\n        /* \"#utility.yul\":28983:29024   */\n      swap1\n      pop\n        /* \"#utility.yul\":28906:29034   */\n    tag_566:\n        /* \"#utility.yul\":28857:29040   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":29046:29757   */\n    tag_186:\n        /* \"#utility.yul\":29085:29088   */\n      0x00\n        /* \"#utility.yul\":29123:29127   */\n      0x44\n        /* \"#utility.yul\":29105:29121   */\n      returndatasize\n        /* \"#utility.yul\":29102:29128   */\n      lt\n        /* \"#utility.yul\":29099:29138   */\n      iszero\n      tag_569\n      jumpi\n        /* \"#utility.yul\":29131:29136   */\n      jump(tag_568)\n        /* \"#utility.yul\":29099:29138   */\n    tag_569:\n        /* \"#utility.yul\":29160:29180   */\n      tag_570\n      tag_222\n      jump\t// in\n    tag_570:\n        /* \"#utility.yul\":29235:29236   */\n      0x04\n        /* \"#utility.yul\":29217:29233   */\n      returndatasize\n        /* \"#utility.yul\":29213:29237   */\n      sub\n        /* \"#utility.yul\":29210:29211   */\n      0x04\n        /* \"#utility.yul\":29204:29208   */\n      dup3\n        /* \"#utility.yul\":29189:29238   */\n      returndatacopy\n        /* \"#utility.yul\":29268:29272   */\n      dup1\n        /* \"#utility.yul\":29262:29273   */\n      mload\n        /* \"#utility.yul\":29367:29383   */\n      returndatasize\n        /* \"#utility.yul\":29360:29364   */\n      0x24\n        /* \"#utility.yul\":29352:29358   */\n      dup3\n        /* \"#utility.yul\":29348:29365   */\n      add\n        /* \"#utility.yul\":29345:29384   */\n      gt\n        /* \"#utility.yul\":29312:29330   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":29304:29310   */\n      dup3\n        /* \"#utility.yul\":29301:29331   */\n      gt\n        /* \"#utility.yul\":29285:29398   */\n      or\n        /* \"#utility.yul\":29282:29428   */\n      iszero\n      tag_571\n      jumpi\n        /* \"#utility.yul\":29413:29418   */\n      pop\n      pop\n      jump(tag_568)\n        /* \"#utility.yul\":29282:29428   */\n    tag_571:\n        /* \"#utility.yul\":29459:29465   */\n      dup1\n        /* \"#utility.yul\":29453:29457   */\n      dup3\n        /* \"#utility.yul\":29449:29466   */\n      add\n        /* \"#utility.yul\":29495:29498   */\n      dup1\n        /* \"#utility.yul\":29489:29499   */\n      mload\n        /* \"#utility.yul\":29522:29540   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":29514:29520   */\n      dup2\n        /* \"#utility.yul\":29511:29541   */\n      gt\n        /* \"#utility.yul\":29508:29551   */\n      iszero\n      tag_572\n      jumpi\n        /* \"#utility.yul\":29544:29549   */\n      pop\n      pop\n      pop\n      pop\n      jump(tag_568)\n        /* \"#utility.yul\":29508:29551   */\n    tag_572:\n        /* \"#utility.yul\":29592:29598   */\n      dup1\n        /* \"#utility.yul\":29585:29589   */\n      0x20\n        /* \"#utility.yul\":29580:29583   */\n      dup4\n        /* \"#utility.yul\":29576:29590   */\n      add\n        /* \"#utility.yul\":29572:29599   */\n      add\n        /* \"#utility.yul\":29651:29652   */\n      0x04\n        /* \"#utility.yul\":29633:29649   */\n      returndatasize\n        /* \"#utility.yul\":29629:29653   */\n      sub\n        /* \"#utility.yul\":29623:29627   */\n      dup6\n        /* \"#utility.yul\":29619:29654   */\n      add\n        /* \"#utility.yul\":29614:29617   */\n      dup2\n        /* \"#utility.yul\":29611:29655   */\n      gt\n        /* \"#utility.yul\":29608:29665   */\n      iszero\n      tag_573\n      jumpi\n        /* \"#utility.yul\":29658:29663   */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_568)\n        /* \"#utility.yul\":29608:29665   */\n    tag_573:\n        /* \"#utility.yul\":29675:29732   */\n      tag_574\n        /* \"#utility.yul\":29723:29729   */\n      dup3\n        /* \"#utility.yul\":29717:29721   */\n      0x20\n        /* \"#utility.yul\":29713:29730   */\n      add\n        /* \"#utility.yul\":29705:29711   */\n      dup6\n        /* \"#utility.yul\":29701:29731   */\n      add\n        /* \"#utility.yul\":29695:29699   */\n      dup7\n        /* \"#utility.yul\":29675:29732   */\n      tag_244\n      jump\t// in\n    tag_574:\n        /* \"#utility.yul\":29748:29751   */\n      dup3\n        /* \"#utility.yul\":29741:29751   */\n      swap6\n      pop\n        /* \"#utility.yul\":29089:29757   */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":29046:29757   */\n    tag_568:\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":29763:30002   */\n    tag_289:\n        /* \"#utility.yul\":29903:29937   */\n      0x455243313135353a207472616e7366657220746f206e6f6e2d45524331313535\n        /* \"#utility.yul\":29899:29900   */\n      0x00\n        /* \"#utility.yul\":29891:29897   */\n      dup3\n        /* \"#utility.yul\":29887:29901   */\n      add\n        /* \"#utility.yul\":29880:29938   */\n      mstore\n        /* \"#utility.yul\":29972:29994   */\n      0x526563656976657220696d706c656d656e746572000000000000000000000000\n        /* \"#utility.yul\":29967:29969   */\n      0x20\n        /* \"#utility.yul\":29959:29965   */\n      dup3\n        /* \"#utility.yul\":29955:29970   */\n      add\n        /* \"#utility.yul\":29948:29995   */\n      mstore\n        /* \"#utility.yul\":29763:30002   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30008:30374   */\n    tag_290:\n        /* \"#utility.yul\":30150:30153   */\n      0x00\n        /* \"#utility.yul\":30171:30238   */\n      tag_577\n        /* \"#utility.yul\":30235:30237   */\n      0x34\n        /* \"#utility.yul\":30230:30233   */\n      dup4\n        /* \"#utility.yul\":30171:30238   */\n      tag_239\n      jump\t// in\n    tag_577:\n        /* \"#utility.yul\":30164:30238   */\n      swap2\n      pop\n        /* \"#utility.yul\":30247:30340   */\n      tag_578\n        /* \"#utility.yul\":30336:30339   */\n      dup3\n        /* \"#utility.yul\":30247:30340   */\n      tag_289\n      jump\t// in\n    tag_578:\n        /* \"#utility.yul\":30365:30367   */\n      0x40\n        /* \"#utility.yul\":30360:30363   */\n      dup3\n        /* \"#utility.yul\":30356:30368   */\n      add\n        /* \"#utility.yul\":30349:30368   */\n      swap1\n      pop\n        /* \"#utility.yul\":30008:30374   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30380:30799   */\n    tag_190:\n        /* \"#utility.yul\":30546:30550   */\n      0x00\n        /* \"#utility.yul\":30584:30586   */\n      0x20\n        /* \"#utility.yul\":30573:30582   */\n      dup3\n        /* \"#utility.yul\":30569:30587   */\n      add\n        /* \"#utility.yul\":30561:30587   */\n      swap1\n      pop\n        /* \"#utility.yul\":30633:30642   */\n      dup2\n        /* \"#utility.yul\":30627:30631   */\n      dup2\n        /* \"#utility.yul\":30623:30643   */\n      sub\n        /* \"#utility.yul\":30619:30620   */\n      0x00\n        /* \"#utility.yul\":30608:30617   */\n      dup4\n        /* \"#utility.yul\":30604:30621   */\n      add\n        /* \"#utility.yul\":30597:30644   */\n      mstore\n        /* \"#utility.yul\":30661:30792   */\n      tag_580\n        /* \"#utility.yul\":30787:30791   */\n      dup2\n        /* \"#utility.yul\":30661:30792   */\n      tag_290\n      jump\t// in\n    tag_580:\n        /* \"#utility.yul\":30653:30792   */\n      swap1\n      pop\n        /* \"#utility.yul\":30380:30799   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30805:31032   */\n    tag_291:\n        /* \"#utility.yul\":30945:30979   */\n      0x455243313135353a204552433131353552656365697665722072656a65637465\n        /* \"#utility.yul\":30941:30942   */\n      0x00\n        /* \"#utility.yul\":30933:30939   */\n      dup3\n        /* \"#utility.yul\":30929:30943   */\n      add\n        /* \"#utility.yul\":30922:30980   */\n      mstore\n        /* \"#utility.yul\":31014:31024   */\n      0x6420746f6b656e73000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":31009:31011   */\n      0x20\n        /* \"#utility.yul\":31001:31007   */\n      dup3\n        /* \"#utility.yul\":30997:31012   */\n      add\n        /* \"#utility.yul\":30990:31025   */\n      mstore\n        /* \"#utility.yul\":30805:31032   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31038:31404   */\n    tag_292:\n        /* \"#utility.yul\":31180:31183   */\n      0x00\n        /* \"#utility.yul\":31201:31268   */\n      tag_583\n        /* \"#utility.yul\":31265:31267   */\n      0x28\n        /* \"#utility.yul\":31260:31263   */\n      dup4\n        /* \"#utility.yul\":31201:31268   */\n      tag_239\n      jump\t// in\n    tag_583:\n        /* \"#utility.yul\":31194:31268   */\n      swap2\n      pop\n        /* \"#utility.yul\":31277:31370   */\n      tag_584\n        /* \"#utility.yul\":31366:31369   */\n      dup3\n        /* \"#utility.yul\":31277:31370   */\n      tag_291\n      jump\t// in\n    tag_584:\n        /* \"#utility.yul\":31395:31397   */\n      0x40\n        /* \"#utility.yul\":31390:31393   */\n      dup3\n        /* \"#utility.yul\":31386:31398   */\n      add\n        /* \"#utility.yul\":31379:31398   */\n      swap1\n      pop\n        /* \"#utility.yul\":31038:31404   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31410:31829   */\n    tag_194:\n        /* \"#utility.yul\":31576:31580   */\n      0x00\n        /* \"#utility.yul\":31614:31616   */\n      0x20\n        /* \"#utility.yul\":31603:31612   */\n      dup3\n        /* \"#utility.yul\":31599:31617   */\n      add\n        /* \"#utility.yul\":31591:31617   */\n      swap1\n      pop\n        /* \"#utility.yul\":31663:31672   */\n      dup2\n        /* \"#utility.yul\":31657:31661   */\n      dup2\n        /* \"#utility.yul\":31653:31673   */\n      sub\n        /* \"#utility.yul\":31649:31650   */\n      0x00\n        /* \"#utility.yul\":31638:31647   */\n      dup4\n        /* \"#utility.yul\":31634:31651   */\n      add\n        /* \"#utility.yul\":31627:31674   */\n      mstore\n        /* \"#utility.yul\":31691:31822   */\n      tag_586\n        /* \"#utility.yul\":31817:31821   */\n      dup2\n        /* \"#utility.yul\":31691:31822   */\n      tag_292\n      jump\t// in\n    tag_586:\n        /* \"#utility.yul\":31683:31822   */\n      swap1\n      pop\n        /* \"#utility.yul\":31410:31829   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31835:32586   */\n    tag_205:\n        /* \"#utility.yul\":32058:32062   */\n      0x00\n        /* \"#utility.yul\":32096:32099   */\n      0xa0\n        /* \"#utility.yul\":32085:32094   */\n      dup3\n        /* \"#utility.yul\":32081:32100   */\n      add\n        /* \"#utility.yul\":32073:32100   */\n      swap1\n      pop\n        /* \"#utility.yul\":32110:32181   */\n      tag_588\n        /* \"#utility.yul\":32178:32179   */\n      0x00\n        /* \"#utility.yul\":32167:32176   */\n      dup4\n        /* \"#utility.yul\":32163:32180   */\n      add\n        /* \"#utility.yul\":32154:32160   */\n      dup9\n        /* \"#utility.yul\":32110:32181   */\n      tag_283\n      jump\t// in\n    tag_588:\n        /* \"#utility.yul\":32191:32263   */\n      tag_589\n        /* \"#utility.yul\":32259:32261   */\n      0x20\n        /* \"#utility.yul\":32248:32257   */\n      dup4\n        /* \"#utility.yul\":32244:32262   */\n      add\n        /* \"#utility.yul\":32235:32241   */\n      dup8\n        /* \"#utility.yul\":32191:32263   */\n      tag_283\n      jump\t// in\n    tag_589:\n        /* \"#utility.yul\":32273:32345   */\n      tag_590\n        /* \"#utility.yul\":32341:32343   */\n      0x40\n        /* \"#utility.yul\":32330:32339   */\n      dup4\n        /* \"#utility.yul\":32326:32344   */\n      add\n        /* \"#utility.yul\":32317:32323   */\n      dup7\n        /* \"#utility.yul\":32273:32345   */\n      tag_232\n      jump\t// in\n    tag_590:\n        /* \"#utility.yul\":32355:32427   */\n      tag_591\n        /* \"#utility.yul\":32423:32425   */\n      0x60\n        /* \"#utility.yul\":32412:32421   */\n      dup4\n        /* \"#utility.yul\":32408:32426   */\n      add\n        /* \"#utility.yul\":32399:32405   */\n      dup6\n        /* \"#utility.yul\":32355:32427   */\n      tag_232\n      jump\t// in\n    tag_591:\n        /* \"#utility.yul\":32475:32484   */\n      dup2\n        /* \"#utility.yul\":32469:32473   */\n      dup2\n        /* \"#utility.yul\":32465:32485   */\n      sub\n        /* \"#utility.yul\":32459:32462   */\n      0x80\n        /* \"#utility.yul\":32448:32457   */\n      dup4\n        /* \"#utility.yul\":32444:32463   */\n      add\n        /* \"#utility.yul\":32437:32486   */\n      mstore\n        /* \"#utility.yul\":32503:32579   */\n      tag_592\n        /* \"#utility.yul\":32574:32578   */\n      dup2\n        /* \"#utility.yul\":32565:32571   */\n      dup5\n        /* \"#utility.yul\":32503:32579   */\n      tag_286\n      jump\t// in\n    tag_592:\n        /* \"#utility.yul\":32495:32579   */\n      swap1\n      pop\n        /* \"#utility.yul\":31835:32586   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220d00f609ef91ead9d359e64759ff35caeb0e05c4e9c723a2c4b0528bec315670f64736f6c63430008090033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_44": {
									"entryPoint": null,
									"id": 44,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_setURI_555": {
									"entryPoint": 79,
									"id": 555,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 570,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 645,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptr_fromMemory": {
									"entryPoint": 696,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 431,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 283,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 462,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 516,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 824,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 377,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 777,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 330,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 303,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 308,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 298,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 293,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 313,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3764:8",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:8"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:8",
														"type": ""
													}
												],
												"src": "7:75:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:8"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:8"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "423:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "440:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "443:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "433:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "433:12:8"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "546:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "563:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "566:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "556:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "556:12:8"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "457:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "628:54:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "638:38:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "656:5:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "663:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "652:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "652:14:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "672:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "668:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "668:7:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "648:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "648:28:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "638:6:8"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "611:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "621:6:8",
														"type": ""
													}
												],
												"src": "580:102:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "716:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "733:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "736:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "726:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "726:88:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "726:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "830:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "833:4:8",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "823:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "823:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "854:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "857:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "847:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "847:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "847:15:8"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "688:180:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "917:238:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "927:58:8",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "949:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "979:4:8"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "957:21:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "957:27:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "945:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "945:40:8"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "931:10:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1096:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1098:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1098:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1098:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1039:10:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1051:18:8",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1036:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1036:34:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1075:10:8"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1087:6:8"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1072:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1072:22:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1033:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1033:62:8"
															},
															"nodeType": "YulIf",
															"src": "1030:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1134:2:8",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1138:10:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1127:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1127:22:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1127:22:8"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "903:6:8",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "911:4:8",
														"type": ""
													}
												],
												"src": "874:281:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1202:88:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1212:30:8",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "1222:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1222:20:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1271:6:8"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1279:4:8"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "1251:19:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1251:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1251:33:8"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1186:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1195:6:8",
														"type": ""
													}
												],
												"src": "1161:129:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1363:241:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1468:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1470:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1470:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1470:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1440:6:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1448:18:8",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1437:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1437:30:8"
															},
															"nodeType": "YulIf",
															"src": "1434:56:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1500:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1530:6:8"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "1508:21:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1508:29:8"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1500:4:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1574:23:8",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1586:4:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1592:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1582:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1582:15:8"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1574:4:8"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1347:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1358:4:8",
														"type": ""
													}
												],
												"src": "1296:308:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1659:258:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1669:10:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1678:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1673:1:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1738:63:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "1763:3:8"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1768:1:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1759:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1759:11:8"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "1782:3:8"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1787:1:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1778:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1778:11:8"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1772:5:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1772:18:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1752:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1752:39:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1752:39:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1699:1:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1702:6:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1696:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1696:13:8"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1710:19:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1712:15:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1721:1:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1724:2:8",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1717:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1717:10:8"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1712:1:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1692:3:8",
																"statements": []
															},
															"src": "1688:113:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1835:76:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "1885:3:8"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "1890:6:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1881:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1881:16:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1899:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1874:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1874:27:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1874:27:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1816:1:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1819:6:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1813:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1813:13:8"
															},
															"nodeType": "YulIf",
															"src": "1810:101:8"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1641:3:8",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "1646:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1651:6:8",
														"type": ""
													}
												],
												"src": "1610:307:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2018:326:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2028:75:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2095:6:8"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "2053:41:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2053:49:8"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2037:15:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2037:66:8"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "2028:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "2119:5:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2126:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2112:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2112:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2112:21:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2142:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "2157:5:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2164:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2153:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2153:16:8"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "2146:3:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2207:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "2209:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2209:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2209:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "2188:3:8"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2193:6:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2184:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2184:16:8"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2202:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2181:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2181:25:8"
															},
															"nodeType": "YulIf",
															"src": "2178:112:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "2321:3:8"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "2326:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2331:6:8"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2299:21:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2299:39:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2299:39:8"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1991:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1996:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2004:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2012:5:8",
														"type": ""
													}
												],
												"src": "1923:421:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2437:282:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2486:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "2488:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2488:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2488:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2465:6:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2473:4:8",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2461:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2461:17:8"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "2480:3:8"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2457:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2457:27:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2450:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2450:35:8"
															},
															"nodeType": "YulIf",
															"src": "2447:122:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2578:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2598:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2592:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2592:13:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2582:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2614:99:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2686:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2694:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2682:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2682:17:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2701:6:8"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2709:3:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "2623:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2623:90:8"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "2614:5:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2415:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2423:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2431:5:8",
														"type": ""
													}
												],
												"src": "2364:355:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2812:437:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2858:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2860:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2860:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2860:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2833:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2842:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2829:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2829:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2854:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2825:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2825:32:8"
															},
															"nodeType": "YulIf",
															"src": "2822:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "2951:291:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2966:38:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2990:9:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3001:1:8",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2986:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2986:17:8"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "2980:5:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2980:24:8"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2970:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3051:83:8",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3053:77:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3053:79:8"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3053:79:8"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3023:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3031:18:8",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3020:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3020:30:8"
																	},
																	"nodeType": "YulIf",
																	"src": "3017:117:8"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3148:84:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3204:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3215:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3200:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3200:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3224:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3158:41:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3158:74:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3148:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2782:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2793:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2805:6:8",
														"type": ""
													}
												],
												"src": "2725:524:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3283:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3300:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3303:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3293:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3293:88:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3293:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3397:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3400:4:8",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3390:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3390:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3390:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3421:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3424:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3414:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3414:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3414:15:8"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "3255:180:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3492:269:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3502:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3516:4:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3522:1:8",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "3512:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3512:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "3502:6:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3533:38:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3563:4:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3569:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3559:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3559:12:8"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "3537:18:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3610:51:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3624:27:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "3638:6:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3646:4:8",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "3634:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3634:17:8"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3624:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "3590:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3583:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3583:26:8"
															},
															"nodeType": "YulIf",
															"src": "3580:81:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3713:42:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "3727:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3727:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3727:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "3677:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3700:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3708:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "3697:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3697:14:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "3674:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3674:38:8"
															},
															"nodeType": "YulIf",
															"src": "3671:84:8"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "3476:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3485:6:8",
														"type": ""
													}
												],
												"src": "3441:320:8"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x28CC CODESIZE SUB DUP1 PUSH3 0x28CC DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x2B8 JUMP JUMPDEST PUSH3 0x48 DUP2 PUSH3 0x4F PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0x36E JUMP JUMPDEST DUP1 PUSH1 0x2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x67 SWAP3 SWAP2 SWAP1 PUSH3 0x6B JUMP JUMPDEST POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x79 SWAP1 PUSH3 0x338 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x9D JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0xE9 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xB8 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xE9 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xE9 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xE8 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xCB JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0xF8 SWAP2 SWAP1 PUSH3 0xFC JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x117 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0xFD JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0x184 DUP3 PUSH3 0x139 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x1A6 JUMPI PUSH3 0x1A5 PUSH3 0x14A JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1BB PUSH3 0x11B JUMP JUMPDEST SWAP1 POP PUSH3 0x1C9 DUP3 DUP3 PUSH3 0x179 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x1EC JUMPI PUSH3 0x1EB PUSH3 0x14A JUMP JUMPDEST JUMPDEST PUSH3 0x1F7 DUP3 PUSH3 0x139 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x224 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x207 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0x234 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x251 PUSH3 0x24B DUP5 PUSH3 0x1CE JUMP JUMPDEST PUSH3 0x1AF JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x270 JUMPI PUSH3 0x26F PUSH3 0x134 JUMP JUMPDEST JUMPDEST PUSH3 0x27D DUP5 DUP3 DUP6 PUSH3 0x204 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x29D JUMPI PUSH3 0x29C PUSH3 0x12F JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x2AF DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x23A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x2D1 JUMPI PUSH3 0x2D0 PUSH3 0x125 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x2F2 JUMPI PUSH3 0x2F1 PUSH3 0x12A JUMP JUMPDEST JUMPDEST PUSH3 0x300 DUP5 DUP3 DUP6 ADD PUSH3 0x285 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x351 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x368 JUMPI PUSH3 0x367 PUSH3 0x309 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x254E DUP1 PUSH3 0x37E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x87 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4E1273F4 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x184 JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x1B4 JUMPI PUSH2 0x87 JUMP JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xBC JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0xEC JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x11C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA1 SWAP2 SWAP1 PUSH2 0x13D4 JUMP JUMPDEST PUSH2 0x1D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB3 SWAP2 SWAP1 PUSH2 0x1423 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD1 SWAP2 SWAP1 PUSH2 0x1496 JUMP JUMPDEST PUSH2 0x299 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE3 SWAP2 SWAP1 PUSH2 0x14DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x106 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x101 SWAP2 SWAP1 PUSH2 0x14F9 JUMP JUMPDEST PUSH2 0x37B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x113 SWAP2 SWAP1 PUSH2 0x15BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x136 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x131 SWAP2 SWAP1 PUSH2 0x17DE JUMP JUMPDEST PUSH2 0x40F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x152 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14D SWAP2 SWAP1 PUSH2 0x1970 JUMP JUMPDEST PUSH2 0x4B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0x1AA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0x1AF4 JUMP JUMPDEST PUSH2 0x5C9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x19E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x199 SWAP2 SWAP1 PUSH2 0x1B34 JUMP JUMPDEST PUSH2 0x5DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AB SWAP2 SWAP1 PUSH2 0x14DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C9 SWAP2 SWAP1 PUSH2 0x1B74 JUMP JUMPDEST PUSH2 0x673 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x241 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x238 SWAP1 PUSH2 0x1C7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xD9B67A2600000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x364 JUMPI POP PUSH32 0xE89341C00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x374 JUMPI POP PUSH2 0x373 DUP3 PUSH2 0x714 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x38A SWAP1 PUSH2 0x1CCC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3B6 SWAP1 PUSH2 0x1CCC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x403 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3D8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x403 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3E6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x417 PUSH2 0x77E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x45D JUMPI POP PUSH2 0x45C DUP6 PUSH2 0x457 PUSH2 0x77E JUMP JUMPDEST PUSH2 0x5DF JUMP JUMPDEST JUMPDEST PUSH2 0x49C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x493 SWAP1 PUSH2 0x1D70 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4A9 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x786 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x4F6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4ED SWAP1 PUSH2 0x1E02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x513 JUMPI PUSH2 0x512 PUSH2 0x15E6 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x541 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x5BE JUMPI PUSH2 0x58E DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x566 JUMPI PUSH2 0x565 PUSH2 0x1E22 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x581 JUMPI PUSH2 0x580 PUSH2 0x1E22 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1D0 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x5A1 JUMPI PUSH2 0x5A0 PUSH2 0x1E22 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH2 0x5B7 SWAP1 PUSH2 0x1E80 JUMP JUMPDEST SWAP1 POP PUSH2 0x547 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5DB PUSH2 0x5D4 PUSH2 0x77E JUMP JUMPDEST DUP4 DUP4 PUSH2 0xAA8 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x67B PUSH2 0x77E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x6C1 JUMPI POP PUSH2 0x6C0 DUP6 PUSH2 0x6BB PUSH2 0x77E JUMP JUMPDEST PUSH2 0x5DF JUMP JUMPDEST JUMPDEST PUSH2 0x700 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F7 SWAP1 PUSH2 0x1D70 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x70D DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0xC15 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x7CA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7C1 SWAP1 PUSH2 0x1F3B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x83A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x831 SWAP1 PUSH2 0x1FCD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x844 PUSH2 0x77E JUMP JUMPDEST SWAP1 POP PUSH2 0x854 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xEB1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0xA05 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x875 JUMPI PUSH2 0x874 PUSH2 0x1E22 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x894 JUMPI PUSH2 0x893 PUSH2 0x1E22 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x935 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x92C SWAP1 PUSH2 0x205F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP13 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x9EA SWAP2 SWAP1 PUSH2 0x207F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 PUSH2 0x9FE SWAP1 PUSH2 0x1E80 JUMP JUMPDEST SWAP1 POP PUSH2 0x857 JUMP JUMPDEST POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0xA7C SWAP3 SWAP2 SWAP1 PUSH2 0x20D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xA92 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xEB9 JUMP JUMPDEST PUSH2 0xAA0 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xEC1 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xB17 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB0E SWAP1 PUSH2 0x217E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xC08 SWAP2 SWAP1 PUSH2 0x14DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xC85 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC7C SWAP1 PUSH2 0x1FCD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xC8F PUSH2 0x77E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xC9C DUP6 PUSH2 0x10A8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xCA9 DUP6 PUSH2 0x10A8 JUMP JUMPDEST SWAP1 POP PUSH2 0xCB9 DUP4 DUP10 DUP10 DUP6 DUP6 DUP10 PUSH2 0xEB1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP6 DUP2 LT ISZERO PUSH2 0xD50 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD47 SWAP1 PUSH2 0x205F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP6 DUP2 SUB PUSH1 0x0 DUP1 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP6 PUSH1 0x0 DUP1 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xE05 SWAP2 SWAP1 PUSH2 0x207F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP11 DUP11 PUSH1 0x40 MLOAD PUSH2 0xE82 SWAP3 SWAP2 SWAP1 PUSH2 0x219E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xE98 DUP5 DUP11 DUP11 DUP7 DUP7 DUP11 PUSH2 0xEB9 JUMP JUMPDEST PUSH2 0xEA6 DUP5 DUP11 DUP11 DUP11 DUP11 DUP11 PUSH2 0x1122 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xEE0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1309 JUMP JUMPDEST ISZERO PUSH2 0x10A0 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBC197C81 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF26 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x222B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF40 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xF71 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF6E SWAP2 SWAP1 PUSH2 0x22A8 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1017 JUMPI PUSH2 0xF7D PUSH2 0x22E2 JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 EQ ISZERO PUSH2 0xFDA JUMPI POP PUSH2 0xF92 PUSH2 0x2304 JUMP JUMPDEST DUP1 PUSH2 0xF9D JUMPI POP PUSH2 0xFDC JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFD1 SWAP2 SWAP1 PUSH2 0x15BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x100E SWAP1 PUSH2 0x240C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x109E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1095 SWAP1 PUSH2 0x249E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x10C7 JUMPI PUSH2 0x10C6 PUSH2 0x15E6 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x10F5 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x110D JUMPI PUSH2 0x110C PUSH2 0x1E22 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1141 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1309 JUMP JUMPDEST ISZERO PUSH2 0x1301 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF23A6E61 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1187 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x24BE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x11A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x11D2 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11CF SWAP2 SWAP1 PUSH2 0x22A8 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1278 JUMPI PUSH2 0x11DE PUSH2 0x22E2 JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 EQ ISZERO PUSH2 0x123B JUMPI POP PUSH2 0x11F3 PUSH2 0x2304 JUMP JUMPDEST DUP1 PUSH2 0x11FE JUMPI POP PUSH2 0x123D JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1232 SWAP2 SWAP1 PUSH2 0x15BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x126F SWAP1 PUSH2 0x240C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x12FF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12F6 SWAP1 PUSH2 0x249E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x136B DUP3 PUSH2 0x1340 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x137B DUP2 PUSH2 0x1360 JUMP JUMPDEST DUP2 EQ PUSH2 0x1386 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1398 DUP2 PUSH2 0x1372 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13B1 DUP2 PUSH2 0x139E JUMP JUMPDEST DUP2 EQ PUSH2 0x13BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x13CE DUP2 PUSH2 0x13A8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13EB JUMPI PUSH2 0x13EA PUSH2 0x1336 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x13F9 DUP6 DUP3 DUP7 ADD PUSH2 0x1389 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x140A DUP6 DUP3 DUP7 ADD PUSH2 0x13BF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x141D DUP2 PUSH2 0x139E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1438 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1414 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1473 DUP2 PUSH2 0x143E JUMP JUMPDEST DUP2 EQ PUSH2 0x147E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1490 DUP2 PUSH2 0x146A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14AC JUMPI PUSH2 0x14AB PUSH2 0x1336 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x14BA DUP5 DUP3 DUP6 ADD PUSH2 0x1481 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14D8 DUP2 PUSH2 0x14C3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14F3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x14CF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x150F JUMPI PUSH2 0x150E PUSH2 0x1336 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x151D DUP5 DUP3 DUP6 ADD PUSH2 0x13BF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1560 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1545 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x156F JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1591 DUP3 PUSH2 0x1526 JUMP JUMPDEST PUSH2 0x159B DUP2 DUP6 PUSH2 0x1531 JUMP JUMPDEST SWAP4 POP PUSH2 0x15AB DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1542 JUMP JUMPDEST PUSH2 0x15B4 DUP2 PUSH2 0x1575 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x15D9 DUP2 DUP5 PUSH2 0x1586 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x161E DUP3 PUSH2 0x1575 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x163D JUMPI PUSH2 0x163C PUSH2 0x15E6 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1650 PUSH2 0x132C JUMP JUMPDEST SWAP1 POP PUSH2 0x165C DUP3 DUP3 PUSH2 0x1615 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x167C JUMPI PUSH2 0x167B PUSH2 0x15E6 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x16A5 PUSH2 0x16A0 DUP5 PUSH2 0x1661 JUMP JUMPDEST PUSH2 0x1646 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x16C8 JUMPI PUSH2 0x16C7 PUSH2 0x168D JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x16F1 JUMPI DUP1 PUSH2 0x16DD DUP9 DUP3 PUSH2 0x13BF JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x16CA JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1710 JUMPI PUSH2 0x170F PUSH2 0x15E1 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1720 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1692 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1749 JUMPI PUSH2 0x1748 PUSH2 0x15E6 JUMP JUMPDEST JUMPDEST PUSH2 0x1752 DUP3 PUSH2 0x1575 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1781 PUSH2 0x177C DUP5 PUSH2 0x172E JUMP JUMPDEST PUSH2 0x1646 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x179D JUMPI PUSH2 0x179C PUSH2 0x1729 JUMP JUMPDEST JUMPDEST PUSH2 0x17A8 DUP5 DUP3 DUP6 PUSH2 0x175F JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x17C5 JUMPI PUSH2 0x17C4 PUSH2 0x15E1 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x17D5 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x176E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x17FA JUMPI PUSH2 0x17F9 PUSH2 0x1336 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1808 DUP9 DUP3 DUP10 ADD PUSH2 0x1389 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1819 DUP9 DUP3 DUP10 ADD PUSH2 0x1389 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x183A JUMPI PUSH2 0x1839 PUSH2 0x133B JUMP JUMPDEST JUMPDEST PUSH2 0x1846 DUP9 DUP3 DUP10 ADD PUSH2 0x16FB JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1867 JUMPI PUSH2 0x1866 PUSH2 0x133B JUMP JUMPDEST JUMPDEST PUSH2 0x1873 DUP9 DUP3 DUP10 ADD PUSH2 0x16FB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1894 JUMPI PUSH2 0x1893 PUSH2 0x133B JUMP JUMPDEST JUMPDEST PUSH2 0x18A0 DUP9 DUP3 DUP10 ADD PUSH2 0x17B0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x18C8 JUMPI PUSH2 0x18C7 PUSH2 0x15E6 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18EC PUSH2 0x18E7 DUP5 PUSH2 0x18AD JUMP JUMPDEST PUSH2 0x1646 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x190F JUMPI PUSH2 0x190E PUSH2 0x168D JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1938 JUMPI DUP1 PUSH2 0x1924 DUP9 DUP3 PUSH2 0x1389 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1911 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1957 JUMPI PUSH2 0x1956 PUSH2 0x15E1 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1967 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x18D9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1987 JUMPI PUSH2 0x1986 PUSH2 0x1336 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x19A5 JUMPI PUSH2 0x19A4 PUSH2 0x133B JUMP JUMPDEST JUMPDEST PUSH2 0x19B1 DUP6 DUP3 DUP7 ADD PUSH2 0x1942 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x19D2 JUMPI PUSH2 0x19D1 PUSH2 0x133B JUMP JUMPDEST JUMPDEST PUSH2 0x19DE DUP6 DUP3 DUP7 ADD PUSH2 0x16FB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A1D DUP2 PUSH2 0x139E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A2F DUP4 DUP4 PUSH2 0x1A14 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A53 DUP3 PUSH2 0x19E8 JUMP JUMPDEST PUSH2 0x1A5D DUP2 DUP6 PUSH2 0x19F3 JUMP JUMPDEST SWAP4 POP PUSH2 0x1A68 DUP4 PUSH2 0x1A04 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1A99 JUMPI DUP2 MLOAD PUSH2 0x1A80 DUP9 DUP3 PUSH2 0x1A23 JUMP JUMPDEST SWAP8 POP PUSH2 0x1A8B DUP4 PUSH2 0x1A3B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1A6C JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1AC0 DUP2 DUP5 PUSH2 0x1A48 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1AD1 DUP2 PUSH2 0x14C3 JUMP JUMPDEST DUP2 EQ PUSH2 0x1ADC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1AEE DUP2 PUSH2 0x1AC8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B0B JUMPI PUSH2 0x1B0A PUSH2 0x1336 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B19 DUP6 DUP3 DUP7 ADD PUSH2 0x1389 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1B2A DUP6 DUP3 DUP7 ADD PUSH2 0x1ADF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B4B JUMPI PUSH2 0x1B4A PUSH2 0x1336 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B59 DUP6 DUP3 DUP7 ADD PUSH2 0x1389 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1B6A DUP6 DUP3 DUP7 ADD PUSH2 0x1389 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1B90 JUMPI PUSH2 0x1B8F PUSH2 0x1336 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B9E DUP9 DUP3 DUP10 ADD PUSH2 0x1389 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1BAF DUP9 DUP3 DUP10 ADD PUSH2 0x1389 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x1BC0 DUP9 DUP3 DUP10 ADD PUSH2 0x13BF JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x1BD1 DUP9 DUP3 DUP10 ADD PUSH2 0x13BF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1BF2 JUMPI PUSH2 0x1BF1 PUSH2 0x133B JUMP JUMPDEST JUMPDEST PUSH2 0x1BFE DUP9 DUP3 DUP10 ADD PUSH2 0x17B0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH32 0x455243313135353A2061646472657373207A65726F206973206E6F7420612076 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C6964206F776E657200000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C67 PUSH1 0x2A DUP4 PUSH2 0x1531 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C72 DUP3 PUSH2 0x1C0B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C96 DUP2 PUSH2 0x1C5A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1CE4 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1CF8 JUMPI PUSH2 0x1CF7 PUSH2 0x1C9D JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A2063616C6C6572206973206E6F7420746F6B656E206F776E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6572206F7220617070726F766564000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D5A PUSH1 0x2E DUP4 PUSH2 0x1531 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D65 DUP3 PUSH2 0x1CFE JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D89 DUP2 PUSH2 0x1D4D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x206D69736D617463680000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DEC PUSH1 0x29 DUP4 PUSH2 0x1531 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DF7 DUP3 PUSH2 0x1D90 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E1B DUP2 PUSH2 0x1DDF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1E8B DUP3 PUSH2 0x139E JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x1EBE JUMPI PUSH2 0x1EBD PUSH2 0x1E51 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6D69736D61746368000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F25 PUSH1 0x28 DUP4 PUSH2 0x1531 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F30 DUP3 PUSH2 0x1EC9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F54 DUP2 PUSH2 0x1F18 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FB7 PUSH1 0x25 DUP4 PUSH2 0x1531 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FC2 DUP3 PUSH2 0x1F5B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1FE6 DUP2 PUSH2 0x1FAA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72207472616E7366657200000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2049 PUSH1 0x2A DUP4 PUSH2 0x1531 JUMP JUMPDEST SWAP2 POP PUSH2 0x2054 DUP3 PUSH2 0x1FED JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2078 DUP2 PUSH2 0x203C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x208A DUP3 PUSH2 0x139E JUMP JUMPDEST SWAP2 POP PUSH2 0x2095 DUP4 PUSH2 0x139E JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x20CA JUMPI PUSH2 0x20C9 PUSH2 0x1E51 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x20EF DUP2 DUP6 PUSH2 0x1A48 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x2103 DUP2 DUP5 PUSH2 0x1A48 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20666F722073656C660000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2168 PUSH1 0x29 DUP4 PUSH2 0x1531 JUMP JUMPDEST SWAP2 POP PUSH2 0x2173 DUP3 PUSH2 0x210C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2197 DUP2 PUSH2 0x215B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x21B3 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1414 JUMP JUMPDEST PUSH2 0x21C0 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1414 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x21D0 DUP2 PUSH2 0x1360 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21FD DUP3 PUSH2 0x21D6 JUMP JUMPDEST PUSH2 0x2207 DUP2 DUP6 PUSH2 0x21E1 JUMP JUMPDEST SWAP4 POP PUSH2 0x2217 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1542 JUMP JUMPDEST PUSH2 0x2220 DUP2 PUSH2 0x1575 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x2240 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x21C7 JUMP JUMPDEST PUSH2 0x224D PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x21C7 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x225F DUP2 DUP7 PUSH2 0x1A48 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2273 DUP2 DUP6 PUSH2 0x1A48 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x2287 DUP2 DUP5 PUSH2 0x21F2 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x22A2 DUP2 PUSH2 0x146A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x22BE JUMPI PUSH2 0x22BD PUSH2 0x1336 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x22CC DUP5 DUP3 DUP6 ADD PUSH2 0x2293 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xE0 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x2301 JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY PUSH2 0x22FE PUSH1 0x0 MLOAD PUSH2 0x22D5 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x2314 JUMPI PUSH2 0x2397 JUMP JUMPDEST PUSH2 0x231C PUSH2 0x132C JUMP JUMPDEST PUSH1 0x4 RETURNDATASIZE SUB PUSH1 0x4 DUP3 RETURNDATACOPY DUP1 MLOAD RETURNDATASIZE PUSH1 0x24 DUP3 ADD GT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2344 JUMPI POP POP PUSH2 0x2397 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2362 JUMPI POP POP POP POP PUSH2 0x2397 JUMP JUMPDEST DUP1 PUSH1 0x20 DUP4 ADD ADD PUSH1 0x4 RETURNDATASIZE SUB DUP6 ADD DUP2 GT ISZERO PUSH2 0x237F JUMPI POP POP POP POP POP PUSH2 0x2397 JUMP JUMPDEST PUSH2 0x238E DUP3 PUSH1 0x20 ADD DUP6 ADD DUP7 PUSH2 0x1615 JUMP JUMPDEST DUP3 SWAP6 POP POP POP POP POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2D45524331313535 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x526563656976657220696D706C656D656E746572000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23F6 PUSH1 0x34 DUP4 PUSH2 0x1531 JUMP JUMPDEST SWAP2 POP PUSH2 0x2401 DUP3 PUSH2 0x239A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2425 DUP2 PUSH2 0x23E9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6420746F6B656E73000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2488 PUSH1 0x28 DUP4 PUSH2 0x1531 JUMP JUMPDEST SWAP2 POP PUSH2 0x2493 DUP3 PUSH2 0x242C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x24B7 DUP2 PUSH2 0x247B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x24D3 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x21C7 JUMP JUMPDEST PUSH2 0x24E0 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x21C7 JUMP JUMPDEST PUSH2 0x24ED PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x1414 JUMP JUMPDEST PUSH2 0x24FA PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x1414 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x250C DUP2 DUP5 PUSH2 0x21F2 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD0 0xF PUSH1 0x9E 0xF9 0x1E 0xAD SWAP14 CALLDATALOAD SWAP15 PUSH5 0x759FF35CAE 0xB0 0xE0 0x5C 0x4E SWAP13 PUSH19 0x3A2C4B0528BEC315670F64736F6C6343000809 STOP CALLER ",
							"sourceMap": "570:16689:0:-:0;;;1107:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1149:13;1157:4;1149:7;;;:13;;:::i;:::-;1107:62;570:16689;;8171:86;8244:6;8237:4;:13;;;;;;;;;;;;:::i;:::-;;8171:86;:::o;570:16689::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:75:8:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:307::-;1678:1;1688:113;1702:6;1699:1;1696:13;1688:113;;;1787:1;1782:3;1778:11;1772:18;1768:1;1763:3;1759:11;1752:39;1724:2;1721:1;1717:10;1712:15;;1688:113;;;1819:6;1816:1;1813:13;1810:101;;;1899:1;1890:6;1885:3;1881:16;1874:27;1810:101;1659:258;1610:307;;;:::o;1923:421::-;2012:5;2037:66;2053:49;2095:6;2053:49;:::i;:::-;2037:66;:::i;:::-;2028:75;;2126:6;2119:5;2112:21;2164:4;2157:5;2153:16;2202:3;2193:6;2188:3;2184:16;2181:25;2178:112;;;2209:79;;:::i;:::-;2178:112;2299:39;2331:6;2326:3;2321;2299:39;:::i;:::-;2018:326;1923:421;;;;;:::o;2364:355::-;2431:5;2480:3;2473:4;2465:6;2461:17;2457:27;2447:122;;2488:79;;:::i;:::-;2447:122;2598:6;2592:13;2623:90;2709:3;2701:6;2694:4;2686:6;2682:17;2623:90;:::i;:::-;2614:99;;2437:282;2364:355;;;;:::o;2725:524::-;2805:6;2854:2;2842:9;2833:7;2829:23;2825:32;2822:119;;;2860:79;;:::i;:::-;2822:119;3001:1;2990:9;2986:17;2980:24;3031:18;3023:6;3020:30;3017:117;;;3053:79;;:::i;:::-;3017:117;3158:74;3224:7;3215:6;3204:9;3200:22;3158:74;:::i;:::-;3148:84;;2951:291;2725:524;;;;:::o;3255:180::-;3303:77;3300:1;3293:88;3400:4;3397:1;3390:15;3424:4;3421:1;3414:15;3441:320;3485:6;3522:1;3516:4;3512:12;3502:22;;3569:1;3563:4;3559:12;3590:18;3580:81;;3646:4;3638:6;3634:17;3624:27;;3580:81;3708:2;3700:6;3697:14;3677:18;3674:38;3671:84;;;3727:18;;:::i;:::-;3671:84;3492:269;3441:320;;;:::o;570:16689:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_1065": {
									"entryPoint": 3769,
									"id": 1065,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_asSingletonArray_1221": {
									"entryPoint": 4264,
									"id": 1221,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_beforeTokenTransfer_1046": {
									"entryPoint": 3761,
									"id": 1046,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_doSafeBatchTransferAcceptanceCheck_1193": {
									"entryPoint": 3777,
									"id": 1193,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_doSafeTransferAcceptanceCheck_1128": {
									"entryPoint": 4386,
									"id": 1128,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_msgSender_1742": {
									"entryPoint": 1918,
									"id": 1742,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_safeBatchTransferFrom_544": {
									"entryPoint": 1926,
									"id": 544,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_safeTransferFrom_409": {
									"entryPoint": 3093,
									"id": 409,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_setApprovalForAll_1027": {
									"entryPoint": 2728,
									"id": 1027,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@balanceOfBatch_179": {
									"entryPoint": 1200,
									"id": 179,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_115": {
									"entryPoint": 464,
									"id": 115,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isApprovedForAll_214": {
									"entryPoint": 1503,
									"id": 214,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isContract_1418": {
									"entryPoint": 4873,
									"id": 1418,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeBatchTransferFrom_292": {
									"entryPoint": 1039,
									"id": 292,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@safeTransferFrom_252": {
									"entryPoint": 1651,
									"id": 252,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@setApprovalForAll_196": {
									"entryPoint": 1481,
									"id": 196,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_1775": {
									"entryPoint": 1812,
									"id": 1775,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_75": {
									"entryPoint": 665,
									"id": 75,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@uri_87": {
									"entryPoint": 891,
									"id": 87,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 6361,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 5778,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 5998,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 5001,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 6466,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 5883,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 6879,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 5249,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4_fromMemory": {
									"entryPoint": 8851,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 6064,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 5055,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 6964,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr": {
									"entryPoint": 6110,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr": {
									"entryPoint": 7028,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 6900,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5076,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 6512,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 5270,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 8872,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5369,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encodeUpdatedPos_t_uint256_to_t_uint256": {
									"entryPoint": 6691,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 8647,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 6728,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 5327,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 8690,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5510,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9339,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7258,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7501,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8106,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8252,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8539,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7647,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7960,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9193,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 6676,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 5140,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 8747,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 9406,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 6822,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 8405,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 5342,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5567,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9374,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7293,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7536,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8141,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8287,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8574,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7682,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7995,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9228,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 5155,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 8606,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 5702,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 4908,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 6317,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 5729,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 5934,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 6660,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 6632,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 8662,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 5414,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 6715,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 6643,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 8673,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5425,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 8319,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4960,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 5315,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 5182,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4928,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 5022,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory": {
									"entryPoint": 5983,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory": {
									"entryPoint": 5442,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 7372,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 5653,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"increment_t_uint256": {
									"entryPoint": 7808,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 7761,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 7325,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 7714,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 5606,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"return_data_selector": {
									"entryPoint": 8930,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 5601,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 5773,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 5929,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 4923,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4918,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 5493,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_right_224_unsigned": {
									"entryPoint": 8917,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503": {
									"entryPoint": 9260,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad": {
									"entryPoint": 7179,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156": {
									"entryPoint": 7422,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d": {
									"entryPoint": 8027,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf": {
									"entryPoint": 8173,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2": {
									"entryPoint": 8460,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5": {
									"entryPoint": 7568,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807": {
									"entryPoint": 7881,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d": {
									"entryPoint": 9114,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"try_decode_error_message": {
									"entryPoint": 8964,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 4978,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 6856,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 5226,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 5032,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:32589:8",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:8"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:8",
														"type": ""
													}
												],
												"src": "7:75:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:8"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:8"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:8",
														"type": ""
													}
												],
												"src": "334:126:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:8",
														"type": ""
													}
												],
												"src": "466:96:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:8"
															},
															"nodeType": "YulIf",
															"src": "621:63:8"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:8",
														"type": ""
													}
												],
												"src": "568:122:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "748:87:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "758:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "767:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "796:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "796:33:8"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "726:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "734:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "742:5:8",
														"type": ""
													}
												],
												"src": "696:139:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "886:32:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "896:16:8",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "907:5:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "896:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "868:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "878:7:8",
														"type": ""
													}
												],
												"src": "841:77:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "967:79:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1024:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1033:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1036:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1026:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1026:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1026:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "990:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1015:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "997:17:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "997:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "987:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "987:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "980:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "980:43:8"
															},
															"nodeType": "YulIf",
															"src": "977:63:8"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "960:5:8",
														"type": ""
													}
												],
												"src": "924:122:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1104:87:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1114:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1136:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1123:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1123:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1114:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1179:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1152:26:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1152:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1152:33:8"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1082:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1090:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1098:5:8",
														"type": ""
													}
												],
												"src": "1052:139:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1280:391:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1326:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1328:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1328:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1328:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1301:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1310:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1297:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1297:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1322:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1293:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1293:32:8"
															},
															"nodeType": "YulIf",
															"src": "1290:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "1419:117:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1434:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1448:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1438:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1463:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1498:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1509:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1494:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1494:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1518:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1473:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1473:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1463:6:8"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1546:118:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1561:16:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1575:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1565:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1591:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1626:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1637:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1622:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1622:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1646:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1601:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1601:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1591:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1242:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1253:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1265:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1273:6:8",
														"type": ""
													}
												],
												"src": "1197:474:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1742:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1759:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1782:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1764:17:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1764:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1752:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1752:37:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1752:37:8"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1730:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1737:3:8",
														"type": ""
													}
												],
												"src": "1677:118:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1899:124:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1909:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1921:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1932:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1917:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1917:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1909:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1989:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2002:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2013:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1998:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1998:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1945:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1945:71:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1945:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1871:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1883:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1894:4:8",
														"type": ""
													}
												],
												"src": "1801:222:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2073:105:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2083:89:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2098:5:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2105:66:8",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2094:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2094:78:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2083:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2055:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2065:7:8",
														"type": ""
													}
												],
												"src": "2029:149:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2226:78:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2282:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2291:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2294:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2284:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2284:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2284:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2249:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2273:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nodeType": "YulIdentifier",
																					"src": "2256:16:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2256:23:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2246:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2246:34:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2239:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2239:42:8"
															},
															"nodeType": "YulIf",
															"src": "2236:62:8"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2219:5:8",
														"type": ""
													}
												],
												"src": "2184:120:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2361:86:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2371:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2393:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2380:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2380:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2371:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2435:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "2409:25:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2409:32:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2409:32:8"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2339:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2347:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2355:5:8",
														"type": ""
													}
												],
												"src": "2310:137:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2518:262:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2564:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2566:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2566:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2566:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2539:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2548:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2535:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2535:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2560:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2531:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2531:32:8"
															},
															"nodeType": "YulIf",
															"src": "2528:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "2657:116:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2672:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2686:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2676:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2701:62:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2735:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2746:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2731:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2731:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2755:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "2711:19:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2711:52:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2701:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2488:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2499:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2511:6:8",
														"type": ""
													}
												],
												"src": "2453:327:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2828:48:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2838:32:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2863:5:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "2856:6:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2856:13:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2849:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2849:21:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2838:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2810:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2820:7:8",
														"type": ""
													}
												],
												"src": "2786:90:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2941:50:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2958:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2978:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "2963:14:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2963:21:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2951:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2951:34:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2951:34:8"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2929:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2936:3:8",
														"type": ""
													}
												],
												"src": "2882:109:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3089:118:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3099:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3111:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3122:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3107:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3107:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3099:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3173:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3186:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3197:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3182:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3182:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3135:37:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3135:65:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3135:65:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3061:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3073:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3084:4:8",
														"type": ""
													}
												],
												"src": "2997:210:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3279:263:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3325:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3327:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3327:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3327:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3300:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3309:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3296:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3296:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3321:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3292:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3292:32:8"
															},
															"nodeType": "YulIf",
															"src": "3289:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "3418:117:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3433:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3447:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3437:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3462:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3497:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3508:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3493:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3493:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3517:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3472:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3472:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3462:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3249:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3260:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3272:6:8",
														"type": ""
													}
												],
												"src": "3213:329:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3607:40:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3618:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3634:5:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3628:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3628:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "3618:6:8"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3590:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3600:6:8",
														"type": ""
													}
												],
												"src": "3548:99:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3749:73:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3766:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3771:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3759:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3759:19:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3759:19:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3787:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3806:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3811:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3802:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3802:14:8"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "3787:11:8"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3721:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3726:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "3737:11:8",
														"type": ""
													}
												],
												"src": "3653:169:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3877:258:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3887:10:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3896:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "3891:1:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3956:63:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "3981:3:8"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "3986:1:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "3977:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3977:11:8"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "4000:3:8"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "4005:1:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "3996:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3996:11:8"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "3990:5:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3990:18:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3970:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3970:39:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3970:39:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "3917:1:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3920:6:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "3914:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3914:13:8"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "3928:19:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3930:15:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "3939:1:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3942:2:8",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3935:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3935:10:8"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "3930:1:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "3910:3:8",
																"statements": []
															},
															"src": "3906:113:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4053:76:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "4103:3:8"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "4108:6:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "4099:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4099:16:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4117:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4092:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4092:27:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4092:27:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "4034:1:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4037:6:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4031:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4031:13:8"
															},
															"nodeType": "YulIf",
															"src": "4028:101:8"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "3859:3:8",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "3864:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3869:6:8",
														"type": ""
													}
												],
												"src": "3828:307:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4189:54:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4199:38:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4217:5:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4224:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4213:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4213:14:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4233:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "4229:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4229:7:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4209:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4209:28:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "4199:6:8"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4172:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "4182:6:8",
														"type": ""
													}
												],
												"src": "4141:102:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4341:272:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4351:53:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4398:5:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "4365:32:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4365:39:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "4355:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4413:78:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4479:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4484:6:8"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4420:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4420:71:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4413:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4526:5:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4533:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4522:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4522:16:8"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4540:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4545:6:8"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "4500:21:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4500:52:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4500:52:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4561:46:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4572:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4599:6:8"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "4577:21:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4577:29:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4568:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4568:39:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4561:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4322:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4329:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4337:3:8",
														"type": ""
													}
												],
												"src": "4249:364:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4737:195:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4747:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4759:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4770:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4755:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4755:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4747:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4794:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4805:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4790:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4790:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "4813:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4819:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4809:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4809:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4783:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4783:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4783:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4839:86:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4911:6:8"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "4920:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4847:63:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4847:78:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4839:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4709:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4721:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4732:4:8",
														"type": ""
													}
												],
												"src": "4619:313:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5027:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5044:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5047:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5037:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5037:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5037:12:8"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "4938:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5089:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5106:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5109:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5099:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5099:88:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5099:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5203:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5206:4:8",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5196:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5196:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5196:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5227:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5230:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5220:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5220:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5220:15:8"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "5061:180:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5290:238:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5300:58:8",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "5322:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "5352:4:8"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "5330:21:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5330:27:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5318:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5318:40:8"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "5304:10:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5469:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "5471:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5471:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5471:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "5412:10:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5424:18:8",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5409:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5409:34:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "5448:10:8"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5460:6:8"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "5445:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5445:22:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "5406:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5406:62:8"
															},
															"nodeType": "YulIf",
															"src": "5403:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5507:2:8",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "5511:10:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5500:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5500:22:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5500:22:8"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5276:6:8",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "5284:4:8",
														"type": ""
													}
												],
												"src": "5247:281:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5575:88:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5585:30:8",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "5595:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5595:20:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "5585:6:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "5644:6:8"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "5652:4:8"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "5624:19:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5624:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5624:33:8"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "5559:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5568:6:8",
														"type": ""
													}
												],
												"src": "5534:129:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5751:229:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5856:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "5858:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5858:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5858:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5828:6:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5836:18:8",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5825:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5825:30:8"
															},
															"nodeType": "YulIf",
															"src": "5822:56:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5888:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5900:6:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5908:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "5896:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5896:17:8"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "5888:4:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5950:23:8",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "5962:4:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5968:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5958:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5958:15:8"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "5950:4:8"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5735:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "5746:4:8",
														"type": ""
													}
												],
												"src": "5669:311:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6075:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6092:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6095:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6085:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6085:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6085:12:8"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nodeType": "YulFunctionDefinition",
												"src": "5986:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6228:608:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6238:90:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6320:6:8"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "6263:56:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6263:64:8"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "6247:15:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6247:81:8"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "6238:5:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6337:16:8",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "6348:5:8"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "6341:3:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "6370:5:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6377:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6363:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6363:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6363:21:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6393:23:8",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "6404:5:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6411:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6400:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6400:16:8"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "6393:3:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6426:44:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6444:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6456:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6464:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "6452:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6452:17:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6440:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6440:30:8"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "6430:6:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6498:103:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "6512:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6512:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6512:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "6485:6:8"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "6493:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6482:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6482:15:8"
															},
															"nodeType": "YulIf",
															"src": "6479:122:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6686:144:8",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "6701:21:8",
																		"value": {
																			"name": "src",
																			"nodeType": "YulIdentifier",
																			"src": "6719:3:8"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nodeType": "YulTypedName",
																				"src": "6705:10:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "6743:3:8"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nodeType": "YulIdentifier",
																							"src": "6769:10:8"
																						},
																						{
																							"name": "end",
																							"nodeType": "YulIdentifier",
																							"src": "6781:3:8"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_uint256",
																						"nodeType": "YulIdentifier",
																						"src": "6748:20:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6748:37:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6736:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6736:50:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6736:50:8"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "6799:21:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "6810:3:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6815:4:8",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6806:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6806:14:8"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "6799:3:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "6639:3:8"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "6644:6:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "6636:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6636:15:8"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "6652:25:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6654:21:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "6665:3:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6670:4:8",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6661:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6661:14:8"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "6654:3:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "6614:21:8",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "6616:17:8",
																		"value": {
																			"name": "offset",
																			"nodeType": "YulIdentifier",
																			"src": "6627:6:8"
																		},
																		"variables": [
																			{
																				"name": "src",
																				"nodeType": "YulTypedName",
																				"src": "6620:3:8",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "6610:220:8"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "6198:6:8",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6206:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6214:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "6222:5:8",
														"type": ""
													}
												],
												"src": "6126:710:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6936:293:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6985:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "6987:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6987:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6987:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6964:6:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6972:4:8",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6960:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6960:17:8"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "6979:3:8"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "6956:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6956:27:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6949:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6949:35:8"
															},
															"nodeType": "YulIf",
															"src": "6946:122:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7077:34:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "7104:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7091:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7091:20:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "7081:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7120:103:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "7196:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7204:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7192:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7192:17:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7211:6:8"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "7219:3:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "7129:62:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7129:94:8"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "7120:5:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "6914:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6922:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "6930:5:8",
														"type": ""
													}
												],
												"src": "6859:370:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7324:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7341:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7344:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7334:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7334:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7334:12:8"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "7235:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7424:241:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7529:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "7531:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7531:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7531:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7501:6:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7509:18:8",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7498:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7498:30:8"
															},
															"nodeType": "YulIf",
															"src": "7495:56:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7561:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7591:6:8"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "7569:21:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7569:29:8"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "7561:4:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7635:23:8",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "7647:4:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7653:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7643:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7643:15:8"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "7635:4:8"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7408:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "7419:4:8",
														"type": ""
													}
												],
												"src": "7358:307:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7722:103:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "7745:3:8"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "7750:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7755:6:8"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "7732:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7732:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7732:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "7803:3:8"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "7808:6:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7799:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7799:16:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7817:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7792:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7792:27:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7792:27:8"
														}
													]
												},
												"name": "copy_calldata_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "7704:3:8",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "7709:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7714:6:8",
														"type": ""
													}
												],
												"src": "7671:154:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7914:327:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7924:74:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "7990:6:8"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "7949:40:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7949:48:8"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "7933:15:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7933:65:8"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "7924:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "8014:5:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8021:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8007:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8007:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8007:21:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8037:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "8052:5:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8059:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8048:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8048:16:8"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "8041:3:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8102:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "8104:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8104:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8104:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "8083:3:8"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8088:6:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8079:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8079:16:8"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "8097:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8076:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8076:25:8"
															},
															"nodeType": "YulIf",
															"src": "8073:112:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "8218:3:8"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "8223:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8228:6:8"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "8194:23:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8194:41:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8194:41:8"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "7887:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7892:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7900:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "7908:5:8",
														"type": ""
													}
												],
												"src": "7831:410:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8321:277:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8370:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "8372:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8372:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8372:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8349:6:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8357:4:8",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8345:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8345:17:8"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "8364:3:8"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "8341:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8341:27:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8334:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8334:35:8"
															},
															"nodeType": "YulIf",
															"src": "8331:122:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8462:34:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "8489:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8476:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8476:20:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "8466:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8505:87:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "8565:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8573:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8561:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8561:17:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8580:6:8"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "8588:3:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "8514:46:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8514:78:8"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "8505:5:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "8299:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8307:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "8315:5:8",
														"type": ""
													}
												],
												"src": "8260:338:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8797:1316:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8844:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "8846:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8846:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8846:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8818:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8827:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8814:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8814:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8839:3:8",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "8810:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8810:33:8"
															},
															"nodeType": "YulIf",
															"src": "8807:120:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "8937:117:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8952:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8966:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8956:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8981:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9016:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9027:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9012:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9012:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9036:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "8991:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8991:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "8981:6:8"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9064:118:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9079:16:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9093:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9083:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9109:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9144:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9155:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9140:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9140:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9164:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "9119:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9119:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "9109:6:8"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9192:303:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9207:46:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9238:9:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9249:2:8",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9234:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9234:18:8"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "9221:12:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9221:32:8"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9211:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "9300:83:8",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "9302:77:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9302:79:8"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "9302:79:8"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "9272:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9280:18:8",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "9269:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9269:30:8"
																	},
																	"nodeType": "YulIf",
																	"src": "9266:117:8"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9397:88:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9457:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9468:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9453:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9453:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9477:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "9407:45:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9407:78:8"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "9397:6:8"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9505:303:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9520:46:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9551:9:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9562:2:8",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9547:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9547:18:8"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "9534:12:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9534:32:8"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9524:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "9613:83:8",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "9615:77:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9615:79:8"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "9615:79:8"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "9585:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9593:18:8",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "9582:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9582:30:8"
																	},
																	"nodeType": "YulIf",
																	"src": "9579:117:8"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9710:88:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9770:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9781:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9766:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9766:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9790:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "9720:45:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9720:78:8"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "9710:6:8"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9818:288:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9833:47:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9864:9:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9875:3:8",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9860:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9860:19:8"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "9847:12:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9847:33:8"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9837:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "9927:83:8",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "9929:77:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9929:79:8"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "9929:79:8"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "9899:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9907:18:8",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "9896:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9896:30:8"
																	},
																	"nodeType": "YulIf",
																	"src": "9893:117:8"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10024:72:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10068:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10079:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10064:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10064:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10088:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "10034:29:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10034:62:8"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "10024:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8735:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "8746:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8758:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8766:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "8774:6:8",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "8782:6:8",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "8790:6:8",
														"type": ""
													}
												],
												"src": "8604:1509:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10201:229:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10306:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "10308:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10308:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10308:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10278:6:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10286:18:8",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10275:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10275:30:8"
															},
															"nodeType": "YulIf",
															"src": "10272:56:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10338:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10350:6:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10358:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "10346:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10346:17:8"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "10338:4:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10400:23:8",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "10412:4:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10418:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10408:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10408:15:8"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "10400:4:8"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10185:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "10196:4:8",
														"type": ""
													}
												],
												"src": "10119:311:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10555:608:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10565:90:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "10647:6:8"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "10590:56:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10590:64:8"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "10574:15:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10574:81:8"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "10565:5:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10664:16:8",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "10675:5:8"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "10668:3:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "10697:5:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10704:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10690:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10690:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10690:21:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10720:23:8",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "10731:5:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10738:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10727:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10727:16:8"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "10720:3:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10753:44:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "10771:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "10783:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10791:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "10779:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10779:17:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10767:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10767:30:8"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "10757:6:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10825:103:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "10839:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10839:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10839:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "10812:6:8"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "10820:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10809:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10809:15:8"
															},
															"nodeType": "YulIf",
															"src": "10806:122:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11013:144:8",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "11028:21:8",
																		"value": {
																			"name": "src",
																			"nodeType": "YulIdentifier",
																			"src": "11046:3:8"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nodeType": "YulTypedName",
																				"src": "11032:10:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "11070:3:8"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nodeType": "YulIdentifier",
																							"src": "11096:10:8"
																						},
																						{
																							"name": "end",
																							"nodeType": "YulIdentifier",
																							"src": "11108:3:8"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_address",
																						"nodeType": "YulIdentifier",
																						"src": "11075:20:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11075:37:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "11063:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11063:50:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11063:50:8"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "11126:21:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "11137:3:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11142:4:8",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "11133:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11133:14:8"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "11126:3:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "10966:3:8"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "10971:6:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "10963:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10963:15:8"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "10979:25:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "10981:21:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "10992:3:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10997:4:8",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "10988:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10988:14:8"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "10981:3:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "10941:21:8",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "10943:17:8",
																		"value": {
																			"name": "offset",
																			"nodeType": "YulIdentifier",
																			"src": "10954:6:8"
																		},
																		"variables": [
																			{
																				"name": "src",
																				"nodeType": "YulTypedName",
																				"src": "10947:3:8",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "10937:220:8"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "10525:6:8",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10533:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10541:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "10549:5:8",
														"type": ""
													}
												],
												"src": "10453:710:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11263:293:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11312:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "11314:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11314:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11314:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "11291:6:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "11299:4:8",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11287:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11287:17:8"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "11306:3:8"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "11283:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11283:27:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11276:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11276:35:8"
															},
															"nodeType": "YulIf",
															"src": "11273:122:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11404:34:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "11431:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "11418:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11418:20:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "11408:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11447:103:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "11523:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11531:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11519:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11519:17:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11538:6:8"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "11546:3:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "11456:62:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11456:94:8"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "11447:5:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "11241:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11249:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "11257:5:8",
														"type": ""
													}
												],
												"src": "11186:370:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11695:761:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11741:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "11743:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11743:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11743:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11716:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11725:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11712:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11712:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11737:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "11708:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11708:32:8"
															},
															"nodeType": "YulIf",
															"src": "11705:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "11834:302:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "11849:45:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "11880:9:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "11891:1:8",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11876:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11876:17:8"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "11863:12:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11863:31:8"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "11853:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "11941:83:8",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "11943:77:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11943:79:8"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "11943:79:8"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "11913:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11921:18:8",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "11910:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11910:30:8"
																	},
																	"nodeType": "YulIf",
																	"src": "11907:117:8"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "12038:88:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "12098:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "12109:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "12094:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12094:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "12118:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_address_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "12048:45:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12048:78:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "12038:6:8"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "12146:303:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "12161:46:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "12192:9:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "12203:2:8",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "12188:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12188:18:8"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "12175:12:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12175:32:8"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "12165:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "12254:83:8",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "12256:77:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "12256:79:8"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "12256:79:8"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "12226:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12234:18:8",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "12223:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12223:30:8"
																	},
																	"nodeType": "YulIf",
																	"src": "12220:117:8"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "12351:88:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "12411:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "12422:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "12407:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12407:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "12431:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "12361:45:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12361:78:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "12351:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11657:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "11668:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11680:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11688:6:8",
														"type": ""
													}
												],
												"src": "11562:894:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12536:40:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12547:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12563:5:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "12557:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12557:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "12547:6:8"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12519:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "12529:6:8",
														"type": ""
													}
												],
												"src": "12462:114:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12693:73:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12710:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12715:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12703:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12703:19:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12703:19:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12731:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12750:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12755:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12746:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12746:14:8"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "12731:11:8"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12665:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "12670:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "12681:11:8",
														"type": ""
													}
												],
												"src": "12582:184:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12844:60:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12854:11:8",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "12862:3:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "12854:4:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12875:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "12887:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12892:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12883:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12883:14:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "12875:4:8"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "12831:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "12839:4:8",
														"type": ""
													}
												],
												"src": "12772:132:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12965:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12982:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "13005:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "12987:17:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12987:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12975:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12975:37:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12975:37:8"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12953:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12960:3:8",
														"type": ""
													}
												],
												"src": "12910:108:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13104:99:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "13148:6:8"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13156:3:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "13114:33:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13114:46:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13114:46:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13169:28:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13187:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13192:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13183:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13183:14:8"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nodeType": "YulIdentifier",
																	"src": "13169:10:8"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13077:6:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13085:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nodeType": "YulTypedName",
														"src": "13093:10:8",
														"type": ""
													}
												],
												"src": "13024:179:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13284:38:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13294:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "13306:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13311:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13302:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13302:14:8"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nodeType": "YulIdentifier",
																	"src": "13294:4:8"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "13271:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nodeType": "YulTypedName",
														"src": "13279:4:8",
														"type": ""
													}
												],
												"src": "13209:113:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13482:608:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13492:68:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13554:5:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "13506:47:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13506:54:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "13496:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "13569:93:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13650:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "13655:6:8"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13576:73:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13576:86:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13569:3:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13671:71:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13736:5:8"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "13686:49:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13686:56:8"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nodeType": "YulTypedName",
																	"src": "13675:7:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13751:21:8",
															"value": {
																"name": "baseRef",
																"nodeType": "YulIdentifier",
																"src": "13765:7:8"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "13755:6:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13841:224:8",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "13855:34:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "13882:6:8"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "13876:5:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13876:13:8"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nodeType": "YulTypedName",
																				"src": "13859:13:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "13902:70:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nodeType": "YulIdentifier",
																					"src": "13953:13:8"
																				},
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "13968:3:8"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "13909:43:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13909:63:8"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "13902:3:8"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "13985:70:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "14048:6:8"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
																				"nodeType": "YulIdentifier",
																				"src": "13995:52:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13995:60:8"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13985:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "13803:1:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "13806:6:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "13800:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13800:13:8"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "13814:18:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "13816:14:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "13825:1:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13828:1:8",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "13821:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13821:9:8"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "13816:1:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "13785:14:8",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "13787:10:8",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "13796:1:8",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "13791:1:8",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "13781:284:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14074:10:8",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "14081:3:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14074:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13461:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13468:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13477:3:8",
														"type": ""
													}
												],
												"src": "13358:732:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14244:225:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14254:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14266:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14277:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14262:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14262:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14254:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14301:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14312:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14297:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14297:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "14320:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14326:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14316:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14316:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14290:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14290:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14290:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14346:116:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "14448:6:8"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "14457:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14354:93:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14354:108:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14346:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14216:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14228:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14239:4:8",
														"type": ""
													}
												],
												"src": "14096:373:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14515:76:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14569:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14578:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14581:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "14571:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14571:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14571:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "14538:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "14560:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "14545:14:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14545:21:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "14535:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14535:32:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "14528:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14528:40:8"
															},
															"nodeType": "YulIf",
															"src": "14525:60:8"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14508:5:8",
														"type": ""
													}
												],
												"src": "14475:116:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14646:84:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14656:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "14678:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "14665:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14665:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "14656:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14718:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "14694:23:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14694:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14694:30:8"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "14624:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14632:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14640:5:8",
														"type": ""
													}
												],
												"src": "14597:133:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14816:388:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14862:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "14864:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14864:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14864:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "14837:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14846:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14833:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14833:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14858:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "14829:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14829:32:8"
															},
															"nodeType": "YulIf",
															"src": "14826:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "14955:117:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "14970:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14984:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "14974:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "14999:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "15034:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "15045:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "15030:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15030:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "15054:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "15009:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15009:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "14999:6:8"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "15082:115:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "15097:16:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15111:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "15101:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "15127:60:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "15159:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "15170:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "15155:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15155:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "15179:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "15137:17:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15137:50:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "15127:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14778:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "14789:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14801:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "14809:6:8",
														"type": ""
													}
												],
												"src": "14736:468:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15293:391:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15339:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "15341:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15341:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15341:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "15314:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15323:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15310:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15310:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15335:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "15306:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15306:32:8"
															},
															"nodeType": "YulIf",
															"src": "15303:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "15432:117:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "15447:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15461:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "15451:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "15476:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "15511:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "15522:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "15507:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15507:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "15531:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "15486:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15486:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "15476:6:8"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "15559:118:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "15574:16:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15588:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "15578:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "15604:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "15639:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "15650:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "15635:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15635:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "15659:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "15614:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15614:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "15604:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15255:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "15266:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15278:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "15286:6:8",
														"type": ""
													}
												],
												"src": "15210:474:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15833:946:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15880:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "15882:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15882:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15882:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "15854:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15863:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15850:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15850:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15875:3:8",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "15846:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15846:33:8"
															},
															"nodeType": "YulIf",
															"src": "15843:120:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "15973:117:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "15988:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16002:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "15992:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "16017:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "16052:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "16063:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "16048:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16048:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "16072:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "16027:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16027:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "16017:6:8"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "16100:118:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "16115:16:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16129:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "16119:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "16145:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "16180:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "16191:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "16176:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16176:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "16200:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "16155:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16155:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "16145:6:8"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "16228:118:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "16243:16:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16257:2:8",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "16247:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "16273:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "16308:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "16319:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "16304:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16304:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "16328:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "16283:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16283:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "16273:6:8"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "16356:118:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "16371:16:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16385:2:8",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "16375:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "16401:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "16436:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "16447:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "16432:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16432:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "16456:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "16411:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16411:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "16401:6:8"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "16484:288:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "16499:47:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "16530:9:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "16541:3:8",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "16526:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16526:19:8"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "16513:12:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16513:33:8"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "16503:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "16593:83:8",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "16595:77:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "16595:79:8"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "16595:79:8"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "16565:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16573:18:8",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "16562:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16562:30:8"
																	},
																	"nodeType": "YulIf",
																	"src": "16559:117:8"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "16690:72:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "16734:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "16745:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "16730:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16730:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "16754:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "16700:29:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16700:62:8"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "16690:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15771:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "15782:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15794:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "15802:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "15810:6:8",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "15818:6:8",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "15826:6:8",
														"type": ""
													}
												],
												"src": "15690:1089:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16891:123:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16913:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16921:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16909:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16909:14:8"
																	},
																	{
																		"hexValue": "455243313135353a2061646472657373207a65726f206973206e6f7420612076",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16925:34:8",
																		"type": "",
																		"value": "ERC1155: address zero is not a v"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16902:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16902:58:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16902:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16981:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16989:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16977:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16977:15:8"
																	},
																	{
																		"hexValue": "616c6964206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16994:12:8",
																		"type": "",
																		"value": "alid owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16970:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16970:37:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16970:37:8"
														}
													]
												},
												"name": "store_literal_in_memory_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "16883:6:8",
														"type": ""
													}
												],
												"src": "16785:229:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17166:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17176:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17242:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17247:2:8",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17183:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17183:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "17176:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17348:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad",
																	"nodeType": "YulIdentifier",
																	"src": "17259:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17259:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17259:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17361:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17372:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17377:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17368:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17368:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "17361:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "17154:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "17162:3:8",
														"type": ""
													}
												],
												"src": "17020:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17563:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17573:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17585:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17596:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17581:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17581:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17573:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17620:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17631:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17616:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17616:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "17639:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17645:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "17635:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17635:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17609:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17609:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17609:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17665:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "17799:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17673:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17673:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17665:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17543:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17558:4:8",
														"type": ""
													}
												],
												"src": "17392:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17845:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17862:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17865:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17855:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17855:88:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17855:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17959:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17962:4:8",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17952:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17952:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17952:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17983:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17986:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "17976:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17976:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17976:15:8"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "17817:180:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18054:269:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18064:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "18078:4:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18084:1:8",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "18074:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18074:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "18064:6:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "18095:38:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "18125:4:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18131:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "18121:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18121:12:8"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "18099:18:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18172:51:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "18186:27:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "18200:6:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18208:4:8",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "18196:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18196:17:8"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "18186:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "18152:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "18145:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18145:26:8"
															},
															"nodeType": "YulIf",
															"src": "18142:81:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18275:42:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "18289:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18289:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18289:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "18239:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "18262:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18270:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "18259:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18259:14:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "18236:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18236:38:8"
															},
															"nodeType": "YulIf",
															"src": "18233:84:8"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "18038:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "18047:6:8",
														"type": ""
													}
												],
												"src": "18003:320:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18435:127:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "18457:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18465:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18453:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18453:14:8"
																	},
																	{
																		"hexValue": "455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18469:34:8",
																		"type": "",
																		"value": "ERC1155: caller is not token own"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18446:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18446:58:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18446:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "18525:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18533:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18521:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18521:15:8"
																	},
																	{
																		"hexValue": "6572206f7220617070726f766564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18538:16:8",
																		"type": "",
																		"value": "er or approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18514:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18514:41:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18514:41:8"
														}
													]
												},
												"name": "store_literal_in_memory_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "18427:6:8",
														"type": ""
													}
												],
												"src": "18329:233:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18714:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18724:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18790:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18795:2:8",
																		"type": "",
																		"value": "46"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18731:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18731:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "18724:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18896:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156",
																	"nodeType": "YulIdentifier",
																	"src": "18807:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18807:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18807:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18909:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18920:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18925:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18916:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18916:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "18909:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "18702:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "18710:3:8",
														"type": ""
													}
												],
												"src": "18568:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19111:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19121:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19133:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19144:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19129:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19129:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19121:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19168:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19179:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19164:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19164:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "19187:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19193:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "19183:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19183:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19157:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19157:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19157:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19213:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "19347:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19221:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19221:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19213:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19091:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "19106:4:8",
														"type": ""
													}
												],
												"src": "18940:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19471:122:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "19493:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19501:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19489:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19489:14:8"
																	},
																	{
																		"hexValue": "455243313135353a206163636f756e747320616e6420696473206c656e677468",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "19505:34:8",
																		"type": "",
																		"value": "ERC1155: accounts and ids length"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19482:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19482:58:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19482:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "19561:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19569:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19557:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19557:15:8"
																	},
																	{
																		"hexValue": "206d69736d61746368",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "19574:11:8",
																		"type": "",
																		"value": " mismatch"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19550:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19550:36:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19550:36:8"
														}
													]
												},
												"name": "store_literal_in_memory_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "19463:6:8",
														"type": ""
													}
												],
												"src": "19365:228:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19745:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19755:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19821:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19826:2:8",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19762:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19762:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "19755:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19927:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5",
																	"nodeType": "YulIdentifier",
																	"src": "19838:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19838:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19838:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19940:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19951:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19956:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19947:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19947:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "19940:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "19733:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "19741:3:8",
														"type": ""
													}
												],
												"src": "19599:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20142:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20152:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20164:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20175:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20160:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20160:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20152:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20199:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20210:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20195:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20195:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "20218:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20224:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "20214:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20214:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20188:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20188:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20188:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20244:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "20378:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20252:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20252:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20244:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20122:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "20137:4:8",
														"type": ""
													}
												],
												"src": "19971:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20424:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20441:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20444:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20434:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20434:88:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20434:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20538:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20541:4:8",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20531:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20531:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20531:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20562:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20565:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "20555:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20555:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20555:15:8"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "20396:180:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20610:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20627:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20630:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20620:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20620:88:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20620:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20724:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20727:4:8",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20717:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20717:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20717:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20748:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20751:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "20741:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20741:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20741:15:8"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "20582:180:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20811:190:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20821:33:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "20848:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "20830:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20830:24:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "20821:5:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20944:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "20946:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20946:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20946:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "20869:5:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20876:66:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "20866:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20866:77:8"
															},
															"nodeType": "YulIf",
															"src": "20863:103:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20975:20:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "20986:5:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20993:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20982:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20982:13:8"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "20975:3:8"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "20797:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "20807:3:8",
														"type": ""
													}
												],
												"src": "20768:233:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21113:121:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "21135:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21143:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21131:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21131:14:8"
																	},
																	{
																		"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e67746820",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "21147:34:8",
																		"type": "",
																		"value": "ERC1155: ids and amounts length "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21124:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "21124:58:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21124:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "21203:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21211:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21199:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21199:15:8"
																	},
																	{
																		"hexValue": "6d69736d61746368",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "21216:10:8",
																		"type": "",
																		"value": "mismatch"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21192:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "21192:35:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21192:35:8"
														}
													]
												},
												"name": "store_literal_in_memory_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "21105:6:8",
														"type": ""
													}
												],
												"src": "21007:227:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21386:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21396:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21462:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21467:2:8",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21403:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "21403:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "21396:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21568:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																	"nodeType": "YulIdentifier",
																	"src": "21479:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "21479:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21479:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21581:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21592:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21597:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21588:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "21588:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "21581:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "21374:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "21382:3:8",
														"type": ""
													}
												],
												"src": "21240:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21783:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21793:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "21805:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21816:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21801:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "21801:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21793:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21840:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21851:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21836:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21836:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "21859:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21865:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "21855:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21855:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21829:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "21829:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21829:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21885:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "22019:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21893:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "21893:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21885:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "21763:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "21778:4:8",
														"type": ""
													}
												],
												"src": "21612:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22143:118:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "22165:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22173:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22161:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22161:14:8"
																	},
																	{
																		"hexValue": "455243313135353a207472616e7366657220746f20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "22177:34:8",
																		"type": "",
																		"value": "ERC1155: transfer to the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22154:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "22154:58:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22154:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "22233:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22241:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22229:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22229:15:8"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "22246:7:8",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22222:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "22222:32:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22222:32:8"
														}
													]
												},
												"name": "store_literal_in_memory_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "22135:6:8",
														"type": ""
													}
												],
												"src": "22037:224:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22413:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22423:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22489:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22494:2:8",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22430:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "22430:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "22423:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22595:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																	"nodeType": "YulIdentifier",
																	"src": "22506:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "22506:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22506:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22608:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22619:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22624:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22615:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "22615:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "22608:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "22401:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "22409:3:8",
														"type": ""
													}
												],
												"src": "22267:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22810:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22820:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "22832:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22843:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22828:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "22828:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22820:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22867:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22878:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22863:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22863:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "22886:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22892:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "22882:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22882:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22856:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "22856:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22856:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22912:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "23046:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22920:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "22920:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22912:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "22790:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "22805:4:8",
														"type": ""
													}
												],
												"src": "22639:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23170:123:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "23192:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23200:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23188:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23188:14:8"
																	},
																	{
																		"hexValue": "455243313135353a20696e73756666696369656e742062616c616e636520666f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "23204:34:8",
																		"type": "",
																		"value": "ERC1155: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23181:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "23181:58:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23181:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "23260:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23268:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23256:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23256:15:8"
																	},
																	{
																		"hexValue": "72207472616e73666572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "23273:12:8",
																		"type": "",
																		"value": "r transfer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23249:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "23249:37:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23249:37:8"
														}
													]
												},
												"name": "store_literal_in_memory_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "23162:6:8",
														"type": ""
													}
												],
												"src": "23064:229:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23445:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23455:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23521:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23526:2:8",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23462:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "23462:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "23455:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23627:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																	"nodeType": "YulIdentifier",
																	"src": "23538:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "23538:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23538:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23640:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23651:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23656:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23647:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "23647:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "23640:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "23433:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "23441:3:8",
														"type": ""
													}
												],
												"src": "23299:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23842:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23852:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "23864:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23875:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23860:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "23860:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23852:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23899:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23910:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23895:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23895:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "23918:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23924:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "23914:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23914:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23888:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "23888:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23888:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23944:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "24078:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23952:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "23952:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23944:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "23822:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "23837:4:8",
														"type": ""
													}
												],
												"src": "23671:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24140:261:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24150:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "24173:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "24155:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "24155:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "24150:1:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "24184:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "24207:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "24189:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "24189:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "24184:1:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "24347:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "24349:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "24349:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "24349:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "24268:1:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24275:66:8",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "24343:1:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "24271:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24271:74:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "24265:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "24265:81:8"
															},
															"nodeType": "YulIf",
															"src": "24262:107:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24379:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "24390:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "24393:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24386:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "24386:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "24379:3:8"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "24127:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "24130:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "24136:3:8",
														"type": ""
													}
												],
												"src": "24096:305:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24633:408:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24643:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "24655:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24666:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24651:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "24651:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "24643:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24690:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24701:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24686:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24686:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "24709:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24715:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "24705:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24705:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24679:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "24679:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24679:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24735:116:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "24837:6:8"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "24846:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24743:93:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "24743:108:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "24735:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24872:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24883:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24868:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24868:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "24892:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24898:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "24888:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24888:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24861:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "24861:48:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24861:48:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24918:116:8",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "25020:6:8"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "25029:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24926:93:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "24926:108:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "24918:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "24597:9:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "24609:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "24617:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "24628:4:8",
														"type": ""
													}
												],
												"src": "24407:634:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25153:122:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "25175:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25183:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25171:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25171:14:8"
																	},
																	{
																		"hexValue": "455243313135353a2073657474696e6720617070726f76616c20737461747573",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "25187:34:8",
																		"type": "",
																		"value": "ERC1155: setting approval status"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25164:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "25164:58:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25164:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "25243:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25251:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25239:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25239:15:8"
																	},
																	{
																		"hexValue": "20666f722073656c66",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "25256:11:8",
																		"type": "",
																		"value": " for self"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25232:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "25232:36:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25232:36:8"
														}
													]
												},
												"name": "store_literal_in_memory_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "25145:6:8",
														"type": ""
													}
												],
												"src": "25047:228:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25427:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25437:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25503:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25508:2:8",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "25444:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "25444:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "25437:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25609:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2",
																	"nodeType": "YulIdentifier",
																	"src": "25520:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "25520:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25520:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "25622:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25633:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25638:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "25629:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "25629:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "25622:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "25415:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "25423:3:8",
														"type": ""
													}
												],
												"src": "25281:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25824:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25834:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "25846:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25857:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "25842:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "25842:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "25834:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "25881:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25892:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25877:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25877:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "25900:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "25906:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "25896:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25896:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25870:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "25870:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25870:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "25926:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "26060:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "25934:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "25934:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "25926:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "25804:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "25819:4:8",
														"type": ""
													}
												],
												"src": "25653:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26204:206:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26214:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "26226:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26237:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "26222:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "26222:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "26214:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "26294:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "26307:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26318:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26303:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26303:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "26250:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "26250:71:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26250:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "26375:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "26388:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26399:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26384:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26384:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "26331:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "26331:72:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26331:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "26168:9:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "26180:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "26188:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "26199:4:8",
														"type": ""
													}
												],
												"src": "26078:332:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26481:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "26498:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "26521:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "26503:17:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26503:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "26491:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "26491:37:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26491:37:8"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "26469:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "26476:3:8",
														"type": ""
													}
												],
												"src": "26416:118:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26598:40:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26609:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "26625:5:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "26619:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "26619:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "26609:6:8"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "26581:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "26591:6:8",
														"type": ""
													}
												],
												"src": "26540:98:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26739:73:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "26756:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "26761:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "26749:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "26749:19:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26749:19:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "26777:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "26796:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26801:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "26792:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "26792:14:8"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "26777:11:8"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "26711:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "26716:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "26727:11:8",
														"type": ""
													}
												],
												"src": "26644:168:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26908:270:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "26918:52:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "26964:5:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "26932:31:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "26932:38:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "26922:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "26979:77:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "27044:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "27049:6:8"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "26986:57:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "26986:70:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "26979:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "27091:5:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27098:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27087:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27087:16:8"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "27105:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "27110:6:8"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "27065:21:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "27065:52:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27065:52:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "27126:46:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "27137:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "27164:6:8"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "27142:21:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27142:29:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "27133:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "27133:39:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "27126:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "26889:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "26896:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "26904:3:8",
														"type": ""
													}
												],
												"src": "26818:360:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27512:725:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "27522:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "27534:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27545:3:8",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "27530:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "27530:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "27522:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "27603:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "27616:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27627:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27612:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27612:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "27559:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "27559:71:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27559:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "27684:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "27697:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27708:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27693:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27693:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "27640:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "27640:72:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27640:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "27733:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27744:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27729:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27729:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "27753:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "27759:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "27749:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27749:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27722:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "27722:48:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27722:48:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "27779:116:8",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "27881:6:8"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "27890:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "27787:93:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "27787:108:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "27779:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "27916:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27927:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27912:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27912:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "27936:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "27942:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "27932:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27932:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27905:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "27905:48:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27905:48:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "27962:116:8",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "28064:6:8"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "28073:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "27970:93:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "27970:108:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "27962:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "28099:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28110:3:8",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28095:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28095:19:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "28120:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "28126:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "28116:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28116:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28088:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "28088:49:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28088:49:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "28146:84:8",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "28216:6:8"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "28225:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "28154:61:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "28154:76:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "28146:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "27452:9:8",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "27464:6:8",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "27472:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "27480:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "27488:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "27496:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "27507:4:8",
														"type": ""
													}
												],
												"src": "27184:1053:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28305:79:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "28315:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "28330:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "28324:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "28324:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "28315:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "28372:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "28346:25:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "28346:32:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28346:32:8"
														}
													]
												},
												"name": "abi_decode_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "28283:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "28291:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "28299:5:8",
														"type": ""
													}
												],
												"src": "28243:141:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28466:273:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "28512:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "28514:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "28514:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "28514:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "28487:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "28496:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "28483:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28483:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28508:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "28479:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "28479:32:8"
															},
															"nodeType": "YulIf",
															"src": "28476:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "28605:127:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "28620:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28634:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "28624:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "28649:73:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "28694:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "28705:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "28690:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "28690:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "28714:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "28659:30:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28659:63:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "28649:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "28436:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "28447:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "28459:6:8",
														"type": ""
													}
												],
												"src": "28390:349:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28798:53:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "28808:36:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28833:3:8",
																		"type": "",
																		"value": "224"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "28838:5:8"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "28829:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "28829:15:8"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "28808:8:8"
																}
															]
														}
													]
												},
												"name": "shift_right_224_unsigned",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "28779:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "28789:8:8",
														"type": ""
													}
												],
												"src": "28745:106:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28896:144:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "28933:101:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "28962:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "28965:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "28968:1:8",
																					"type": "",
																					"value": "4"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nodeType": "YulIdentifier",
																				"src": "28947:14:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "28947:23:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "28947:23:8"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "28983:41:8",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "29021:1:8",
																							"type": "",
																							"value": "0"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "29015:5:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "29015:8:8"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_224_unsigned",
																				"nodeType": "YulIdentifier",
																				"src": "28990:24:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "28990:34:8"
																		},
																		"variableNames": [
																			{
																				"name": "sig",
																				"nodeType": "YulIdentifier",
																				"src": "28983:3:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nodeType": "YulIdentifier",
																			"src": "28912:14:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28912:16:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28930:1:8",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "28909:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "28909:23:8"
															},
															"nodeType": "YulIf",
															"src": "28906:128:8"
														}
													]
												},
												"name": "return_data_selector",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "sig",
														"nodeType": "YulTypedName",
														"src": "28892:3:8",
														"type": ""
													}
												],
												"src": "28857:183:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29089:668:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "29129:9:8",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "29131:5:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nodeType": "YulIdentifier",
																			"src": "29105:14:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29105:16:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29123:4:8",
																		"type": "",
																		"value": "0x44"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "29102:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "29102:26:8"
															},
															"nodeType": "YulIf",
															"src": "29099:39:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "29148:32:8",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "29160:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "29160:20:8"
															},
															"variables": [
																{
																	"name": "data",
																	"nodeType": "YulTypedName",
																	"src": "29152:4:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "29204:4:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29210:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "returndatasize",
																					"nodeType": "YulIdentifier",
																					"src": "29217:14:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "29217:16:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29235:1:8",
																				"type": "",
																				"value": "4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "29213:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29213:24:8"
																	}
																],
																"functionName": {
																	"name": "returndatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "29189:14:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "29189:49:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29189:49:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "29248:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "29268:4:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "29262:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "29262:11:8"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "29252:6:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "29399:29:8",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "29413:5:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "29304:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29312:18:8",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "29301:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29301:30:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "29352:6:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "29360:4:8",
																						"type": "",
																						"value": "0x24"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "29348:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "29348:17:8"
																			},
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "returndatasize",
																					"nodeType": "YulIdentifier",
																					"src": "29367:14:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "29367:16:8"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "29345:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29345:39:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "29285:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "29285:113:8"
															},
															"nodeType": "YulIf",
															"src": "29282:146:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "29438:28:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "29453:4:8"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "29459:6:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "29449:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "29449:17:8"
															},
															"variables": [
																{
																	"name": "msg",
																	"nodeType": "YulTypedName",
																	"src": "29442:3:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "29475:24:8",
															"value": {
																"arguments": [
																	{
																		"name": "msg",
																		"nodeType": "YulIdentifier",
																		"src": "29495:3:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "29489:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "29489:10:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "29479:6:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "29542:9:8",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "29544:5:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "29514:6:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29522:18:8",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "29511:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "29511:30:8"
															},
															"nodeType": "YulIf",
															"src": "29508:43:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "29561:38:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "msg",
																				"nodeType": "YulIdentifier",
																				"src": "29580:3:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29585:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29576:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29576:14:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "29592:6:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "29572:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "29572:27:8"
															},
															"variables": [
																{
																	"name": "end",
																	"nodeType": "YulTypedName",
																	"src": "29565:3:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "29656:9:8",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "29658:5:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "29614:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "29623:4:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "returndatasize",
																							"nodeType": "YulIdentifier",
																							"src": "29633:14:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "29633:16:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "29651:1:8",
																						"type": "",
																						"value": "4"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "29629:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "29629:24:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29619:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29619:35:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "29611:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "29611:44:8"
															},
															"nodeType": "YulIf",
															"src": "29608:57:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "29695:4:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "29705:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "29717:4:8",
																						"type": "",
																						"value": "0x20"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "29723:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "29713:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "29713:17:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29701:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29701:30:8"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "29675:19:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "29675:57:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29675:57:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "29741:10:8",
															"value": {
																"name": "msg",
																"nodeType": "YulIdentifier",
																"src": "29748:3:8"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "29741:3:8"
																}
															]
														}
													]
												},
												"name": "try_decode_error_message",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "29085:3:8",
														"type": ""
													}
												],
												"src": "29046:711:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29869:133:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "29891:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29899:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29887:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29887:14:8"
																	},
																	{
																		"hexValue": "455243313135353a207472616e7366657220746f206e6f6e2d45524331313535",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "29903:34:8",
																		"type": "",
																		"value": "ERC1155: transfer to non-ERC1155"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29880:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "29880:58:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29880:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "29959:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29967:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29955:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29955:15:8"
																	},
																	{
																		"hexValue": "526563656976657220696d706c656d656e746572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "29972:22:8",
																		"type": "",
																		"value": "Receiver implementer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29948:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "29948:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29948:47:8"
														}
													]
												},
												"name": "store_literal_in_memory_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "29861:6:8",
														"type": ""
													}
												],
												"src": "29763:239:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "30154:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "30164:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "30230:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "30235:2:8",
																		"type": "",
																		"value": "52"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "30171:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "30171:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "30164:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "30336:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d",
																	"nodeType": "YulIdentifier",
																	"src": "30247:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "30247:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30247:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "30349:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "30360:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "30365:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "30356:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "30356:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "30349:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "30142:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "30150:3:8",
														"type": ""
													}
												],
												"src": "30008:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "30551:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "30561:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "30573:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "30584:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "30569:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "30569:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "30561:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "30608:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30619:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "30604:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30604:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "30627:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "30633:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "30623:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30623:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "30597:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "30597:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30597:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "30653:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "30787:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "30661:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "30661:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "30653:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "30531:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "30546:4:8",
														"type": ""
													}
												],
												"src": "30380:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "30911:121:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "30933:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30941:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "30929:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30929:14:8"
																	},
																	{
																		"hexValue": "455243313135353a204552433131353552656365697665722072656a65637465",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "30945:34:8",
																		"type": "",
																		"value": "ERC1155: ERC1155Receiver rejecte"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "30922:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "30922:58:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30922:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "31001:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "31009:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "30997:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30997:15:8"
																	},
																	{
																		"hexValue": "6420746f6b656e73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "31014:10:8",
																		"type": "",
																		"value": "d tokens"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "30990:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "30990:35:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30990:35:8"
														}
													]
												},
												"name": "store_literal_in_memory_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "30903:6:8",
														"type": ""
													}
												],
												"src": "30805:227:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "31184:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "31194:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "31260:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "31265:2:8",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "31201:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "31201:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "31194:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "31366:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																	"nodeType": "YulIdentifier",
																	"src": "31277:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "31277:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "31277:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "31379:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "31390:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "31395:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "31386:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "31386:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "31379:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "31172:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "31180:3:8",
														"type": ""
													}
												],
												"src": "31038:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "31581:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "31591:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "31603:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "31614:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "31599:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "31599:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "31591:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "31638:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "31649:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "31634:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31634:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "31657:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "31663:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "31653:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31653:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "31627:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "31627:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "31627:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "31683:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "31817:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "31691:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "31691:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "31683:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "31561:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "31576:4:8",
														"type": ""
													}
												],
												"src": "31410:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "32063:523:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "32073:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "32085:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "32096:3:8",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "32081:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "32081:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "32073:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "32154:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "32167:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "32178:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "32163:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "32163:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "32110:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "32110:71:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "32110:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "32235:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "32248:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "32259:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "32244:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "32244:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "32191:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "32191:72:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "32191:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "32317:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "32330:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "32341:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "32326:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "32326:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "32273:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "32273:72:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "32273:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "32399:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "32412:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "32423:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "32408:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "32408:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "32355:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "32355:72:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "32355:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "32448:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "32459:3:8",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "32444:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "32444:19:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "32469:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "32475:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "32465:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "32465:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "32437:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "32437:49:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "32437:49:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "32495:84:8",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "32565:6:8"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "32574:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "32503:61:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "32503:76:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "32495:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "32003:9:8",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "32015:6:8",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "32023:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "32031:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "32039:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "32047:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "32058:4:8",
														"type": ""
													}
												],
												"src": "31835:751:8"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    // address[]\n    function abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_address(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_address_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: address zero is not a v\")\n\n        mstore(add(memPtr, 32), \"alid owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: caller is not token own\")\n\n        mstore(add(memPtr, 32), \"er or approved\")\n\n    }\n\n    function abi_encode_t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 46)\n        store_literal_in_memory_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: accounts and ids length\")\n\n        mstore(add(memPtr, 32), \" mismatch\")\n\n    }\n\n    function abi_encode_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function store_literal_in_memory_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: ids and amounts length \")\n\n        mstore(add(memPtr, 32), \"mismatch\")\n\n    }\n\n    function abi_encode_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 40)\n        store_literal_in_memory_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: transfer to the zero ad\")\n\n        mstore(add(memPtr, 32), \"dress\")\n\n    }\n\n    function abi_encode_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: insufficient balance fo\")\n\n        mstore(add(memPtr, 32), \"r transfer\")\n\n    }\n\n    function abi_encode_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function store_literal_in_memory_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: setting approval status\")\n\n        mstore(add(memPtr, 32), \" for self\")\n\n    }\n\n    function abi_encode_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value2,  tail)\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value3,  tail)\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value4,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function shift_right_224_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(224, value)\n\n    }\n\n    function return_data_selector() -> sig {\n        if gt(returndatasize(), 3) {\n            returndatacopy(0, 0, 4)\n            sig := shift_right_224_unsigned(mload(0))\n        }\n    }\n\n    function try_decode_error_message() -> ret {\n        if lt(returndatasize(), 0x44) { leave }\n\n        let data := allocate_unbounded()\n        returndatacopy(data, 4, sub(returndatasize(), 4))\n\n        let offset := mload(data)\n        if or(\n            gt(offset, 0xffffffffffffffff),\n            gt(add(offset, 0x24), returndatasize())\n            ) {\n            leave\n        }\n\n        let msg := add(data, offset)\n        let length := mload(msg)\n        if gt(length, 0xffffffffffffffff) { leave }\n\n        let end := add(add(msg, 0x20), length)\n        if gt(end, add(data, sub(returndatasize(), 4))) { leave }\n\n        finalize_allocation(data, add(offset, add(0x20, length)))\n        ret := msg\n    }\n\n    function store_literal_in_memory_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: transfer to non-ERC1155\")\n\n        mstore(add(memPtr, 32), \"Receiver implementer\")\n\n    }\n\n    function abi_encode_t_stringliteral_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 52)\n        store_literal_in_memory_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: ERC1155Receiver rejecte\")\n\n        mstore(add(memPtr, 32), \"d tokens\")\n\n    }\n\n    function abi_encode_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 40)\n        store_literal_in_memory_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value4,  tail)\n\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100875760003560e01c80634e1273f41161005b5780634e1273f414610138578063a22cb46514610168578063e985e9c514610184578063f242432a146101b457610087565b8062fdd58e1461008c57806301ffc9a7146100bc5780630e89341c146100ec5780632eb2c2d61461011c575b600080fd5b6100a660048036038101906100a191906113d4565b6101d0565b6040516100b39190611423565b60405180910390f35b6100d660048036038101906100d19190611496565b610299565b6040516100e391906114de565b60405180910390f35b610106600480360381019061010191906114f9565b61037b565b60405161011391906115bf565b60405180910390f35b610136600480360381019061013191906117de565b61040f565b005b610152600480360381019061014d9190611970565b6104b0565b60405161015f9190611aa6565b60405180910390f35b610182600480360381019061017d9190611af4565b6105c9565b005b61019e60048036038101906101999190611b34565b6105df565b6040516101ab91906114de565b60405180910390f35b6101ce60048036038101906101c99190611b74565b610673565b005b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610241576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023890611c7d565b60405180910390fd5b60008083815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60007fd9b67a26000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061036457507f0e89341c000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610374575061037382610714565b5b9050919050565b60606002805461038a90611ccc565b80601f01602080910402602001604051908101604052809291908181526020018280546103b690611ccc565b80156104035780601f106103d857610100808354040283529160200191610403565b820191906000526020600020905b8154815290600101906020018083116103e657829003601f168201915b50505050509050919050565b61041761077e565b73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16148061045d575061045c8561045761077e565b6105df565b5b61049c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161049390611d70565b60405180910390fd5b6104a98585858585610786565b5050505050565b606081518351146104f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ed90611e02565b60405180910390fd5b6000835167ffffffffffffffff811115610513576105126115e6565b5b6040519080825280602002602001820160405280156105415781602001602082028036833780820191505090505b50905060005b84518110156105be5761058e85828151811061056657610565611e22565b5b602002602001015185838151811061058157610580611e22565b5b60200260200101516101d0565b8282815181106105a1576105a0611e22565b5b602002602001018181525050806105b790611e80565b9050610547565b508091505092915050565b6105db6105d461077e565b8383610aa8565b5050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b61067b61077e565b73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614806106c157506106c0856106bb61077e565b6105df565b5b610700576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106f790611d70565b60405180910390fd5b61070d8585858585610c15565b5050505050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600033905090565b81518351146107ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107c190611f3b565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16141561083a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083190611fcd565b60405180910390fd5b600061084461077e565b9050610854818787878787610eb1565b60005b8451811015610a0557600085828151811061087557610874611e22565b5b60200260200101519050600085838151811061089457610893611e22565b5b60200260200101519050600080600084815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610935576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161092c9061205f565b60405180910390fd5b81810360008085815260200190815260200160002060008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508160008085815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546109ea919061207f565b92505081905550505050806109fe90611e80565b9050610857565b508473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051610a7c9291906120d5565b60405180910390a4610a92818787878787610eb9565b610aa0818787878787610ec1565b505050505050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610b17576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b0e9061217e565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610c0891906114de565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415610c85576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c7c90611fcd565b60405180910390fd5b6000610c8f61077e565b90506000610c9c856110a8565b90506000610ca9856110a8565b9050610cb9838989858589610eb1565b600080600088815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905085811015610d50576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d479061205f565b60405180910390fd5b85810360008089815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508560008089815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610e05919061207f565b925050819055508773ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628a8a604051610e8292919061219e565b60405180910390a4610e98848a8a86868a610eb9565b610ea6848a8a8a8a8a611122565b505050505050505050565b505050505050565b505050505050565b610ee08473ffffffffffffffffffffffffffffffffffffffff16611309565b156110a0578373ffffffffffffffffffffffffffffffffffffffff1663bc197c8187878686866040518663ffffffff1660e01b8152600401610f2695949392919061222b565b602060405180830381600087803b158015610f4057600080fd5b505af1925050508015610f7157506040513d601f19601f82011682018060405250810190610f6e91906122a8565b60015b61101757610f7d6122e2565b806308c379a01415610fda5750610f92612304565b80610f9d5750610fdc565b806040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fd191906115bf565b60405180910390fd5b505b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161100e9061240c565b60405180910390fd5b63bc197c8160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461109e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110959061249e565b60405180910390fd5b505b505050505050565b60606000600167ffffffffffffffff8111156110c7576110c66115e6565b5b6040519080825280602002602001820160405280156110f55781602001602082028036833780820191505090505b509050828160008151811061110d5761110c611e22565b5b60200260200101818152505080915050919050565b6111418473ffffffffffffffffffffffffffffffffffffffff16611309565b15611301578373ffffffffffffffffffffffffffffffffffffffff1663f23a6e6187878686866040518663ffffffff1660e01b81526004016111879594939291906124be565b602060405180830381600087803b1580156111a157600080fd5b505af19250505080156111d257506040513d601f19601f820116820180604052508101906111cf91906122a8565b60015b611278576111de6122e2565b806308c379a0141561123b57506111f3612304565b806111fe575061123d565b806040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161123291906115bf565b60405180910390fd5b505b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161126f9061240c565b60405180910390fd5b63f23a6e6160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146112ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112f69061249e565b60405180910390fd5b505b505050505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061136b82611340565b9050919050565b61137b81611360565b811461138657600080fd5b50565b60008135905061139881611372565b92915050565b6000819050919050565b6113b18161139e565b81146113bc57600080fd5b50565b6000813590506113ce816113a8565b92915050565b600080604083850312156113eb576113ea611336565b5b60006113f985828601611389565b925050602061140a858286016113bf565b9150509250929050565b61141d8161139e565b82525050565b60006020820190506114386000830184611414565b92915050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6114738161143e565b811461147e57600080fd5b50565b6000813590506114908161146a565b92915050565b6000602082840312156114ac576114ab611336565b5b60006114ba84828501611481565b91505092915050565b60008115159050919050565b6114d8816114c3565b82525050565b60006020820190506114f360008301846114cf565b92915050565b60006020828403121561150f5761150e611336565b5b600061151d848285016113bf565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611560578082015181840152602081019050611545565b8381111561156f576000848401525b50505050565b6000601f19601f8301169050919050565b600061159182611526565b61159b8185611531565b93506115ab818560208601611542565b6115b481611575565b840191505092915050565b600060208201905081810360008301526115d98184611586565b905092915050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61161e82611575565b810181811067ffffffffffffffff8211171561163d5761163c6115e6565b5b80604052505050565b600061165061132c565b905061165c8282611615565b919050565b600067ffffffffffffffff82111561167c5761167b6115e6565b5b602082029050602081019050919050565b600080fd5b60006116a56116a084611661565b611646565b905080838252602082019050602084028301858111156116c8576116c761168d565b5b835b818110156116f157806116dd88826113bf565b8452602084019350506020810190506116ca565b5050509392505050565b600082601f8301126117105761170f6115e1565b5b8135611720848260208601611692565b91505092915050565b600080fd5b600067ffffffffffffffff821115611749576117486115e6565b5b61175282611575565b9050602081019050919050565b82818337600083830152505050565b600061178161177c8461172e565b611646565b90508281526020810184848401111561179d5761179c611729565b5b6117a884828561175f565b509392505050565b600082601f8301126117c5576117c46115e1565b5b81356117d584826020860161176e565b91505092915050565b600080600080600060a086880312156117fa576117f9611336565b5b600061180888828901611389565b955050602061181988828901611389565b945050604086013567ffffffffffffffff81111561183a5761183961133b565b5b611846888289016116fb565b935050606086013567ffffffffffffffff8111156118675761186661133b565b5b611873888289016116fb565b925050608086013567ffffffffffffffff8111156118945761189361133b565b5b6118a0888289016117b0565b9150509295509295909350565b600067ffffffffffffffff8211156118c8576118c76115e6565b5b602082029050602081019050919050565b60006118ec6118e7846118ad565b611646565b9050808382526020820190506020840283018581111561190f5761190e61168d565b5b835b8181101561193857806119248882611389565b845260208401935050602081019050611911565b5050509392505050565b600082601f830112611957576119566115e1565b5b81356119678482602086016118d9565b91505092915050565b6000806040838503121561198757611986611336565b5b600083013567ffffffffffffffff8111156119a5576119a461133b565b5b6119b185828601611942565b925050602083013567ffffffffffffffff8111156119d2576119d161133b565b5b6119de858286016116fb565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b611a1d8161139e565b82525050565b6000611a2f8383611a14565b60208301905092915050565b6000602082019050919050565b6000611a53826119e8565b611a5d81856119f3565b9350611a6883611a04565b8060005b83811015611a99578151611a808882611a23565b9750611a8b83611a3b565b925050600181019050611a6c565b5085935050505092915050565b60006020820190508181036000830152611ac08184611a48565b905092915050565b611ad1816114c3565b8114611adc57600080fd5b50565b600081359050611aee81611ac8565b92915050565b60008060408385031215611b0b57611b0a611336565b5b6000611b1985828601611389565b9250506020611b2a85828601611adf565b9150509250929050565b60008060408385031215611b4b57611b4a611336565b5b6000611b5985828601611389565b9250506020611b6a85828601611389565b9150509250929050565b600080600080600060a08688031215611b9057611b8f611336565b5b6000611b9e88828901611389565b9550506020611baf88828901611389565b9450506040611bc0888289016113bf565b9350506060611bd1888289016113bf565b925050608086013567ffffffffffffffff811115611bf257611bf161133b565b5b611bfe888289016117b0565b9150509295509295909350565b7f455243313135353a2061646472657373207a65726f206973206e6f742061207660008201527f616c6964206f776e657200000000000000000000000000000000000000000000602082015250565b6000611c67602a83611531565b9150611c7282611c0b565b604082019050919050565b60006020820190508181036000830152611c9681611c5a565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611ce457607f821691505b60208210811415611cf857611cf7611c9d565b5b50919050565b7f455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e60008201527f6572206f7220617070726f766564000000000000000000000000000000000000602082015250565b6000611d5a602e83611531565b9150611d6582611cfe565b604082019050919050565b60006020820190508181036000830152611d8981611d4d565b9050919050565b7f455243313135353a206163636f756e747320616e6420696473206c656e67746860008201527f206d69736d617463680000000000000000000000000000000000000000000000602082015250565b6000611dec602983611531565b9150611df782611d90565b604082019050919050565b60006020820190508181036000830152611e1b81611ddf565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611e8b8261139e565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611ebe57611ebd611e51565b5b600182019050919050565b7f455243313135353a2069647320616e6420616d6f756e7473206c656e6774682060008201527f6d69736d61746368000000000000000000000000000000000000000000000000602082015250565b6000611f25602883611531565b9150611f3082611ec9565b604082019050919050565b60006020820190508181036000830152611f5481611f18565b9050919050565b7f455243313135353a207472616e7366657220746f20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b6000611fb7602583611531565b9150611fc282611f5b565b604082019050919050565b60006020820190508181036000830152611fe681611faa565b9050919050565b7f455243313135353a20696e73756666696369656e742062616c616e636520666f60008201527f72207472616e7366657200000000000000000000000000000000000000000000602082015250565b6000612049602a83611531565b915061205482611fed565b604082019050919050565b600060208201905081810360008301526120788161203c565b9050919050565b600061208a8261139e565b91506120958361139e565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156120ca576120c9611e51565b5b828201905092915050565b600060408201905081810360008301526120ef8185611a48565b905081810360208301526121038184611a48565b90509392505050565b7f455243313135353a2073657474696e6720617070726f76616c2073746174757360008201527f20666f722073656c660000000000000000000000000000000000000000000000602082015250565b6000612168602983611531565b91506121738261210c565b604082019050919050565b600060208201905081810360008301526121978161215b565b9050919050565b60006040820190506121b36000830185611414565b6121c06020830184611414565b9392505050565b6121d081611360565b82525050565b600081519050919050565b600082825260208201905092915050565b60006121fd826121d6565b61220781856121e1565b9350612217818560208601611542565b61222081611575565b840191505092915050565b600060a08201905061224060008301886121c7565b61224d60208301876121c7565b818103604083015261225f8186611a48565b905081810360608301526122738185611a48565b9050818103608083015261228781846121f2565b90509695505050505050565b6000815190506122a28161146a565b92915050565b6000602082840312156122be576122bd611336565b5b60006122cc84828501612293565b91505092915050565b60008160e01c9050919050565b600060033d11156123015760046000803e6122fe6000516122d5565b90505b90565b600060443d101561231457612397565b61231c61132c565b60043d036004823e80513d602482011167ffffffffffffffff82111715612344575050612397565b808201805167ffffffffffffffff8111156123625750505050612397565b80602083010160043d03850181111561237f575050505050612397565b61238e82602001850186611615565b82955050505050505b90565b7f455243313135353a207472616e7366657220746f206e6f6e2d4552433131353560008201527f526563656976657220696d706c656d656e746572000000000000000000000000602082015250565b60006123f6603483611531565b91506124018261239a565b604082019050919050565b60006020820190508181036000830152612425816123e9565b9050919050565b7f455243313135353a204552433131353552656365697665722072656a6563746560008201527f6420746f6b656e73000000000000000000000000000000000000000000000000602082015250565b6000612488602883611531565b91506124938261242c565b604082019050919050565b600060208201905081810360008301526124b78161247b565b9050919050565b600060a0820190506124d360008301886121c7565b6124e060208301876121c7565b6124ed6040830186611414565b6124fa6060830185611414565b818103608083015261250c81846121f2565b9050969550505050505056fea2646970667358221220d00f609ef91ead9d359e64759ff35caeb0e05c4e9c723a2c4b0528bec315670f64736f6c63430008090033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x87 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4E1273F4 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x184 JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x1B4 JUMPI PUSH2 0x87 JUMP JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xBC JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0xEC JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x11C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA1 SWAP2 SWAP1 PUSH2 0x13D4 JUMP JUMPDEST PUSH2 0x1D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB3 SWAP2 SWAP1 PUSH2 0x1423 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD1 SWAP2 SWAP1 PUSH2 0x1496 JUMP JUMPDEST PUSH2 0x299 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE3 SWAP2 SWAP1 PUSH2 0x14DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x106 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x101 SWAP2 SWAP1 PUSH2 0x14F9 JUMP JUMPDEST PUSH2 0x37B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x113 SWAP2 SWAP1 PUSH2 0x15BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x136 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x131 SWAP2 SWAP1 PUSH2 0x17DE JUMP JUMPDEST PUSH2 0x40F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x152 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14D SWAP2 SWAP1 PUSH2 0x1970 JUMP JUMPDEST PUSH2 0x4B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0x1AA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0x1AF4 JUMP JUMPDEST PUSH2 0x5C9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x19E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x199 SWAP2 SWAP1 PUSH2 0x1B34 JUMP JUMPDEST PUSH2 0x5DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AB SWAP2 SWAP1 PUSH2 0x14DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C9 SWAP2 SWAP1 PUSH2 0x1B74 JUMP JUMPDEST PUSH2 0x673 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x241 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x238 SWAP1 PUSH2 0x1C7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xD9B67A2600000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x364 JUMPI POP PUSH32 0xE89341C00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x374 JUMPI POP PUSH2 0x373 DUP3 PUSH2 0x714 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x38A SWAP1 PUSH2 0x1CCC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3B6 SWAP1 PUSH2 0x1CCC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x403 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3D8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x403 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3E6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x417 PUSH2 0x77E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x45D JUMPI POP PUSH2 0x45C DUP6 PUSH2 0x457 PUSH2 0x77E JUMP JUMPDEST PUSH2 0x5DF JUMP JUMPDEST JUMPDEST PUSH2 0x49C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x493 SWAP1 PUSH2 0x1D70 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4A9 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x786 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x4F6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4ED SWAP1 PUSH2 0x1E02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x513 JUMPI PUSH2 0x512 PUSH2 0x15E6 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x541 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x5BE JUMPI PUSH2 0x58E DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x566 JUMPI PUSH2 0x565 PUSH2 0x1E22 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x581 JUMPI PUSH2 0x580 PUSH2 0x1E22 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1D0 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x5A1 JUMPI PUSH2 0x5A0 PUSH2 0x1E22 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH2 0x5B7 SWAP1 PUSH2 0x1E80 JUMP JUMPDEST SWAP1 POP PUSH2 0x547 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5DB PUSH2 0x5D4 PUSH2 0x77E JUMP JUMPDEST DUP4 DUP4 PUSH2 0xAA8 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x67B PUSH2 0x77E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x6C1 JUMPI POP PUSH2 0x6C0 DUP6 PUSH2 0x6BB PUSH2 0x77E JUMP JUMPDEST PUSH2 0x5DF JUMP JUMPDEST JUMPDEST PUSH2 0x700 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F7 SWAP1 PUSH2 0x1D70 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x70D DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0xC15 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x7CA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7C1 SWAP1 PUSH2 0x1F3B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x83A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x831 SWAP1 PUSH2 0x1FCD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x844 PUSH2 0x77E JUMP JUMPDEST SWAP1 POP PUSH2 0x854 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xEB1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0xA05 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x875 JUMPI PUSH2 0x874 PUSH2 0x1E22 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x894 JUMPI PUSH2 0x893 PUSH2 0x1E22 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x935 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x92C SWAP1 PUSH2 0x205F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP13 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x9EA SWAP2 SWAP1 PUSH2 0x207F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 PUSH2 0x9FE SWAP1 PUSH2 0x1E80 JUMP JUMPDEST SWAP1 POP PUSH2 0x857 JUMP JUMPDEST POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0xA7C SWAP3 SWAP2 SWAP1 PUSH2 0x20D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xA92 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xEB9 JUMP JUMPDEST PUSH2 0xAA0 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xEC1 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xB17 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB0E SWAP1 PUSH2 0x217E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xC08 SWAP2 SWAP1 PUSH2 0x14DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xC85 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC7C SWAP1 PUSH2 0x1FCD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xC8F PUSH2 0x77E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xC9C DUP6 PUSH2 0x10A8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xCA9 DUP6 PUSH2 0x10A8 JUMP JUMPDEST SWAP1 POP PUSH2 0xCB9 DUP4 DUP10 DUP10 DUP6 DUP6 DUP10 PUSH2 0xEB1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP6 DUP2 LT ISZERO PUSH2 0xD50 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD47 SWAP1 PUSH2 0x205F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP6 DUP2 SUB PUSH1 0x0 DUP1 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP6 PUSH1 0x0 DUP1 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xE05 SWAP2 SWAP1 PUSH2 0x207F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP11 DUP11 PUSH1 0x40 MLOAD PUSH2 0xE82 SWAP3 SWAP2 SWAP1 PUSH2 0x219E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xE98 DUP5 DUP11 DUP11 DUP7 DUP7 DUP11 PUSH2 0xEB9 JUMP JUMPDEST PUSH2 0xEA6 DUP5 DUP11 DUP11 DUP11 DUP11 DUP11 PUSH2 0x1122 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xEE0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1309 JUMP JUMPDEST ISZERO PUSH2 0x10A0 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBC197C81 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF26 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x222B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF40 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xF71 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF6E SWAP2 SWAP1 PUSH2 0x22A8 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1017 JUMPI PUSH2 0xF7D PUSH2 0x22E2 JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 EQ ISZERO PUSH2 0xFDA JUMPI POP PUSH2 0xF92 PUSH2 0x2304 JUMP JUMPDEST DUP1 PUSH2 0xF9D JUMPI POP PUSH2 0xFDC JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFD1 SWAP2 SWAP1 PUSH2 0x15BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x100E SWAP1 PUSH2 0x240C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x109E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1095 SWAP1 PUSH2 0x249E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x10C7 JUMPI PUSH2 0x10C6 PUSH2 0x15E6 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x10F5 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x110D JUMPI PUSH2 0x110C PUSH2 0x1E22 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1141 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1309 JUMP JUMPDEST ISZERO PUSH2 0x1301 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF23A6E61 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1187 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x24BE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x11A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x11D2 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11CF SWAP2 SWAP1 PUSH2 0x22A8 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1278 JUMPI PUSH2 0x11DE PUSH2 0x22E2 JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 EQ ISZERO PUSH2 0x123B JUMPI POP PUSH2 0x11F3 PUSH2 0x2304 JUMP JUMPDEST DUP1 PUSH2 0x11FE JUMPI POP PUSH2 0x123D JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1232 SWAP2 SWAP1 PUSH2 0x15BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x126F SWAP1 PUSH2 0x240C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x12FF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12F6 SWAP1 PUSH2 0x249E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x136B DUP3 PUSH2 0x1340 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x137B DUP2 PUSH2 0x1360 JUMP JUMPDEST DUP2 EQ PUSH2 0x1386 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1398 DUP2 PUSH2 0x1372 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13B1 DUP2 PUSH2 0x139E JUMP JUMPDEST DUP2 EQ PUSH2 0x13BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x13CE DUP2 PUSH2 0x13A8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13EB JUMPI PUSH2 0x13EA PUSH2 0x1336 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x13F9 DUP6 DUP3 DUP7 ADD PUSH2 0x1389 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x140A DUP6 DUP3 DUP7 ADD PUSH2 0x13BF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x141D DUP2 PUSH2 0x139E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1438 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1414 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1473 DUP2 PUSH2 0x143E JUMP JUMPDEST DUP2 EQ PUSH2 0x147E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1490 DUP2 PUSH2 0x146A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14AC JUMPI PUSH2 0x14AB PUSH2 0x1336 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x14BA DUP5 DUP3 DUP6 ADD PUSH2 0x1481 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14D8 DUP2 PUSH2 0x14C3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14F3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x14CF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x150F JUMPI PUSH2 0x150E PUSH2 0x1336 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x151D DUP5 DUP3 DUP6 ADD PUSH2 0x13BF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1560 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1545 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x156F JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1591 DUP3 PUSH2 0x1526 JUMP JUMPDEST PUSH2 0x159B DUP2 DUP6 PUSH2 0x1531 JUMP JUMPDEST SWAP4 POP PUSH2 0x15AB DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1542 JUMP JUMPDEST PUSH2 0x15B4 DUP2 PUSH2 0x1575 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x15D9 DUP2 DUP5 PUSH2 0x1586 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x161E DUP3 PUSH2 0x1575 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x163D JUMPI PUSH2 0x163C PUSH2 0x15E6 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1650 PUSH2 0x132C JUMP JUMPDEST SWAP1 POP PUSH2 0x165C DUP3 DUP3 PUSH2 0x1615 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x167C JUMPI PUSH2 0x167B PUSH2 0x15E6 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x16A5 PUSH2 0x16A0 DUP5 PUSH2 0x1661 JUMP JUMPDEST PUSH2 0x1646 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x16C8 JUMPI PUSH2 0x16C7 PUSH2 0x168D JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x16F1 JUMPI DUP1 PUSH2 0x16DD DUP9 DUP3 PUSH2 0x13BF JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x16CA JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1710 JUMPI PUSH2 0x170F PUSH2 0x15E1 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1720 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1692 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1749 JUMPI PUSH2 0x1748 PUSH2 0x15E6 JUMP JUMPDEST JUMPDEST PUSH2 0x1752 DUP3 PUSH2 0x1575 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1781 PUSH2 0x177C DUP5 PUSH2 0x172E JUMP JUMPDEST PUSH2 0x1646 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x179D JUMPI PUSH2 0x179C PUSH2 0x1729 JUMP JUMPDEST JUMPDEST PUSH2 0x17A8 DUP5 DUP3 DUP6 PUSH2 0x175F JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x17C5 JUMPI PUSH2 0x17C4 PUSH2 0x15E1 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x17D5 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x176E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x17FA JUMPI PUSH2 0x17F9 PUSH2 0x1336 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1808 DUP9 DUP3 DUP10 ADD PUSH2 0x1389 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1819 DUP9 DUP3 DUP10 ADD PUSH2 0x1389 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x183A JUMPI PUSH2 0x1839 PUSH2 0x133B JUMP JUMPDEST JUMPDEST PUSH2 0x1846 DUP9 DUP3 DUP10 ADD PUSH2 0x16FB JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1867 JUMPI PUSH2 0x1866 PUSH2 0x133B JUMP JUMPDEST JUMPDEST PUSH2 0x1873 DUP9 DUP3 DUP10 ADD PUSH2 0x16FB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1894 JUMPI PUSH2 0x1893 PUSH2 0x133B JUMP JUMPDEST JUMPDEST PUSH2 0x18A0 DUP9 DUP3 DUP10 ADD PUSH2 0x17B0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x18C8 JUMPI PUSH2 0x18C7 PUSH2 0x15E6 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18EC PUSH2 0x18E7 DUP5 PUSH2 0x18AD JUMP JUMPDEST PUSH2 0x1646 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x190F JUMPI PUSH2 0x190E PUSH2 0x168D JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1938 JUMPI DUP1 PUSH2 0x1924 DUP9 DUP3 PUSH2 0x1389 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1911 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1957 JUMPI PUSH2 0x1956 PUSH2 0x15E1 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1967 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x18D9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1987 JUMPI PUSH2 0x1986 PUSH2 0x1336 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x19A5 JUMPI PUSH2 0x19A4 PUSH2 0x133B JUMP JUMPDEST JUMPDEST PUSH2 0x19B1 DUP6 DUP3 DUP7 ADD PUSH2 0x1942 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x19D2 JUMPI PUSH2 0x19D1 PUSH2 0x133B JUMP JUMPDEST JUMPDEST PUSH2 0x19DE DUP6 DUP3 DUP7 ADD PUSH2 0x16FB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A1D DUP2 PUSH2 0x139E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A2F DUP4 DUP4 PUSH2 0x1A14 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A53 DUP3 PUSH2 0x19E8 JUMP JUMPDEST PUSH2 0x1A5D DUP2 DUP6 PUSH2 0x19F3 JUMP JUMPDEST SWAP4 POP PUSH2 0x1A68 DUP4 PUSH2 0x1A04 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1A99 JUMPI DUP2 MLOAD PUSH2 0x1A80 DUP9 DUP3 PUSH2 0x1A23 JUMP JUMPDEST SWAP8 POP PUSH2 0x1A8B DUP4 PUSH2 0x1A3B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1A6C JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1AC0 DUP2 DUP5 PUSH2 0x1A48 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1AD1 DUP2 PUSH2 0x14C3 JUMP JUMPDEST DUP2 EQ PUSH2 0x1ADC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1AEE DUP2 PUSH2 0x1AC8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B0B JUMPI PUSH2 0x1B0A PUSH2 0x1336 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B19 DUP6 DUP3 DUP7 ADD PUSH2 0x1389 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1B2A DUP6 DUP3 DUP7 ADD PUSH2 0x1ADF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B4B JUMPI PUSH2 0x1B4A PUSH2 0x1336 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B59 DUP6 DUP3 DUP7 ADD PUSH2 0x1389 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1B6A DUP6 DUP3 DUP7 ADD PUSH2 0x1389 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1B90 JUMPI PUSH2 0x1B8F PUSH2 0x1336 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B9E DUP9 DUP3 DUP10 ADD PUSH2 0x1389 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1BAF DUP9 DUP3 DUP10 ADD PUSH2 0x1389 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x1BC0 DUP9 DUP3 DUP10 ADD PUSH2 0x13BF JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x1BD1 DUP9 DUP3 DUP10 ADD PUSH2 0x13BF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1BF2 JUMPI PUSH2 0x1BF1 PUSH2 0x133B JUMP JUMPDEST JUMPDEST PUSH2 0x1BFE DUP9 DUP3 DUP10 ADD PUSH2 0x17B0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH32 0x455243313135353A2061646472657373207A65726F206973206E6F7420612076 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C6964206F776E657200000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C67 PUSH1 0x2A DUP4 PUSH2 0x1531 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C72 DUP3 PUSH2 0x1C0B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C96 DUP2 PUSH2 0x1C5A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1CE4 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1CF8 JUMPI PUSH2 0x1CF7 PUSH2 0x1C9D JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A2063616C6C6572206973206E6F7420746F6B656E206F776E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6572206F7220617070726F766564000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D5A PUSH1 0x2E DUP4 PUSH2 0x1531 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D65 DUP3 PUSH2 0x1CFE JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D89 DUP2 PUSH2 0x1D4D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x206D69736D617463680000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DEC PUSH1 0x29 DUP4 PUSH2 0x1531 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DF7 DUP3 PUSH2 0x1D90 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E1B DUP2 PUSH2 0x1DDF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1E8B DUP3 PUSH2 0x139E JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x1EBE JUMPI PUSH2 0x1EBD PUSH2 0x1E51 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6D69736D61746368000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F25 PUSH1 0x28 DUP4 PUSH2 0x1531 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F30 DUP3 PUSH2 0x1EC9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F54 DUP2 PUSH2 0x1F18 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FB7 PUSH1 0x25 DUP4 PUSH2 0x1531 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FC2 DUP3 PUSH2 0x1F5B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1FE6 DUP2 PUSH2 0x1FAA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72207472616E7366657200000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2049 PUSH1 0x2A DUP4 PUSH2 0x1531 JUMP JUMPDEST SWAP2 POP PUSH2 0x2054 DUP3 PUSH2 0x1FED JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2078 DUP2 PUSH2 0x203C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x208A DUP3 PUSH2 0x139E JUMP JUMPDEST SWAP2 POP PUSH2 0x2095 DUP4 PUSH2 0x139E JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x20CA JUMPI PUSH2 0x20C9 PUSH2 0x1E51 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x20EF DUP2 DUP6 PUSH2 0x1A48 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x2103 DUP2 DUP5 PUSH2 0x1A48 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20666F722073656C660000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2168 PUSH1 0x29 DUP4 PUSH2 0x1531 JUMP JUMPDEST SWAP2 POP PUSH2 0x2173 DUP3 PUSH2 0x210C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2197 DUP2 PUSH2 0x215B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x21B3 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1414 JUMP JUMPDEST PUSH2 0x21C0 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1414 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x21D0 DUP2 PUSH2 0x1360 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21FD DUP3 PUSH2 0x21D6 JUMP JUMPDEST PUSH2 0x2207 DUP2 DUP6 PUSH2 0x21E1 JUMP JUMPDEST SWAP4 POP PUSH2 0x2217 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1542 JUMP JUMPDEST PUSH2 0x2220 DUP2 PUSH2 0x1575 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x2240 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x21C7 JUMP JUMPDEST PUSH2 0x224D PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x21C7 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x225F DUP2 DUP7 PUSH2 0x1A48 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2273 DUP2 DUP6 PUSH2 0x1A48 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x2287 DUP2 DUP5 PUSH2 0x21F2 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x22A2 DUP2 PUSH2 0x146A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x22BE JUMPI PUSH2 0x22BD PUSH2 0x1336 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x22CC DUP5 DUP3 DUP6 ADD PUSH2 0x2293 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xE0 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x2301 JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY PUSH2 0x22FE PUSH1 0x0 MLOAD PUSH2 0x22D5 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x2314 JUMPI PUSH2 0x2397 JUMP JUMPDEST PUSH2 0x231C PUSH2 0x132C JUMP JUMPDEST PUSH1 0x4 RETURNDATASIZE SUB PUSH1 0x4 DUP3 RETURNDATACOPY DUP1 MLOAD RETURNDATASIZE PUSH1 0x24 DUP3 ADD GT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2344 JUMPI POP POP PUSH2 0x2397 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2362 JUMPI POP POP POP POP PUSH2 0x2397 JUMP JUMPDEST DUP1 PUSH1 0x20 DUP4 ADD ADD PUSH1 0x4 RETURNDATASIZE SUB DUP6 ADD DUP2 GT ISZERO PUSH2 0x237F JUMPI POP POP POP POP POP PUSH2 0x2397 JUMP JUMPDEST PUSH2 0x238E DUP3 PUSH1 0x20 ADD DUP6 ADD DUP7 PUSH2 0x1615 JUMP JUMPDEST DUP3 SWAP6 POP POP POP POP POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2D45524331313535 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x526563656976657220696D706C656D656E746572000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23F6 PUSH1 0x34 DUP4 PUSH2 0x1531 JUMP JUMPDEST SWAP2 POP PUSH2 0x2401 DUP3 PUSH2 0x239A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2425 DUP2 PUSH2 0x23E9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6420746F6B656E73000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2488 PUSH1 0x28 DUP4 PUSH2 0x1531 JUMP JUMPDEST SWAP2 POP PUSH2 0x2493 DUP3 PUSH2 0x242C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x24B7 DUP2 PUSH2 0x247B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x24D3 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x21C7 JUMP JUMPDEST PUSH2 0x24E0 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x21C7 JUMP JUMPDEST PUSH2 0x24ED PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x1414 JUMP JUMPDEST PUSH2 0x24FA PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x1414 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x250C DUP2 DUP5 PUSH2 0x21F2 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD0 0xF PUSH1 0x9E 0xF9 0x1E 0xAD SWAP14 CALLDATALOAD SWAP15 PUSH5 0x759FF35CAE 0xB0 0xE0 0x5C 0x4E SWAP13 PUSH19 0x3A2C4B0528BEC315670F64736F6C6343000809 STOP CALLER ",
							"sourceMap": "570:16689:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2185:227;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1236:305;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1940:103;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4064:426;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2569:508;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3145:153;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3365:166;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3598:394;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2185:227;2271:7;2317:1;2298:21;;:7;:21;;;;2290:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;2383:9;:13;2393:2;2383:13;;;;;;;;;;;:22;2397:7;2383:22;;;;;;;;;;;;;;;;2376:29;;2185:227;;;;:::o;1236:305::-;1338:4;1388:26;1373:41;;;:11;:41;;;;:109;;;;1445:37;1430:52;;;:11;:52;;;;1373:109;:161;;;;1498:36;1522:11;1498:23;:36::i;:::-;1373:161;1354:180;;1236:305;;;:::o;1940:103::-;2000:13;2032:4;2025:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1940:103;;;:::o;4064:426::-;4297:12;:10;:12::i;:::-;4289:20;;:4;:20;;;:60;;;;4313:36;4330:4;4336:12;:10;:12::i;:::-;4313:16;:36::i;:::-;4289:60;4268:153;;;;;;;;;;;;:::i;:::-;;;;;;;;;4431:52;4454:4;4460:2;4464:3;4469:7;4478:4;4431:22;:52::i;:::-;4064:426;;;;;:::o;2569:508::-;2720:16;2779:3;:10;2760:8;:15;:29;2752:83;;;;;;;;;;;;:::i;:::-;;;;;;;;;2846:30;2893:8;:15;2879:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2846:63;;2925:9;2920:120;2944:8;:15;2940:1;:19;2920:120;;;2999:30;3009:8;3018:1;3009:11;;;;;;;;:::i;:::-;;;;;;;;3022:3;3026:1;3022:6;;;;;;;;:::i;:::-;;;;;;;;2999:9;:30::i;:::-;2980:13;2994:1;2980:16;;;;;;;;:::i;:::-;;;;;;;:49;;;;;2961:3;;;;:::i;:::-;;;2920:120;;;;3057:13;3050:20;;;2569:508;;;;:::o;3145:153::-;3239:52;3258:12;:10;:12::i;:::-;3272:8;3282;3239:18;:52::i;:::-;3145:153;;:::o;3365:166::-;3464:4;3487:18;:27;3506:7;3487:27;;;;;;;;;;;;;;;:37;3515:8;3487:37;;;;;;;;;;;;;;;;;;;;;;;;;3480:44;;3365:166;;;;:::o;3598:394::-;3806:12;:10;:12::i;:::-;3798:20;;:4;:20;;;:60;;;;3822:36;3839:4;3845:12;:10;:12::i;:::-;3822:16;:36::i;:::-;3798:60;3777:153;;;;;;;;;;;;:::i;:::-;;;;;;;;;3940:45;3958:4;3964:2;3968;3972:6;3980:4;3940:17;:45::i;:::-;3598:394;;;;;:::o;829:155:6:-;914:4;952:25;937:40;;;:11;:40;;;;930:47;;829:155;;;:::o;640:96:5:-;693:7;719:10;712:17;;640:96;:::o;6233:1115:0:-;6453:7;:14;6439:3;:10;:28;6431:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;6544:1;6530:16;;:2;:16;;;;6522:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;6599:16;6618:12;:10;:12::i;:::-;6599:31;;6641:60;6662:8;6672:4;6678:2;6682:3;6687:7;6696:4;6641:20;:60::i;:::-;6717:9;6712:411;6736:3;:10;6732:1;:14;6712:411;;;6767:10;6780:3;6784:1;6780:6;;;;;;;;:::i;:::-;;;;;;;;6767:19;;6800:14;6817:7;6825:1;6817:10;;;;;;;;:::i;:::-;;;;;;;;6800:27;;6842:19;6864:9;:13;6874:2;6864:13;;;;;;;;;;;:19;6878:4;6864:19;;;;;;;;;;;;;;;;6842:41;;6920:6;6905:11;:21;;6897:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;7051:6;7037:11;:20;7015:9;:13;7025:2;7015:13;;;;;;;;;;;:19;7029:4;7015:19;;;;;;;;;;;;;;;:42;;;;7106:6;7085:9;:13;7095:2;7085:13;;;;;;;;;;;:17;7099:2;7085:17;;;;;;;;;;;;;;;;:27;;;;;;;:::i;:::-;;;;;;;;6753:370;;;6748:3;;;;:::i;:::-;;;6712:411;;;;7168:2;7138:47;;7162:4;7138:47;;7152:8;7138:47;;;7172:3;7177:7;7138:47;;;;;;;:::i;:::-;;;;;;;;7196:59;7216:8;7226:4;7232:2;7236:3;7241:7;7250:4;7196:19;:59::i;:::-;7266:75;7302:8;7312:4;7318:2;7322:3;7327:7;7336:4;7266:35;:75::i;:::-;6421:927;6233:1115;;;;;:::o;12910:323::-;13060:8;13051:17;;:5;:17;;;;13043:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;13162:8;13124:18;:25;13143:5;13124:25;;;;;;;;;;;;;;;:35;13150:8;13124:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;13207:8;13185:41;;13200:5;13185:41;;;13217:8;13185:41;;;;;;:::i;:::-;;;;;;;;12910:323;;;:::o;4940:947::-;5135:1;5121:16;;:2;:16;;;;5113:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;5190:16;5209:12;:10;:12::i;:::-;5190:31;;5231:20;5254:21;5272:2;5254:17;:21::i;:::-;5231:44;;5285:24;5312:25;5330:6;5312:17;:25::i;:::-;5285:52;;5348:60;5369:8;5379:4;5385:2;5389:3;5394:7;5403:4;5348:20;:60::i;:::-;5419:19;5441:9;:13;5451:2;5441:13;;;;;;;;;;;:19;5455:4;5441:19;;;;;;;;;;;;;;;;5419:41;;5493:6;5478:11;:21;;5470:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;5616:6;5602:11;:20;5580:9;:13;5590:2;5580:13;;;;;;;;;;;:19;5594:4;5580:19;;;;;;;;;;;;;;;:42;;;;5663:6;5642:9;:13;5652:2;5642:13;;;;;;;;;;;:17;5656:2;5642:17;;;;;;;;;;;;;;;;:27;;;;;;;:::i;:::-;;;;;;;;5716:2;5685:46;;5710:4;5685:46;;5700:8;5685:46;;;5720:2;5724:6;5685:46;;;;;;;:::i;:::-;;;;;;;;5742:59;5762:8;5772:4;5778:2;5782:3;5787:7;5796:4;5742:19;:59::i;:::-;5812:68;5843:8;5853:4;5859:2;5863;5867:6;5875:4;5812:30;:68::i;:::-;5103:784;;;;4940:947;;;;;:::o;14169:214::-;;;;;;;:::o;15316:213::-;;;;;;;:::o;16266:792::-;16498:15;:2;:13;;;:15::i;:::-;16494:558;;;16550:2;16533:43;;;16577:8;16587:4;16593:3;16598:7;16607:4;16533:79;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;16529:513;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;16918:6;16911:14;;;;;;;;;;;:::i;:::-;;;;;;;;16529:513;;;16965:62;;;;;;;;;;:::i;:::-;;;;;;;;16529:513;16703:48;;;16691:60;;;:8;:60;;;;16687:157;;16775:50;;;;;;;;;;:::i;:::-;;;;;;;;16687:157;16613:245;16494:558;16266:792;;;;;;:::o;17064:193::-;17130:16;17158:22;17197:1;17183:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17158:41;;17220:7;17209:5;17215:1;17209:8;;;;;;;;:::i;:::-;;;;;;;:18;;;;;17245:5;17238:12;;;17064:193;;;:::o;15535:725::-;15742:15;:2;:13;;;:15::i;:::-;15738:516;;;15794:2;15777:38;;;15816:8;15826:4;15832:2;15836:6;15844:4;15777:72;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;15773:471;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;16120:6;16113:14;;;;;;;;;;;:::i;:::-;;;;;;;;15773:471;;;16167:62;;;;;;;;;;:::i;:::-;;;;;;;;15773:471;15910:43;;;15898:55;;;:8;:55;;;;15894:152;;15977:50;;;;;;;;;;:::i;:::-;;;;;;;;15894:152;15850:210;15738:516;15535:725;;;;;;:::o;1175:320:4:-;1235:4;1487:1;1465:7;:19;;;:23;1458:30;;1175:320;;;:::o;7:75:8:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:77::-;878:7;907:5;896:16;;841:77;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:474::-;1265:6;1273;1322:2;1310:9;1301:7;1297:23;1293:32;1290:119;;;1328:79;;:::i;:::-;1290:119;1448:1;1473:53;1518:7;1509:6;1498:9;1494:22;1473:53;:::i;:::-;1463:63;;1419:117;1575:2;1601:53;1646:7;1637:6;1626:9;1622:22;1601:53;:::i;:::-;1591:63;;1546:118;1197:474;;;;;:::o;1677:118::-;1764:24;1782:5;1764:24;:::i;:::-;1759:3;1752:37;1677:118;;:::o;1801:222::-;1894:4;1932:2;1921:9;1917:18;1909:26;;1945:71;2013:1;2002:9;1998:17;1989:6;1945:71;:::i;:::-;1801:222;;;;:::o;2029:149::-;2065:7;2105:66;2098:5;2094:78;2083:89;;2029:149;;;:::o;2184:120::-;2256:23;2273:5;2256:23;:::i;:::-;2249:5;2246:34;2236:62;;2294:1;2291;2284:12;2236:62;2184:120;:::o;2310:137::-;2355:5;2393:6;2380:20;2371:29;;2409:32;2435:5;2409:32;:::i;:::-;2310:137;;;;:::o;2453:327::-;2511:6;2560:2;2548:9;2539:7;2535:23;2531:32;2528:119;;;2566:79;;:::i;:::-;2528:119;2686:1;2711:52;2755:7;2746:6;2735:9;2731:22;2711:52;:::i;:::-;2701:62;;2657:116;2453:327;;;;:::o;2786:90::-;2820:7;2863:5;2856:13;2849:21;2838:32;;2786:90;;;:::o;2882:109::-;2963:21;2978:5;2963:21;:::i;:::-;2958:3;2951:34;2882:109;;:::o;2997:210::-;3084:4;3122:2;3111:9;3107:18;3099:26;;3135:65;3197:1;3186:9;3182:17;3173:6;3135:65;:::i;:::-;2997:210;;;;:::o;3213:329::-;3272:6;3321:2;3309:9;3300:7;3296:23;3292:32;3289:119;;;3327:79;;:::i;:::-;3289:119;3447:1;3472:53;3517:7;3508:6;3497:9;3493:22;3472:53;:::i;:::-;3462:63;;3418:117;3213:329;;;;:::o;3548:99::-;3600:6;3634:5;3628:12;3618:22;;3548:99;;;:::o;3653:169::-;3737:11;3771:6;3766:3;3759:19;3811:4;3806:3;3802:14;3787:29;;3653:169;;;;:::o;3828:307::-;3896:1;3906:113;3920:6;3917:1;3914:13;3906:113;;;4005:1;4000:3;3996:11;3990:18;3986:1;3981:3;3977:11;3970:39;3942:2;3939:1;3935:10;3930:15;;3906:113;;;4037:6;4034:1;4031:13;4028:101;;;4117:1;4108:6;4103:3;4099:16;4092:27;4028:101;3877:258;3828:307;;;:::o;4141:102::-;4182:6;4233:2;4229:7;4224:2;4217:5;4213:14;4209:28;4199:38;;4141:102;;;:::o;4249:364::-;4337:3;4365:39;4398:5;4365:39;:::i;:::-;4420:71;4484:6;4479:3;4420:71;:::i;:::-;4413:78;;4500:52;4545:6;4540:3;4533:4;4526:5;4522:16;4500:52;:::i;:::-;4577:29;4599:6;4577:29;:::i;:::-;4572:3;4568:39;4561:46;;4341:272;4249:364;;;;:::o;4619:313::-;4732:4;4770:2;4759:9;4755:18;4747:26;;4819:9;4813:4;4809:20;4805:1;4794:9;4790:17;4783:47;4847:78;4920:4;4911:6;4847:78;:::i;:::-;4839:86;;4619:313;;;;:::o;4938:117::-;5047:1;5044;5037:12;5061:180;5109:77;5106:1;5099:88;5206:4;5203:1;5196:15;5230:4;5227:1;5220:15;5247:281;5330:27;5352:4;5330:27;:::i;:::-;5322:6;5318:40;5460:6;5448:10;5445:22;5424:18;5412:10;5409:34;5406:62;5403:88;;;5471:18;;:::i;:::-;5403:88;5511:10;5507:2;5500:22;5290:238;5247:281;;:::o;5534:129::-;5568:6;5595:20;;:::i;:::-;5585:30;;5624:33;5652:4;5644:6;5624:33;:::i;:::-;5534:129;;;:::o;5669:311::-;5746:4;5836:18;5828:6;5825:30;5822:56;;;5858:18;;:::i;:::-;5822:56;5908:4;5900:6;5896:17;5888:25;;5968:4;5962;5958:15;5950:23;;5669:311;;;:::o;5986:117::-;6095:1;6092;6085:12;6126:710;6222:5;6247:81;6263:64;6320:6;6263:64;:::i;:::-;6247:81;:::i;:::-;6238:90;;6348:5;6377:6;6370:5;6363:21;6411:4;6404:5;6400:16;6393:23;;6464:4;6456:6;6452:17;6444:6;6440:30;6493:3;6485:6;6482:15;6479:122;;;6512:79;;:::i;:::-;6479:122;6627:6;6610:220;6644:6;6639:3;6636:15;6610:220;;;6719:3;6748:37;6781:3;6769:10;6748:37;:::i;:::-;6743:3;6736:50;6815:4;6810:3;6806:14;6799:21;;6686:144;6670:4;6665:3;6661:14;6654:21;;6610:220;;;6614:21;6228:608;;6126:710;;;;;:::o;6859:370::-;6930:5;6979:3;6972:4;6964:6;6960:17;6956:27;6946:122;;6987:79;;:::i;:::-;6946:122;7104:6;7091:20;7129:94;7219:3;7211:6;7204:4;7196:6;7192:17;7129:94;:::i;:::-;7120:103;;6936:293;6859:370;;;;:::o;7235:117::-;7344:1;7341;7334:12;7358:307;7419:4;7509:18;7501:6;7498:30;7495:56;;;7531:18;;:::i;:::-;7495:56;7569:29;7591:6;7569:29;:::i;:::-;7561:37;;7653:4;7647;7643:15;7635:23;;7358:307;;;:::o;7671:154::-;7755:6;7750:3;7745;7732:30;7817:1;7808:6;7803:3;7799:16;7792:27;7671:154;;;:::o;7831:410::-;7908:5;7933:65;7949:48;7990:6;7949:48;:::i;:::-;7933:65;:::i;:::-;7924:74;;8021:6;8014:5;8007:21;8059:4;8052:5;8048:16;8097:3;8088:6;8083:3;8079:16;8076:25;8073:112;;;8104:79;;:::i;:::-;8073:112;8194:41;8228:6;8223:3;8218;8194:41;:::i;:::-;7914:327;7831:410;;;;;:::o;8260:338::-;8315:5;8364:3;8357:4;8349:6;8345:17;8341:27;8331:122;;8372:79;;:::i;:::-;8331:122;8489:6;8476:20;8514:78;8588:3;8580:6;8573:4;8565:6;8561:17;8514:78;:::i;:::-;8505:87;;8321:277;8260:338;;;;:::o;8604:1509::-;8758:6;8766;8774;8782;8790;8839:3;8827:9;8818:7;8814:23;8810:33;8807:120;;;8846:79;;:::i;:::-;8807:120;8966:1;8991:53;9036:7;9027:6;9016:9;9012:22;8991:53;:::i;:::-;8981:63;;8937:117;9093:2;9119:53;9164:7;9155:6;9144:9;9140:22;9119:53;:::i;:::-;9109:63;;9064:118;9249:2;9238:9;9234:18;9221:32;9280:18;9272:6;9269:30;9266:117;;;9302:79;;:::i;:::-;9266:117;9407:78;9477:7;9468:6;9457:9;9453:22;9407:78;:::i;:::-;9397:88;;9192:303;9562:2;9551:9;9547:18;9534:32;9593:18;9585:6;9582:30;9579:117;;;9615:79;;:::i;:::-;9579:117;9720:78;9790:7;9781:6;9770:9;9766:22;9720:78;:::i;:::-;9710:88;;9505:303;9875:3;9864:9;9860:19;9847:33;9907:18;9899:6;9896:30;9893:117;;;9929:79;;:::i;:::-;9893:117;10034:62;10088:7;10079:6;10068:9;10064:22;10034:62;:::i;:::-;10024:72;;9818:288;8604:1509;;;;;;;;:::o;10119:311::-;10196:4;10286:18;10278:6;10275:30;10272:56;;;10308:18;;:::i;:::-;10272:56;10358:4;10350:6;10346:17;10338:25;;10418:4;10412;10408:15;10400:23;;10119:311;;;:::o;10453:710::-;10549:5;10574:81;10590:64;10647:6;10590:64;:::i;:::-;10574:81;:::i;:::-;10565:90;;10675:5;10704:6;10697:5;10690:21;10738:4;10731:5;10727:16;10720:23;;10791:4;10783:6;10779:17;10771:6;10767:30;10820:3;10812:6;10809:15;10806:122;;;10839:79;;:::i;:::-;10806:122;10954:6;10937:220;10971:6;10966:3;10963:15;10937:220;;;11046:3;11075:37;11108:3;11096:10;11075:37;:::i;:::-;11070:3;11063:50;11142:4;11137:3;11133:14;11126:21;;11013:144;10997:4;10992:3;10988:14;10981:21;;10937:220;;;10941:21;10555:608;;10453:710;;;;;:::o;11186:370::-;11257:5;11306:3;11299:4;11291:6;11287:17;11283:27;11273:122;;11314:79;;:::i;:::-;11273:122;11431:6;11418:20;11456:94;11546:3;11538:6;11531:4;11523:6;11519:17;11456:94;:::i;:::-;11447:103;;11263:293;11186:370;;;;:::o;11562:894::-;11680:6;11688;11737:2;11725:9;11716:7;11712:23;11708:32;11705:119;;;11743:79;;:::i;:::-;11705:119;11891:1;11880:9;11876:17;11863:31;11921:18;11913:6;11910:30;11907:117;;;11943:79;;:::i;:::-;11907:117;12048:78;12118:7;12109:6;12098:9;12094:22;12048:78;:::i;:::-;12038:88;;11834:302;12203:2;12192:9;12188:18;12175:32;12234:18;12226:6;12223:30;12220:117;;;12256:79;;:::i;:::-;12220:117;12361:78;12431:7;12422:6;12411:9;12407:22;12361:78;:::i;:::-;12351:88;;12146:303;11562:894;;;;;:::o;12462:114::-;12529:6;12563:5;12557:12;12547:22;;12462:114;;;:::o;12582:184::-;12681:11;12715:6;12710:3;12703:19;12755:4;12750:3;12746:14;12731:29;;12582:184;;;;:::o;12772:132::-;12839:4;12862:3;12854:11;;12892:4;12887:3;12883:14;12875:22;;12772:132;;;:::o;12910:108::-;12987:24;13005:5;12987:24;:::i;:::-;12982:3;12975:37;12910:108;;:::o;13024:179::-;13093:10;13114:46;13156:3;13148:6;13114:46;:::i;:::-;13192:4;13187:3;13183:14;13169:28;;13024:179;;;;:::o;13209:113::-;13279:4;13311;13306:3;13302:14;13294:22;;13209:113;;;:::o;13358:732::-;13477:3;13506:54;13554:5;13506:54;:::i;:::-;13576:86;13655:6;13650:3;13576:86;:::i;:::-;13569:93;;13686:56;13736:5;13686:56;:::i;:::-;13765:7;13796:1;13781:284;13806:6;13803:1;13800:13;13781:284;;;13882:6;13876:13;13909:63;13968:3;13953:13;13909:63;:::i;:::-;13902:70;;13995:60;14048:6;13995:60;:::i;:::-;13985:70;;13841:224;13828:1;13825;13821:9;13816:14;;13781:284;;;13785:14;14081:3;14074:10;;13482:608;;;13358:732;;;;:::o;14096:373::-;14239:4;14277:2;14266:9;14262:18;14254:26;;14326:9;14320:4;14316:20;14312:1;14301:9;14297:17;14290:47;14354:108;14457:4;14448:6;14354:108;:::i;:::-;14346:116;;14096:373;;;;:::o;14475:116::-;14545:21;14560:5;14545:21;:::i;:::-;14538:5;14535:32;14525:60;;14581:1;14578;14571:12;14525:60;14475:116;:::o;14597:133::-;14640:5;14678:6;14665:20;14656:29;;14694:30;14718:5;14694:30;:::i;:::-;14597:133;;;;:::o;14736:468::-;14801:6;14809;14858:2;14846:9;14837:7;14833:23;14829:32;14826:119;;;14864:79;;:::i;:::-;14826:119;14984:1;15009:53;15054:7;15045:6;15034:9;15030:22;15009:53;:::i;:::-;14999:63;;14955:117;15111:2;15137:50;15179:7;15170:6;15159:9;15155:22;15137:50;:::i;:::-;15127:60;;15082:115;14736:468;;;;;:::o;15210:474::-;15278:6;15286;15335:2;15323:9;15314:7;15310:23;15306:32;15303:119;;;15341:79;;:::i;:::-;15303:119;15461:1;15486:53;15531:7;15522:6;15511:9;15507:22;15486:53;:::i;:::-;15476:63;;15432:117;15588:2;15614:53;15659:7;15650:6;15639:9;15635:22;15614:53;:::i;:::-;15604:63;;15559:118;15210:474;;;;;:::o;15690:1089::-;15794:6;15802;15810;15818;15826;15875:3;15863:9;15854:7;15850:23;15846:33;15843:120;;;15882:79;;:::i;:::-;15843:120;16002:1;16027:53;16072:7;16063:6;16052:9;16048:22;16027:53;:::i;:::-;16017:63;;15973:117;16129:2;16155:53;16200:7;16191:6;16180:9;16176:22;16155:53;:::i;:::-;16145:63;;16100:118;16257:2;16283:53;16328:7;16319:6;16308:9;16304:22;16283:53;:::i;:::-;16273:63;;16228:118;16385:2;16411:53;16456:7;16447:6;16436:9;16432:22;16411:53;:::i;:::-;16401:63;;16356:118;16541:3;16530:9;16526:19;16513:33;16573:18;16565:6;16562:30;16559:117;;;16595:79;;:::i;:::-;16559:117;16700:62;16754:7;16745:6;16734:9;16730:22;16700:62;:::i;:::-;16690:72;;16484:288;15690:1089;;;;;;;;:::o;16785:229::-;16925:34;16921:1;16913:6;16909:14;16902:58;16994:12;16989:2;16981:6;16977:15;16970:37;16785:229;:::o;17020:366::-;17162:3;17183:67;17247:2;17242:3;17183:67;:::i;:::-;17176:74;;17259:93;17348:3;17259:93;:::i;:::-;17377:2;17372:3;17368:12;17361:19;;17020:366;;;:::o;17392:419::-;17558:4;17596:2;17585:9;17581:18;17573:26;;17645:9;17639:4;17635:20;17631:1;17620:9;17616:17;17609:47;17673:131;17799:4;17673:131;:::i;:::-;17665:139;;17392:419;;;:::o;17817:180::-;17865:77;17862:1;17855:88;17962:4;17959:1;17952:15;17986:4;17983:1;17976:15;18003:320;18047:6;18084:1;18078:4;18074:12;18064:22;;18131:1;18125:4;18121:12;18152:18;18142:81;;18208:4;18200:6;18196:17;18186:27;;18142:81;18270:2;18262:6;18259:14;18239:18;18236:38;18233:84;;;18289:18;;:::i;:::-;18233:84;18054:269;18003:320;;;:::o;18329:233::-;18469:34;18465:1;18457:6;18453:14;18446:58;18538:16;18533:2;18525:6;18521:15;18514:41;18329:233;:::o;18568:366::-;18710:3;18731:67;18795:2;18790:3;18731:67;:::i;:::-;18724:74;;18807:93;18896:3;18807:93;:::i;:::-;18925:2;18920:3;18916:12;18909:19;;18568:366;;;:::o;18940:419::-;19106:4;19144:2;19133:9;19129:18;19121:26;;19193:9;19187:4;19183:20;19179:1;19168:9;19164:17;19157:47;19221:131;19347:4;19221:131;:::i;:::-;19213:139;;18940:419;;;:::o;19365:228::-;19505:34;19501:1;19493:6;19489:14;19482:58;19574:11;19569:2;19561:6;19557:15;19550:36;19365:228;:::o;19599:366::-;19741:3;19762:67;19826:2;19821:3;19762:67;:::i;:::-;19755:74;;19838:93;19927:3;19838:93;:::i;:::-;19956:2;19951:3;19947:12;19940:19;;19599:366;;;:::o;19971:419::-;20137:4;20175:2;20164:9;20160:18;20152:26;;20224:9;20218:4;20214:20;20210:1;20199:9;20195:17;20188:47;20252:131;20378:4;20252:131;:::i;:::-;20244:139;;19971:419;;;:::o;20396:180::-;20444:77;20441:1;20434:88;20541:4;20538:1;20531:15;20565:4;20562:1;20555:15;20582:180;20630:77;20627:1;20620:88;20727:4;20724:1;20717:15;20751:4;20748:1;20741:15;20768:233;20807:3;20830:24;20848:5;20830:24;:::i;:::-;20821:33;;20876:66;20869:5;20866:77;20863:103;;;20946:18;;:::i;:::-;20863:103;20993:1;20986:5;20982:13;20975:20;;20768:233;;;:::o;21007:227::-;21147:34;21143:1;21135:6;21131:14;21124:58;21216:10;21211:2;21203:6;21199:15;21192:35;21007:227;:::o;21240:366::-;21382:3;21403:67;21467:2;21462:3;21403:67;:::i;:::-;21396:74;;21479:93;21568:3;21479:93;:::i;:::-;21597:2;21592:3;21588:12;21581:19;;21240:366;;;:::o;21612:419::-;21778:4;21816:2;21805:9;21801:18;21793:26;;21865:9;21859:4;21855:20;21851:1;21840:9;21836:17;21829:47;21893:131;22019:4;21893:131;:::i;:::-;21885:139;;21612:419;;;:::o;22037:224::-;22177:34;22173:1;22165:6;22161:14;22154:58;22246:7;22241:2;22233:6;22229:15;22222:32;22037:224;:::o;22267:366::-;22409:3;22430:67;22494:2;22489:3;22430:67;:::i;:::-;22423:74;;22506:93;22595:3;22506:93;:::i;:::-;22624:2;22619:3;22615:12;22608:19;;22267:366;;;:::o;22639:419::-;22805:4;22843:2;22832:9;22828:18;22820:26;;22892:9;22886:4;22882:20;22878:1;22867:9;22863:17;22856:47;22920:131;23046:4;22920:131;:::i;:::-;22912:139;;22639:419;;;:::o;23064:229::-;23204:34;23200:1;23192:6;23188:14;23181:58;23273:12;23268:2;23260:6;23256:15;23249:37;23064:229;:::o;23299:366::-;23441:3;23462:67;23526:2;23521:3;23462:67;:::i;:::-;23455:74;;23538:93;23627:3;23538:93;:::i;:::-;23656:2;23651:3;23647:12;23640:19;;23299:366;;;:::o;23671:419::-;23837:4;23875:2;23864:9;23860:18;23852:26;;23924:9;23918:4;23914:20;23910:1;23899:9;23895:17;23888:47;23952:131;24078:4;23952:131;:::i;:::-;23944:139;;23671:419;;;:::o;24096:305::-;24136:3;24155:20;24173:1;24155:20;:::i;:::-;24150:25;;24189:20;24207:1;24189:20;:::i;:::-;24184:25;;24343:1;24275:66;24271:74;24268:1;24265:81;24262:107;;;24349:18;;:::i;:::-;24262:107;24393:1;24390;24386:9;24379:16;;24096:305;;;;:::o;24407:634::-;24628:4;24666:2;24655:9;24651:18;24643:26;;24715:9;24709:4;24705:20;24701:1;24690:9;24686:17;24679:47;24743:108;24846:4;24837:6;24743:108;:::i;:::-;24735:116;;24898:9;24892:4;24888:20;24883:2;24872:9;24868:18;24861:48;24926:108;25029:4;25020:6;24926:108;:::i;:::-;24918:116;;24407:634;;;;;:::o;25047:228::-;25187:34;25183:1;25175:6;25171:14;25164:58;25256:11;25251:2;25243:6;25239:15;25232:36;25047:228;:::o;25281:366::-;25423:3;25444:67;25508:2;25503:3;25444:67;:::i;:::-;25437:74;;25520:93;25609:3;25520:93;:::i;:::-;25638:2;25633:3;25629:12;25622:19;;25281:366;;;:::o;25653:419::-;25819:4;25857:2;25846:9;25842:18;25834:26;;25906:9;25900:4;25896:20;25892:1;25881:9;25877:17;25870:47;25934:131;26060:4;25934:131;:::i;:::-;25926:139;;25653:419;;;:::o;26078:332::-;26199:4;26237:2;26226:9;26222:18;26214:26;;26250:71;26318:1;26307:9;26303:17;26294:6;26250:71;:::i;:::-;26331:72;26399:2;26388:9;26384:18;26375:6;26331:72;:::i;:::-;26078:332;;;;;:::o;26416:118::-;26503:24;26521:5;26503:24;:::i;:::-;26498:3;26491:37;26416:118;;:::o;26540:98::-;26591:6;26625:5;26619:12;26609:22;;26540:98;;;:::o;26644:168::-;26727:11;26761:6;26756:3;26749:19;26801:4;26796:3;26792:14;26777:29;;26644:168;;;;:::o;26818:360::-;26904:3;26932:38;26964:5;26932:38;:::i;:::-;26986:70;27049:6;27044:3;26986:70;:::i;:::-;26979:77;;27065:52;27110:6;27105:3;27098:4;27091:5;27087:16;27065:52;:::i;:::-;27142:29;27164:6;27142:29;:::i;:::-;27137:3;27133:39;27126:46;;26908:270;26818:360;;;;:::o;27184:1053::-;27507:4;27545:3;27534:9;27530:19;27522:27;;27559:71;27627:1;27616:9;27612:17;27603:6;27559:71;:::i;:::-;27640:72;27708:2;27697:9;27693:18;27684:6;27640:72;:::i;:::-;27759:9;27753:4;27749:20;27744:2;27733:9;27729:18;27722:48;27787:108;27890:4;27881:6;27787:108;:::i;:::-;27779:116;;27942:9;27936:4;27932:20;27927:2;27916:9;27912:18;27905:48;27970:108;28073:4;28064:6;27970:108;:::i;:::-;27962:116;;28126:9;28120:4;28116:20;28110:3;28099:9;28095:19;28088:49;28154:76;28225:4;28216:6;28154:76;:::i;:::-;28146:84;;27184:1053;;;;;;;;:::o;28243:141::-;28299:5;28330:6;28324:13;28315:22;;28346:32;28372:5;28346:32;:::i;:::-;28243:141;;;;:::o;28390:349::-;28459:6;28508:2;28496:9;28487:7;28483:23;28479:32;28476:119;;;28514:79;;:::i;:::-;28476:119;28634:1;28659:63;28714:7;28705:6;28694:9;28690:22;28659:63;:::i;:::-;28649:73;;28605:127;28390:349;;;;:::o;28745:106::-;28789:8;28838:5;28833:3;28829:15;28808:36;;28745:106;;;:::o;28857:183::-;28892:3;28930:1;28912:16;28909:23;28906:128;;;28968:1;28965;28962;28947:23;28990:34;29021:1;29015:8;28990:34;:::i;:::-;28983:41;;28906:128;28857:183;:::o;29046:711::-;29085:3;29123:4;29105:16;29102:26;29099:39;;;29131:5;;29099:39;29160:20;;:::i;:::-;29235:1;29217:16;29213:24;29210:1;29204:4;29189:49;29268:4;29262:11;29367:16;29360:4;29352:6;29348:17;29345:39;29312:18;29304:6;29301:30;29285:113;29282:146;;;29413:5;;;;29282:146;29459:6;29453:4;29449:17;29495:3;29489:10;29522:18;29514:6;29511:30;29508:43;;;29544:5;;;;;;29508:43;29592:6;29585:4;29580:3;29576:14;29572:27;29651:1;29633:16;29629:24;29623:4;29619:35;29614:3;29611:44;29608:57;;;29658:5;;;;;;;29608:57;29675;29723:6;29717:4;29713:17;29705:6;29701:30;29695:4;29675:57;:::i;:::-;29748:3;29741:10;;29089:668;;;;;29046:711;;:::o;29763:239::-;29903:34;29899:1;29891:6;29887:14;29880:58;29972:22;29967:2;29959:6;29955:15;29948:47;29763:239;:::o;30008:366::-;30150:3;30171:67;30235:2;30230:3;30171:67;:::i;:::-;30164:74;;30247:93;30336:3;30247:93;:::i;:::-;30365:2;30360:3;30356:12;30349:19;;30008:366;;;:::o;30380:419::-;30546:4;30584:2;30573:9;30569:18;30561:26;;30633:9;30627:4;30623:20;30619:1;30608:9;30604:17;30597:47;30661:131;30787:4;30661:131;:::i;:::-;30653:139;;30380:419;;;:::o;30805:227::-;30945:34;30941:1;30933:6;30929:14;30922:58;31014:10;31009:2;31001:6;30997:15;30990:35;30805:227;:::o;31038:366::-;31180:3;31201:67;31265:2;31260:3;31201:67;:::i;:::-;31194:74;;31277:93;31366:3;31277:93;:::i;:::-;31395:2;31390:3;31386:12;31379:19;;31038:366;;;:::o;31410:419::-;31576:4;31614:2;31603:9;31599:18;31591:26;;31663:9;31657:4;31653:20;31649:1;31638:9;31634:17;31627:47;31691:131;31817:4;31691:131;:::i;:::-;31683:139;;31410:419;;;:::o;31835:751::-;32058:4;32096:3;32085:9;32081:19;32073:27;;32110:71;32178:1;32167:9;32163:17;32154:6;32110:71;:::i;:::-;32191:72;32259:2;32248:9;32244:18;32235:6;32191:72;:::i;:::-;32273;32341:2;32330:9;32326:18;32317:6;32273:72;:::i;:::-;32355;32423:2;32412:9;32408:18;32399:6;32355:72;:::i;:::-;32475:9;32469:4;32465:20;32459:3;32448:9;32444:19;32437:49;32503:76;32574:4;32565:6;32503:76;:::i;:::-;32495:84;;31835:751;;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1910000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"balanceOf(address,uint256)": "infinite",
								"balanceOfBatch(address[],uint256[])": "infinite",
								"isApprovedForAll(address,address)": "infinite",
								"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "infinite",
								"safeTransferFrom(address,address,uint256,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "infinite",
								"supportsInterface(bytes4)": "796",
								"uri(uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfer(address,address,address,uint256[] memory,uint256[] memory,bytes memory)": "21",
								"_asSingletonArray(uint256)": "infinite",
								"_beforeTokenTransfer(address,address,address,uint256[] memory,uint256[] memory,bytes memory)": "21",
								"_burn(address,uint256,uint256)": "infinite",
								"_burnBatch(address,uint256[] memory,uint256[] memory)": "infinite",
								"_doSafeBatchTransferAcceptanceCheck(address,address,address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_doSafeTransferAcceptanceCheck(address,address,address,uint256,uint256,bytes memory)": "infinite",
								"_mint(address,uint256,uint256,bytes memory)": "infinite",
								"_mintBatch(address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_safeBatchTransferFrom(address,address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_safeTransferFrom(address,address,uint256,uint256,bytes memory)": "infinite",
								"_setApprovalForAll(address,address,bool)": "infinite",
								"_setURI(string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 570,
									"end": 17259,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1149,
									"end": 1162,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1157,
									"end": 1161,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1149,
									"end": 1156,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1149,
									"end": 1156,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1149,
									"end": 1156,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1149,
									"end": 1162,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1149,
									"end": 1162,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1149,
									"end": 1162,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 1149,
									"end": 1162,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1149,
									"end": 1162,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 8171,
									"end": 8257,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 8171,
									"end": 8257,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8244,
									"end": 8250,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8237,
									"end": 8241,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 8237,
									"end": 8250,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8237,
									"end": 8250,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8237,
									"end": 8250,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 8237,
									"end": 8250,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8237,
									"end": 8250,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 8237,
									"end": 8250,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 8237,
									"end": 8250,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8237,
									"end": 8250,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 8237,
									"end": 8250,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 8237,
									"end": 8250,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 8237,
									"end": 8250,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8237,
									"end": 8250,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 8237,
									"end": 8250,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 8237,
									"end": 8250,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 8237,
									"end": 8250,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8237,
									"end": 8250,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 8171,
									"end": 8257,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 8171,
									"end": 8257,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "tag",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "tag",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "tag",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 8,
									"value": "23"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 8,
									"value": "25"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 334,
									"end": 451,
									"name": "tag",
									"source": 8,
									"value": "26"
								},
								{
									"begin": 334,
									"end": 451,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 443,
									"end": 444,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 433,
									"end": 445,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 457,
									"end": 574,
									"name": "tag",
									"source": 8,
									"value": "27"
								},
								{
									"begin": 457,
									"end": 574,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 566,
									"end": 567,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 563,
									"end": 564,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 556,
									"end": 568,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 580,
									"end": 682,
									"name": "tag",
									"source": 8,
									"value": "28"
								},
								{
									"begin": 580,
									"end": 682,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 621,
									"end": 627,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 672,
									"end": 674,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 668,
									"end": 675,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 663,
									"end": 665,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 656,
									"end": 661,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 652,
									"end": 666,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 648,
									"end": 676,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 638,
									"end": 676,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 638,
									"end": 676,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 580,
									"end": 682,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 580,
									"end": 682,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 688,
									"end": 868,
									"name": "tag",
									"source": 8,
									"value": "29"
								},
								{
									"begin": 688,
									"end": 868,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 736,
									"end": 813,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 733,
									"end": 734,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 726,
									"end": 814,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 833,
									"end": 837,
									"name": "PUSH",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 830,
									"end": 831,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 823,
									"end": 838,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 857,
									"end": 861,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 854,
									"end": 855,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 847,
									"end": 862,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "tag",
									"source": 8,
									"value": "30"
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "46"
								},
								{
									"begin": 979,
									"end": 983,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "28"
								},
								{
									"begin": 957,
									"end": 984,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 957,
									"end": 984,
									"name": "tag",
									"source": 8,
									"value": "46"
								},
								{
									"begin": 957,
									"end": 984,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 949,
									"end": 955,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 945,
									"end": 985,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1087,
									"end": 1093,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1075,
									"end": 1085,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1072,
									"end": 1094,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1039,
									"end": 1049,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1036,
									"end": 1070,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 1033,
									"end": 1095,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "47"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "48"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "29"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "tag",
									"source": 8,
									"value": "48"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "tag",
									"source": 8,
									"value": "47"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1138,
									"end": 1148,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1134,
									"end": 1136,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1127,
									"end": 1149,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 917,
									"end": 1155,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "tag",
									"source": 8,
									"value": "31"
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1195,
									"end": 1201,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "50"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "23"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "tag",
									"source": 8,
									"value": "50"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "51"
								},
								{
									"begin": 1279,
									"end": 1283,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1271,
									"end": 1277,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "30"
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "tag",
									"source": 8,
									"value": "51"
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "tag",
									"source": 8,
									"value": "32"
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1358,
									"end": 1362,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1448,
									"end": 1466,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1440,
									"end": 1446,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1437,
									"end": 1467,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "53"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "54"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "29"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "tag",
									"source": 8,
									"value": "54"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "tag",
									"source": 8,
									"value": "53"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "55"
								},
								{
									"begin": 1530,
									"end": 1536,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "28"
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "tag",
									"source": 8,
									"value": "55"
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1592,
									"end": 1596,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1586,
									"end": 1590,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1582,
									"end": 1597,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 1610,
									"end": 1917,
									"name": "tag",
									"source": 8,
									"value": "33"
								},
								{
									"begin": 1610,
									"end": 1917,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1678,
									"end": 1679,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1688,
									"end": 1801,
									"name": "tag",
									"source": 8,
									"value": "57"
								},
								{
									"begin": 1688,
									"end": 1801,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1702,
									"end": 1708,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1699,
									"end": 1700,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1696,
									"end": 1709,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 1688,
									"end": 1801,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1688,
									"end": 1801,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "59"
								},
								{
									"begin": 1688,
									"end": 1801,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1787,
									"end": 1788,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1782,
									"end": 1785,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1778,
									"end": 1789,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1772,
									"end": 1790,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1768,
									"end": 1769,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1763,
									"end": 1766,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1759,
									"end": 1770,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1752,
									"end": 1791,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1724,
									"end": 1726,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1721,
									"end": 1722,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1717,
									"end": 1727,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1712,
									"end": 1727,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1712,
									"end": 1727,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1688,
									"end": 1801,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "57"
								},
								{
									"begin": 1688,
									"end": 1801,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1688,
									"end": 1801,
									"name": "tag",
									"source": 8,
									"value": "59"
								},
								{
									"begin": 1688,
									"end": 1801,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1819,
									"end": 1825,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1816,
									"end": 1817,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1813,
									"end": 1826,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 1810,
									"end": 1911,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1810,
									"end": 1911,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 1810,
									"end": 1911,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1899,
									"end": 1900,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1890,
									"end": 1896,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1885,
									"end": 1888,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1881,
									"end": 1897,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1874,
									"end": 1901,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1810,
									"end": 1911,
									"name": "tag",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 1810,
									"end": 1911,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1659,
									"end": 1917,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1610,
									"end": 1917,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1610,
									"end": 1917,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1610,
									"end": 1917,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1610,
									"end": 1917,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 1923,
									"end": 2344,
									"name": "tag",
									"source": 8,
									"value": "34"
								},
								{
									"begin": 1923,
									"end": 2344,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2012,
									"end": 2017,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2037,
									"end": 2103,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "62"
								},
								{
									"begin": 2053,
									"end": 2102,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "63"
								},
								{
									"begin": 2095,
									"end": 2101,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2053,
									"end": 2102,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "32"
								},
								{
									"begin": 2053,
									"end": 2102,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 2053,
									"end": 2102,
									"name": "tag",
									"source": 8,
									"value": "63"
								},
								{
									"begin": 2053,
									"end": 2102,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2037,
									"end": 2103,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "31"
								},
								{
									"begin": 2037,
									"end": 2103,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 2037,
									"end": 2103,
									"name": "tag",
									"source": 8,
									"value": "62"
								},
								{
									"begin": 2037,
									"end": 2103,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2028,
									"end": 2103,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2028,
									"end": 2103,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2126,
									"end": 2132,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2119,
									"end": 2124,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2112,
									"end": 2133,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2164,
									"end": 2168,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 2157,
									"end": 2162,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2153,
									"end": 2169,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2202,
									"end": 2205,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2193,
									"end": 2199,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2188,
									"end": 2191,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2184,
									"end": 2200,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2181,
									"end": 2206,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 2178,
									"end": 2290,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 2178,
									"end": 2290,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "64"
								},
								{
									"begin": 2178,
									"end": 2290,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2209,
									"end": 2288,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "65"
								},
								{
									"begin": 2209,
									"end": 2288,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "27"
								},
								{
									"begin": 2209,
									"end": 2288,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 2209,
									"end": 2288,
									"name": "tag",
									"source": 8,
									"value": "65"
								},
								{
									"begin": 2209,
									"end": 2288,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2178,
									"end": 2290,
									"name": "tag",
									"source": 8,
									"value": "64"
								},
								{
									"begin": 2178,
									"end": 2290,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2299,
									"end": 2338,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "66"
								},
								{
									"begin": 2331,
									"end": 2337,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2326,
									"end": 2329,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2321,
									"end": 2324,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 2299,
									"end": 2338,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "33"
								},
								{
									"begin": 2299,
									"end": 2338,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 2299,
									"end": 2338,
									"name": "tag",
									"source": 8,
									"value": "66"
								},
								{
									"begin": 2299,
									"end": 2338,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2018,
									"end": 2344,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1923,
									"end": 2344,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 1923,
									"end": 2344,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1923,
									"end": 2344,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1923,
									"end": 2344,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1923,
									"end": 2344,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1923,
									"end": 2344,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 2364,
									"end": 2719,
									"name": "tag",
									"source": 8,
									"value": "35"
								},
								{
									"begin": 2364,
									"end": 2719,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2431,
									"end": 2436,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2480,
									"end": 2483,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2473,
									"end": 2477,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 2465,
									"end": 2471,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2461,
									"end": 2478,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2457,
									"end": 2484,
									"name": "SLT",
									"source": 8
								},
								{
									"begin": 2447,
									"end": 2569,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "68"
								},
								{
									"begin": 2447,
									"end": 2569,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2488,
									"end": 2567,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "69"
								},
								{
									"begin": 2488,
									"end": 2567,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "26"
								},
								{
									"begin": 2488,
									"end": 2567,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 2488,
									"end": 2567,
									"name": "tag",
									"source": 8,
									"value": "69"
								},
								{
									"begin": 2488,
									"end": 2567,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2447,
									"end": 2569,
									"name": "tag",
									"source": 8,
									"value": "68"
								},
								{
									"begin": 2447,
									"end": 2569,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2598,
									"end": 2604,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2592,
									"end": 2605,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 2623,
									"end": 2713,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "70"
								},
								{
									"begin": 2709,
									"end": 2712,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2701,
									"end": 2707,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2694,
									"end": 2698,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 2686,
									"end": 2692,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 2682,
									"end": 2699,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2623,
									"end": 2713,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "34"
								},
								{
									"begin": 2623,
									"end": 2713,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 2623,
									"end": 2713,
									"name": "tag",
									"source": 8,
									"value": "70"
								},
								{
									"begin": 2623,
									"end": 2713,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2614,
									"end": 2713,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2614,
									"end": 2713,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2437,
									"end": 2719,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2364,
									"end": 2719,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 2364,
									"end": 2719,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2364,
									"end": 2719,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2364,
									"end": 2719,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2364,
									"end": 2719,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 2725,
									"end": 3249,
									"name": "tag",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 2725,
									"end": 3249,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2805,
									"end": 2811,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2854,
									"end": 2856,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 2842,
									"end": 2851,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2833,
									"end": 2840,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2829,
									"end": 2852,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 2825,
									"end": 2857,
									"name": "SLT",
									"source": 8
								},
								{
									"begin": 2822,
									"end": 2941,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 2822,
									"end": 2941,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "72"
								},
								{
									"begin": 2822,
									"end": 2941,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2860,
									"end": 2939,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 2860,
									"end": 2939,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 2860,
									"end": 2939,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 2860,
									"end": 2939,
									"name": "tag",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 2860,
									"end": 2939,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2822,
									"end": 2941,
									"name": "tag",
									"source": 8,
									"value": "72"
								},
								{
									"begin": 2822,
									"end": 2941,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3001,
									"end": 3002,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2990,
									"end": 2999,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2986,
									"end": 3003,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2980,
									"end": 3004,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 3031,
									"end": 3049,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3023,
									"end": 3029,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3020,
									"end": 3050,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 3017,
									"end": 3134,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 3017,
									"end": 3134,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "74"
								},
								{
									"begin": 3017,
									"end": 3134,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 3053,
									"end": 3132,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "75"
								},
								{
									"begin": 3053,
									"end": 3132,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "25"
								},
								{
									"begin": 3053,
									"end": 3132,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 3053,
									"end": 3132,
									"name": "tag",
									"source": 8,
									"value": "75"
								},
								{
									"begin": 3053,
									"end": 3132,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3017,
									"end": 3134,
									"name": "tag",
									"source": 8,
									"value": "74"
								},
								{
									"begin": 3017,
									"end": 3134,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3158,
									"end": 3232,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "76"
								},
								{
									"begin": 3224,
									"end": 3231,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3215,
									"end": 3221,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3204,
									"end": 3213,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 3200,
									"end": 3222,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3158,
									"end": 3232,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "35"
								},
								{
									"begin": 3158,
									"end": 3232,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 3158,
									"end": 3232,
									"name": "tag",
									"source": 8,
									"value": "76"
								},
								{
									"begin": 3158,
									"end": 3232,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3148,
									"end": 3232,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3148,
									"end": 3232,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2951,
									"end": 3242,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2725,
									"end": 3249,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 2725,
									"end": 3249,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2725,
									"end": 3249,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2725,
									"end": 3249,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2725,
									"end": 3249,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 3255,
									"end": 3435,
									"name": "tag",
									"source": 8,
									"value": "36"
								},
								{
									"begin": 3255,
									"end": 3435,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3303,
									"end": 3380,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3300,
									"end": 3301,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3293,
									"end": 3381,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 3400,
									"end": 3404,
									"name": "PUSH",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 3397,
									"end": 3398,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 3390,
									"end": 3405,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 3424,
									"end": 3428,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 3421,
									"end": 3422,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3414,
									"end": 3429,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 3441,
									"end": 3761,
									"name": "tag",
									"source": 8,
									"value": "13"
								},
								{
									"begin": 3441,
									"end": 3761,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3485,
									"end": 3491,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3522,
									"end": 3523,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 3516,
									"end": 3520,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3512,
									"end": 3524,
									"name": "DIV",
									"source": 8
								},
								{
									"begin": 3502,
									"end": 3524,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3502,
									"end": 3524,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3569,
									"end": 3570,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 3563,
									"end": 3567,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3559,
									"end": 3571,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 3590,
									"end": 3608,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 3580,
									"end": 3661,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "79"
								},
								{
									"begin": 3580,
									"end": 3661,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 3646,
									"end": 3650,
									"name": "PUSH",
									"source": 8,
									"value": "7F"
								},
								{
									"begin": 3638,
									"end": 3644,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3634,
									"end": 3651,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 3624,
									"end": 3651,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3624,
									"end": 3651,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3580,
									"end": 3661,
									"name": "tag",
									"source": 8,
									"value": "79"
								},
								{
									"begin": 3580,
									"end": 3661,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3708,
									"end": 3710,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 3700,
									"end": 3706,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3697,
									"end": 3711,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 3677,
									"end": 3695,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3674,
									"end": 3712,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 3671,
									"end": 3755,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 3671,
									"end": 3755,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 3671,
									"end": 3755,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 3727,
									"end": 3745,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "81"
								},
								{
									"begin": 3727,
									"end": 3745,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "36"
								},
								{
									"begin": 3727,
									"end": 3745,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 3727,
									"end": 3745,
									"name": "tag",
									"source": 8,
									"value": "81"
								},
								{
									"begin": 3727,
									"end": 3745,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3671,
									"end": 3755,
									"name": "tag",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 3671,
									"end": 3755,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3492,
									"end": 3761,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3441,
									"end": 3761,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3441,
									"end": 3761,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3441,
									"end": 3761,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3441,
									"end": 3761,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d00f609ef91ead9d359e64759ff35caeb0e05c4e9c723a2c4b0528bec315670f64736f6c63430008090033",
									".code": [
										{
											"begin": 570,
											"end": 17259,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "PUSH",
											"source": 0,
											"value": "4E1273F4"
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "PUSH",
											"source": 0,
											"value": "4E1273F4"
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "PUSH",
											"source": 0,
											"value": "A22CB465"
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "PUSH",
											"source": 0,
											"value": "E985E9C5"
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "PUSH",
											"source": 0,
											"value": "F242432A"
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "PUSH",
											"source": 0,
											"value": "FDD58E"
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A7"
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "PUSH",
											"source": 0,
											"value": "E89341C"
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "PUSH",
											"source": 0,
											"value": "2EB2C2D6"
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4064,
											"end": 4490,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 4064,
											"end": 4490,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4064,
											"end": 4490,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 4064,
											"end": 4490,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4064,
											"end": 4490,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4064,
											"end": 4490,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4064,
											"end": 4490,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4064,
											"end": 4490,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4064,
											"end": 4490,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4064,
											"end": 4490,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4064,
											"end": 4490,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 4064,
											"end": 4490,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4064,
											"end": 4490,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4064,
											"end": 4490,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 4064,
											"end": 4490,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4064,
											"end": 4490,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 4064,
											"end": 4490,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4064,
											"end": 4490,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 4064,
											"end": 4490,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4064,
											"end": 4490,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 4064,
											"end": 4490,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4064,
											"end": 4490,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3145,
											"end": 3298,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 3145,
											"end": 3298,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3145,
											"end": 3298,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3145,
											"end": 3298,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3145,
											"end": 3298,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3145,
											"end": 3298,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3145,
											"end": 3298,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3145,
											"end": 3298,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3145,
											"end": 3298,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3145,
											"end": 3298,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3145,
											"end": 3298,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 3145,
											"end": 3298,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3145,
											"end": 3298,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3145,
											"end": 3298,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 3145,
											"end": 3298,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3145,
											"end": 3298,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 3145,
											"end": 3298,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3145,
											"end": 3298,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 3145,
											"end": 3298,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3145,
											"end": 3298,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3145,
											"end": 3298,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3145,
											"end": 3298,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3598,
											"end": 3992,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 3598,
											"end": 3992,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3598,
											"end": 3992,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 3598,
											"end": 3992,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3598,
											"end": 3992,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3598,
											"end": 3992,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3598,
											"end": 3992,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3598,
											"end": 3992,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3598,
											"end": 3992,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3598,
											"end": 3992,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3598,
											"end": 3992,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 3598,
											"end": 3992,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3598,
											"end": 3992,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3598,
											"end": 3992,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 3598,
											"end": 3992,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3598,
											"end": 3992,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 3598,
											"end": 3992,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3598,
											"end": 3992,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 3598,
											"end": 3992,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3598,
											"end": 3992,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 3598,
											"end": 3992,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3598,
											"end": 3992,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2271,
											"end": 2278,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2317,
											"end": 2318,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2298,
											"end": 2319,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2298,
											"end": 2319,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2298,
											"end": 2305,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2298,
											"end": 2319,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2298,
											"end": 2319,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2298,
											"end": 2319,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2298,
											"end": 2319,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2290,
											"end": 2366,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2290,
											"end": 2366,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2290,
											"end": 2366,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2290,
											"end": 2366,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2290,
											"end": 2366,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2290,
											"end": 2366,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2290,
											"end": 2366,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2290,
											"end": 2366,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2290,
											"end": 2366,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2290,
											"end": 2366,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2290,
											"end": 2366,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2290,
											"end": 2366,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2290,
											"end": 2366,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2290,
											"end": 2366,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2290,
											"end": 2366,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2290,
											"end": 2366,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2290,
											"end": 2366,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2290,
											"end": 2366,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2290,
											"end": 2366,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2290,
											"end": 2366,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2290,
											"end": 2366,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2290,
											"end": 2366,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2290,
											"end": 2366,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2290,
											"end": 2366,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2383,
											"end": 2392,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2383,
											"end": 2396,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2393,
											"end": 2395,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2383,
											"end": 2396,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2383,
											"end": 2396,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2383,
											"end": 2396,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2383,
											"end": 2396,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2383,
											"end": 2396,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2383,
											"end": 2396,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2383,
											"end": 2396,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2383,
											"end": 2396,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2383,
											"end": 2396,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2383,
											"end": 2396,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2383,
											"end": 2396,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2383,
											"end": 2405,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2397,
											"end": 2404,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2383,
											"end": 2405,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2383,
											"end": 2405,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2383,
											"end": 2405,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2383,
											"end": 2405,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2383,
											"end": 2405,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2383,
											"end": 2405,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2383,
											"end": 2405,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2383,
											"end": 2405,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2383,
											"end": 2405,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2383,
											"end": 2405,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2383,
											"end": 2405,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2383,
											"end": 2405,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2383,
											"end": 2405,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2383,
											"end": 2405,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2383,
											"end": 2405,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2383,
											"end": 2405,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2376,
											"end": 2405,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2376,
											"end": 2405,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1338,
											"end": 1342,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1388,
											"end": 1414,
											"name": "PUSH",
											"source": 0,
											"value": "D9B67A2600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1373,
											"end": 1414,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1373,
											"end": 1414,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1373,
											"end": 1414,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1373,
											"end": 1384,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1373,
											"end": 1414,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1373,
											"end": 1414,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1373,
											"end": 1414,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1373,
											"end": 1414,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1373,
											"end": 1482,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1373,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1373,
											"end": 1482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1373,
											"end": 1482,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1445,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "E89341C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1430,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1430,
											"end": 1482,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1430,
											"end": 1482,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1430,
											"end": 1441,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1430,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1430,
											"end": 1482,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1430,
											"end": 1482,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1430,
											"end": 1482,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1373,
											"end": 1482,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1373,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1373,
											"end": 1534,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1373,
											"end": 1534,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1373,
											"end": 1534,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1373,
											"end": 1534,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1498,
											"end": 1534,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1522,
											"end": 1533,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1498,
											"end": 1521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1498,
											"end": 1534,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1498,
											"end": 1534,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1498,
											"end": 1534,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1373,
											"end": 1534,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1373,
											"end": 1534,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1534,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1534,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2000,
											"end": 2013,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2032,
											"end": 2036,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4064,
											"end": 4490,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 4064,
											"end": 4490,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4297,
											"end": 4309,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 4297,
											"end": 4307,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 4297,
											"end": 4309,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4297,
											"end": 4309,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 4297,
											"end": 4309,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4289,
											"end": 4309,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4289,
											"end": 4309,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4289,
											"end": 4293,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4289,
											"end": 4309,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4289,
											"end": 4309,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4289,
											"end": 4309,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4289,
											"end": 4349,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4289,
											"end": 4349,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 4289,
											"end": 4349,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4289,
											"end": 4349,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4313,
											"end": 4349,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 4330,
											"end": 4334,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4336,
											"end": 4348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 4336,
											"end": 4346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 4336,
											"end": 4348,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4336,
											"end": 4348,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 4336,
											"end": 4348,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4313,
											"end": 4329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 4313,
											"end": 4349,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4313,
											"end": 4349,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 4313,
											"end": 4349,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4289,
											"end": 4349,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 4289,
											"end": 4349,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4268,
											"end": 4421,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 4268,
											"end": 4421,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4268,
											"end": 4421,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4268,
											"end": 4421,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4268,
											"end": 4421,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4268,
											"end": 4421,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4268,
											"end": 4421,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4268,
											"end": 4421,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4268,
											"end": 4421,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4268,
											"end": 4421,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 4268,
											"end": 4421,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4268,
											"end": 4421,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 4268,
											"end": 4421,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4268,
											"end": 4421,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 4268,
											"end": 4421,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4268,
											"end": 4421,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4268,
											"end": 4421,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4268,
											"end": 4421,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4268,
											"end": 4421,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4268,
											"end": 4421,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4268,
											"end": 4421,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4268,
											"end": 4421,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4268,
											"end": 4421,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 4268,
											"end": 4421,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4431,
											"end": 4483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 4454,
											"end": 4458,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4460,
											"end": 4462,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4464,
											"end": 4467,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4469,
											"end": 4476,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4478,
											"end": 4482,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4431,
											"end": 4453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 4431,
											"end": 4483,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4431,
											"end": 4483,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 4431,
											"end": 4483,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4064,
											"end": 4490,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4064,
											"end": 4490,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4064,
											"end": 4490,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4064,
											"end": 4490,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4064,
											"end": 4490,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4064,
											"end": 4490,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2720,
											"end": 2736,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2779,
											"end": 2782,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2779,
											"end": 2789,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2760,
											"end": 2768,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2760,
											"end": 2775,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2760,
											"end": 2789,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2752,
											"end": 2835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2752,
											"end": 2835,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2752,
											"end": 2835,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2752,
											"end": 2835,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2752,
											"end": 2835,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2752,
											"end": 2835,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2752,
											"end": 2835,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2752,
											"end": 2835,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2752,
											"end": 2835,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2752,
											"end": 2835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2752,
											"end": 2835,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2752,
											"end": 2835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2752,
											"end": 2835,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2752,
											"end": 2835,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2752,
											"end": 2835,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2752,
											"end": 2835,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2752,
											"end": 2835,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2752,
											"end": 2835,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2752,
											"end": 2835,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2752,
											"end": 2835,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2752,
											"end": 2835,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2752,
											"end": 2835,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2752,
											"end": 2835,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2752,
											"end": 2835,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2846,
											"end": 2876,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2893,
											"end": 2901,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2893,
											"end": 2908,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2846,
											"end": 2909,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2846,
											"end": 2909,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2925,
											"end": 2934,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2920,
											"end": 3040,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 2920,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2944,
											"end": 2952,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2944,
											"end": 2959,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2940,
											"end": 2941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2940,
											"end": 2959,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2920,
											"end": 3040,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2920,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 2920,
											"end": 3040,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2999,
											"end": 3029,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 3009,
											"end": 3017,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3018,
											"end": 3019,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3009,
											"end": 3020,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3009,
											"end": 3020,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3009,
											"end": 3020,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3009,
											"end": 3020,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3009,
											"end": 3020,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 3009,
											"end": 3020,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3009,
											"end": 3020,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 3009,
											"end": 3020,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 3009,
											"end": 3020,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3009,
											"end": 3020,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 3009,
											"end": 3020,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3009,
											"end": 3020,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 3009,
											"end": 3020,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3009,
											"end": 3020,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3009,
											"end": 3020,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3009,
											"end": 3020,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3009,
											"end": 3020,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3009,
											"end": 3020,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3009,
											"end": 3020,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3022,
											"end": 3025,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3026,
											"end": 3027,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3022,
											"end": 3028,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3022,
											"end": 3028,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3022,
											"end": 3028,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3022,
											"end": 3028,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3022,
											"end": 3028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 3022,
											"end": 3028,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3022,
											"end": 3028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 3022,
											"end": 3028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 3022,
											"end": 3028,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3022,
											"end": 3028,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 3022,
											"end": 3028,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3022,
											"end": 3028,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 3022,
											"end": 3028,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3022,
											"end": 3028,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3022,
											"end": 3028,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3022,
											"end": 3028,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3022,
											"end": 3028,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3022,
											"end": 3028,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3022,
											"end": 3028,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2999,
											"end": 3008,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2999,
											"end": 3029,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2999,
											"end": 3029,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 2999,
											"end": 3029,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2980,
											"end": 2993,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2994,
											"end": 2995,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2980,
											"end": 2996,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2980,
											"end": 2996,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2980,
											"end": 2996,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2980,
											"end": 2996,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2980,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 2980,
											"end": 2996,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2980,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2980,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2980,
											"end": 2996,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2980,
											"end": 2996,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2980,
											"end": 2996,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2980,
											"end": 2996,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 2980,
											"end": 2996,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2980,
											"end": 2996,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2980,
											"end": 2996,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2980,
											"end": 2996,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2980,
											"end": 2996,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2980,
											"end": 2996,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2980,
											"end": 3029,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2980,
											"end": 3029,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2980,
											"end": 3029,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2980,
											"end": 3029,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2980,
											"end": 3029,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2961,
											"end": 2964,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2961,
											"end": 2964,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 2961,
											"end": 2964,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2961,
											"end": 2964,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2961,
											"end": 2964,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2961,
											"end": 2964,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 2961,
											"end": 2964,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2961,
											"end": 2964,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2961,
											"end": 2964,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2920,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 2920,
											"end": 3040,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2920,
											"end": 3040,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 2920,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2920,
											"end": 3040,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3057,
											"end": 3070,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3050,
											"end": 3070,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3050,
											"end": 3070,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3050,
											"end": 3070,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3145,
											"end": 3298,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 3145,
											"end": 3298,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3239,
											"end": 3291,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 3258,
											"end": 3270,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 3258,
											"end": 3268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 3258,
											"end": 3270,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3258,
											"end": 3270,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 3258,
											"end": 3270,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3272,
											"end": 3280,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3282,
											"end": 3290,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3239,
											"end": 3257,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 3239,
											"end": 3291,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3239,
											"end": 3291,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 3239,
											"end": 3291,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3145,
											"end": 3298,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3145,
											"end": 3298,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3145,
											"end": 3298,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3464,
											"end": 3468,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3487,
											"end": 3505,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3487,
											"end": 3514,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3506,
											"end": 3513,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3487,
											"end": 3514,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3487,
											"end": 3514,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3487,
											"end": 3514,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3487,
											"end": 3514,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3487,
											"end": 3514,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3487,
											"end": 3514,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3487,
											"end": 3514,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3487,
											"end": 3514,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3487,
											"end": 3514,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3487,
											"end": 3514,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3487,
											"end": 3514,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3487,
											"end": 3514,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3487,
											"end": 3514,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3487,
											"end": 3514,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3487,
											"end": 3514,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3487,
											"end": 3524,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3515,
											"end": 3523,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3487,
											"end": 3524,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3487,
											"end": 3524,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3487,
											"end": 3524,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3487,
											"end": 3524,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3487,
											"end": 3524,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3487,
											"end": 3524,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3487,
											"end": 3524,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3487,
											"end": 3524,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3487,
											"end": 3524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3487,
											"end": 3524,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3487,
											"end": 3524,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3487,
											"end": 3524,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3487,
											"end": 3524,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3487,
											"end": 3524,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3487,
											"end": 3524,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3487,
											"end": 3524,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3487,
											"end": 3524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3487,
											"end": 3524,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3487,
											"end": 3524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3487,
											"end": 3524,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3487,
											"end": 3524,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3487,
											"end": 3524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3487,
											"end": 3524,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3487,
											"end": 3524,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 3487,
											"end": 3524,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3480,
											"end": 3524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3480,
											"end": 3524,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3598,
											"end": 3992,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 3598,
											"end": 3992,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3806,
											"end": 3818,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 3806,
											"end": 3816,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 3806,
											"end": 3818,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3806,
											"end": 3818,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 3806,
											"end": 3818,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3798,
											"end": 3818,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3798,
											"end": 3818,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3798,
											"end": 3802,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3798,
											"end": 3818,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3798,
											"end": 3818,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3798,
											"end": 3818,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3798,
											"end": 3858,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3798,
											"end": 3858,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 3798,
											"end": 3858,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3798,
											"end": 3858,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3822,
											"end": 3858,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 3839,
											"end": 3843,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3845,
											"end": 3857,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 3845,
											"end": 3855,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 3845,
											"end": 3857,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3845,
											"end": 3857,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 3845,
											"end": 3857,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3822,
											"end": 3838,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 3822,
											"end": 3858,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3822,
											"end": 3858,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 3822,
											"end": 3858,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3798,
											"end": 3858,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 3798,
											"end": 3858,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3777,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 3777,
											"end": 3930,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3777,
											"end": 3930,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3777,
											"end": 3930,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3777,
											"end": 3930,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3777,
											"end": 3930,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3777,
											"end": 3930,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3777,
											"end": 3930,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3777,
											"end": 3930,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3777,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 3777,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3777,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 3777,
											"end": 3930,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3777,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 3777,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3777,
											"end": 3930,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3777,
											"end": 3930,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3777,
											"end": 3930,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3777,
											"end": 3930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3777,
											"end": 3930,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3777,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3777,
											"end": 3930,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3777,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 3777,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3940,
											"end": 3985,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 3958,
											"end": 3962,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3964,
											"end": 3966,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3968,
											"end": 3970,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3972,
											"end": 3978,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3980,
											"end": 3984,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3940,
											"end": 3957,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 3940,
											"end": 3985,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3940,
											"end": 3985,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 3940,
											"end": 3985,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3598,
											"end": 3992,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3598,
											"end": 3992,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3598,
											"end": 3992,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3598,
											"end": 3992,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3598,
											"end": 3992,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3598,
											"end": 3992,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 829,
											"end": 984,
											"name": "tag",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 829,
											"end": 984,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 914,
											"end": 918,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 952,
											"end": 977,
											"name": "PUSH",
											"source": 6,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 937,
											"end": 948,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 937,
											"end": 977,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 937,
											"end": 977,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 930,
											"end": 977,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 930,
											"end": 977,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 829,
											"end": 984,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 829,
											"end": 984,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 6233,
											"end": 7348,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 6233,
											"end": 7348,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6453,
											"end": 6460,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6453,
											"end": 6467,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6439,
											"end": 6442,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6439,
											"end": 6449,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6439,
											"end": 6467,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6544,
											"end": 6545,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6530,
											"end": 6546,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6530,
											"end": 6546,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6530,
											"end": 6532,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6530,
											"end": 6546,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6530,
											"end": 6546,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6530,
											"end": 6546,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6530,
											"end": 6546,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6599,
											"end": 6615,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 6618,
											"end": 6628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6599,
											"end": 6630,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6599,
											"end": 6630,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6641,
											"end": 6701,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 6662,
											"end": 6670,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6672,
											"end": 6676,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 6678,
											"end": 6680,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 6682,
											"end": 6685,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 6687,
											"end": 6694,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 6696,
											"end": 6700,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 6641,
											"end": 6661,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 6641,
											"end": 6701,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6641,
											"end": 6701,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 6641,
											"end": 6701,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6717,
											"end": 6726,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6712,
											"end": 7123,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 6712,
											"end": 7123,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6736,
											"end": 6739,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6736,
											"end": 6746,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 6733,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 6746,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6712,
											"end": 7123,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6712,
											"end": 7123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 6712,
											"end": 7123,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6767,
											"end": 6777,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6780,
											"end": 6783,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6784,
											"end": 6785,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6767,
											"end": 6786,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6767,
											"end": 6786,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6800,
											"end": 6814,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6817,
											"end": 6824,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6825,
											"end": 6826,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6800,
											"end": 6827,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6800,
											"end": 6827,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6842,
											"end": 6861,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6864,
											"end": 6873,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6864,
											"end": 6877,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6874,
											"end": 6876,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6864,
											"end": 6877,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6864,
											"end": 6877,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6864,
											"end": 6877,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6864,
											"end": 6877,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6864,
											"end": 6877,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6864,
											"end": 6877,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6864,
											"end": 6877,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6864,
											"end": 6877,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6864,
											"end": 6877,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6864,
											"end": 6877,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6864,
											"end": 6877,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6864,
											"end": 6883,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6878,
											"end": 6882,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 6864,
											"end": 6883,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6864,
											"end": 6883,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6864,
											"end": 6883,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6864,
											"end": 6883,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6864,
											"end": 6883,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6864,
											"end": 6883,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6864,
											"end": 6883,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6864,
											"end": 6883,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6864,
											"end": 6883,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6864,
											"end": 6883,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6864,
											"end": 6883,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6864,
											"end": 6883,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6864,
											"end": 6883,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6864,
											"end": 6883,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6864,
											"end": 6883,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6864,
											"end": 6883,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6842,
											"end": 6883,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6842,
											"end": 6883,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6920,
											"end": 6926,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6905,
											"end": 6916,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6905,
											"end": 6926,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6905,
											"end": 6926,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7051,
											"end": 7057,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7037,
											"end": 7048,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7037,
											"end": 7057,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7024,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7015,
											"end": 7028,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7025,
											"end": 7027,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7028,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7028,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7028,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7015,
											"end": 7028,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7028,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7028,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7028,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7028,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7015,
											"end": 7028,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7028,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7015,
											"end": 7028,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7034,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7029,
											"end": 7033,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7034,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7015,
											"end": 7034,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7034,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7015,
											"end": 7034,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7034,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7034,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7034,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7015,
											"end": 7034,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7034,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7034,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7034,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7034,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7015,
											"end": 7034,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7034,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7015,
											"end": 7034,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7057,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7057,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7057,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7057,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7106,
											"end": 7112,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7094,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7085,
											"end": 7098,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7095,
											"end": 7097,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7098,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7098,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7098,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7085,
											"end": 7098,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7098,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7098,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7098,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7098,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7085,
											"end": 7098,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7098,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7085,
											"end": 7098,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7102,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7099,
											"end": 7101,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7102,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7085,
											"end": 7102,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7102,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7085,
											"end": 7102,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7102,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7102,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7102,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7085,
											"end": 7102,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7102,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7102,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7102,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7102,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7085,
											"end": 7102,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7102,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7085,
											"end": 7102,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7102,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6753,
											"end": 7123,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6753,
											"end": 7123,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6753,
											"end": 7123,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6748,
											"end": 6751,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6748,
											"end": 6751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 6748,
											"end": 6751,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6748,
											"end": 6751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6748,
											"end": 6751,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6748,
											"end": 6751,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 6748,
											"end": 6751,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6748,
											"end": 6751,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6748,
											"end": 6751,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6712,
											"end": 7123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 6712,
											"end": 7123,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6712,
											"end": 7123,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 6712,
											"end": 7123,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6712,
											"end": 7123,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7168,
											"end": 7170,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7162,
											"end": 7166,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7152,
											"end": 7160,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "PUSH",
											"source": 0,
											"value": "4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB"
										},
										{
											"begin": 7172,
											"end": 7175,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7177,
											"end": 7184,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 7196,
											"end": 7255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 7216,
											"end": 7224,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7226,
											"end": 7230,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7232,
											"end": 7234,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7236,
											"end": 7239,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7241,
											"end": 7248,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7250,
											"end": 7254,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7196,
											"end": 7215,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 7196,
											"end": 7255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7196,
											"end": 7255,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 7196,
											"end": 7255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7266,
											"end": 7341,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 7302,
											"end": 7310,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7312,
											"end": 7316,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7318,
											"end": 7320,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7322,
											"end": 7325,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7327,
											"end": 7334,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7336,
											"end": 7340,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7266,
											"end": 7301,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 7266,
											"end": 7341,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7266,
											"end": 7341,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 7266,
											"end": 7341,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6421,
											"end": 7348,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6233,
											"end": 7348,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6233,
											"end": 7348,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6233,
											"end": 7348,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6233,
											"end": 7348,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6233,
											"end": 7348,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6233,
											"end": 7348,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 12910,
											"end": 13233,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 12910,
											"end": 13233,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13060,
											"end": 13068,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13051,
											"end": 13068,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13051,
											"end": 13068,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13051,
											"end": 13056,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13051,
											"end": 13068,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13051,
											"end": 13068,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13051,
											"end": 13068,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 13051,
											"end": 13068,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13043,
											"end": 13114,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 13043,
											"end": 13114,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13043,
											"end": 13114,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13043,
											"end": 13114,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13043,
											"end": 13114,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13043,
											"end": 13114,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13043,
											"end": 13114,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13043,
											"end": 13114,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13043,
											"end": 13114,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13043,
											"end": 13114,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 13043,
											"end": 13114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13043,
											"end": 13114,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 13043,
											"end": 13114,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13043,
											"end": 13114,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 13043,
											"end": 13114,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13043,
											"end": 13114,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13043,
											"end": 13114,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13043,
											"end": 13114,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13043,
											"end": 13114,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13043,
											"end": 13114,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13043,
											"end": 13114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13043,
											"end": 13114,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13043,
											"end": 13114,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 13043,
											"end": 13114,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13162,
											"end": 13170,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13124,
											"end": 13142,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13124,
											"end": 13149,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13143,
											"end": 13148,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 13124,
											"end": 13149,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13124,
											"end": 13149,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13124,
											"end": 13149,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13124,
											"end": 13149,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13124,
											"end": 13149,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13124,
											"end": 13149,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13124,
											"end": 13149,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13124,
											"end": 13149,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13124,
											"end": 13149,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13124,
											"end": 13149,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13124,
											"end": 13149,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13124,
											"end": 13149,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13124,
											"end": 13149,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13124,
											"end": 13149,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13124,
											"end": 13149,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13124,
											"end": 13159,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13150,
											"end": 13158,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13124,
											"end": 13159,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13124,
											"end": 13159,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13124,
											"end": 13159,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13124,
											"end": 13159,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13124,
											"end": 13159,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13124,
											"end": 13159,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13124,
											"end": 13159,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13124,
											"end": 13159,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13124,
											"end": 13159,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13124,
											"end": 13159,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13124,
											"end": 13159,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13124,
											"end": 13159,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13124,
											"end": 13159,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13124,
											"end": 13159,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13124,
											"end": 13159,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13124,
											"end": 13159,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13124,
											"end": 13170,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 13124,
											"end": 13170,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 13124,
											"end": 13170,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13124,
											"end": 13170,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13124,
											"end": 13170,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13124,
											"end": 13170,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 13124,
											"end": 13170,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 13124,
											"end": 13170,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 13124,
											"end": 13170,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13124,
											"end": 13170,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13124,
											"end": 13170,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13124,
											"end": 13170,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13124,
											"end": 13170,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13124,
											"end": 13170,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 13124,
											"end": 13170,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 13124,
											"end": 13170,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13124,
											"end": 13170,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 13124,
											"end": 13170,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13207,
											"end": 13215,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13185,
											"end": 13226,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13185,
											"end": 13226,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13200,
											"end": 13205,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13185,
											"end": 13226,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13185,
											"end": 13226,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13185,
											"end": 13226,
											"name": "PUSH",
											"source": 0,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 13217,
											"end": 13225,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13185,
											"end": 13226,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13185,
											"end": 13226,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13185,
											"end": 13226,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 13185,
											"end": 13226,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13185,
											"end": 13226,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13185,
											"end": 13226,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 13185,
											"end": 13226,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13185,
											"end": 13226,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 13185,
											"end": 13226,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13185,
											"end": 13226,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13185,
											"end": 13226,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13185,
											"end": 13226,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13185,
											"end": 13226,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13185,
											"end": 13226,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13185,
											"end": 13226,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13185,
											"end": 13226,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 12910,
											"end": 13233,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12910,
											"end": 13233,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12910,
											"end": 13233,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12910,
											"end": 13233,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4940,
											"end": 5887,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 4940,
											"end": 5887,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5135,
											"end": 5136,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5121,
											"end": 5137,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5121,
											"end": 5137,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5121,
											"end": 5123,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5121,
											"end": 5137,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5121,
											"end": 5137,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5121,
											"end": 5137,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5121,
											"end": 5137,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5190,
											"end": 5206,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5209,
											"end": 5221,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 5209,
											"end": 5219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 5209,
											"end": 5221,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5209,
											"end": 5221,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 5209,
											"end": 5221,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5190,
											"end": 5221,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5190,
											"end": 5221,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5231,
											"end": 5251,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5254,
											"end": 5275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 5272,
											"end": 5274,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5254,
											"end": 5271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 5254,
											"end": 5275,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5254,
											"end": 5275,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 5254,
											"end": 5275,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5231,
											"end": 5275,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5231,
											"end": 5275,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5285,
											"end": 5309,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5312,
											"end": 5337,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 5330,
											"end": 5336,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5312,
											"end": 5329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 5312,
											"end": 5337,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5312,
											"end": 5337,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 5312,
											"end": 5337,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5285,
											"end": 5337,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5285,
											"end": 5337,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5348,
											"end": 5408,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 5369,
											"end": 5377,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5379,
											"end": 5383,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 5385,
											"end": 5387,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 5389,
											"end": 5392,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5394,
											"end": 5401,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5403,
											"end": 5407,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 5348,
											"end": 5368,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 5348,
											"end": 5408,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5348,
											"end": 5408,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 5348,
											"end": 5408,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5419,
											"end": 5438,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5441,
											"end": 5450,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5441,
											"end": 5454,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5451,
											"end": 5453,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 5441,
											"end": 5454,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5441,
											"end": 5454,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5441,
											"end": 5454,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5441,
											"end": 5454,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5441,
											"end": 5454,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5441,
											"end": 5454,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5441,
											"end": 5454,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5441,
											"end": 5454,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5441,
											"end": 5454,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5441,
											"end": 5454,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5441,
											"end": 5454,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5441,
											"end": 5460,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5455,
											"end": 5459,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 5441,
											"end": 5460,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5441,
											"end": 5460,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5441,
											"end": 5460,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5441,
											"end": 5460,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5441,
											"end": 5460,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5441,
											"end": 5460,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5441,
											"end": 5460,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5441,
											"end": 5460,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5441,
											"end": 5460,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5441,
											"end": 5460,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5441,
											"end": 5460,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5441,
											"end": 5460,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5441,
											"end": 5460,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5441,
											"end": 5460,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5441,
											"end": 5460,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5441,
											"end": 5460,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5419,
											"end": 5460,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5419,
											"end": 5460,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5493,
											"end": 5499,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5489,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5499,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5499,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5616,
											"end": 5622,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5602,
											"end": 5613,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5602,
											"end": 5622,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5580,
											"end": 5589,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5580,
											"end": 5593,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5590,
											"end": 5592,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 5580,
											"end": 5593,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5580,
											"end": 5593,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5580,
											"end": 5593,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5580,
											"end": 5593,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5580,
											"end": 5593,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5580,
											"end": 5593,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5580,
											"end": 5593,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5580,
											"end": 5593,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5580,
											"end": 5593,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5580,
											"end": 5593,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5580,
											"end": 5593,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5580,
											"end": 5599,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5594,
											"end": 5598,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 5580,
											"end": 5599,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5580,
											"end": 5599,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5580,
											"end": 5599,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5580,
											"end": 5599,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5580,
											"end": 5599,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5580,
											"end": 5599,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5580,
											"end": 5599,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5580,
											"end": 5599,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5580,
											"end": 5599,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5580,
											"end": 5599,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5580,
											"end": 5599,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5580,
											"end": 5599,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5580,
											"end": 5599,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5580,
											"end": 5599,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5580,
											"end": 5599,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5580,
											"end": 5622,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5580,
											"end": 5622,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5580,
											"end": 5622,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5580,
											"end": 5622,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5663,
											"end": 5669,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5651,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5642,
											"end": 5655,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5652,
											"end": 5654,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5655,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5655,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5655,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5642,
											"end": 5655,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5655,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5655,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5655,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5655,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5642,
											"end": 5655,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5655,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5642,
											"end": 5655,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5659,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5656,
											"end": 5658,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5659,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5642,
											"end": 5659,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5659,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5642,
											"end": 5659,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5659,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5659,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5659,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5642,
											"end": 5659,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5659,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5659,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5659,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5659,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5642,
											"end": 5659,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5659,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5642,
											"end": 5659,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5659,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5642,
											"end": 5669,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5669,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5669,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5669,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 5642,
											"end": 5669,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5669,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5669,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 5642,
											"end": 5669,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5642,
											"end": 5669,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 5642,
											"end": 5669,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5669,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5669,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5669,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5669,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5669,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5669,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5669,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5716,
											"end": 5718,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5710,
											"end": 5714,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5700,
											"end": 5708,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "PUSH",
											"source": 0,
											"value": "C3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
										},
										{
											"begin": 5720,
											"end": 5722,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 5724,
											"end": 5730,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 5742,
											"end": 5801,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 5762,
											"end": 5770,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5772,
											"end": 5776,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 5778,
											"end": 5780,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 5782,
											"end": 5785,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 5794,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 5796,
											"end": 5800,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 5742,
											"end": 5761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 5742,
											"end": 5801,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5742,
											"end": 5801,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 5742,
											"end": 5801,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5812,
											"end": 5880,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 5843,
											"end": 5851,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5853,
											"end": 5857,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 5859,
											"end": 5861,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 5863,
											"end": 5865,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 5867,
											"end": 5873,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 5875,
											"end": 5879,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 5812,
											"end": 5842,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 5812,
											"end": 5880,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5812,
											"end": 5880,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 5812,
											"end": 5880,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5103,
											"end": 5887,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5103,
											"end": 5887,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5103,
											"end": 5887,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5103,
											"end": 5887,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4940,
											"end": 5887,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4940,
											"end": 5887,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4940,
											"end": 5887,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4940,
											"end": 5887,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4940,
											"end": 5887,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4940,
											"end": 5887,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14169,
											"end": 14383,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 14169,
											"end": 14383,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14169,
											"end": 14383,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14169,
											"end": 14383,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14169,
											"end": 14383,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14169,
											"end": 14383,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14169,
											"end": 14383,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14169,
											"end": 14383,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14169,
											"end": 14383,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 15316,
											"end": 15529,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 15316,
											"end": 15529,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15316,
											"end": 15529,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15316,
											"end": 15529,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15316,
											"end": 15529,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15316,
											"end": 15529,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15316,
											"end": 15529,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15316,
											"end": 15529,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15316,
											"end": 15529,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 16266,
											"end": 17058,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 16266,
											"end": 17058,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16498,
											"end": 16513,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 16498,
											"end": 16500,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16498,
											"end": 16511,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16498,
											"end": 16511,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16498,
											"end": 16511,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 16498,
											"end": 16513,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16498,
											"end": 16513,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 16498,
											"end": 16513,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16494,
											"end": 17052,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16494,
											"end": 17052,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 16494,
											"end": 17052,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16550,
											"end": 16552,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16533,
											"end": 16576,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16533,
											"end": 16576,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16533,
											"end": 16576,
											"name": "PUSH",
											"source": 0,
											"value": "BC197C81"
										},
										{
											"begin": 16577,
											"end": 16585,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 16587,
											"end": 16591,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 16593,
											"end": 16596,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 16598,
											"end": 16605,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 16607,
											"end": 16611,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16529,
											"end": 17042,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 16529,
											"end": 17042,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16529,
											"end": 17042,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 16529,
											"end": 17042,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 16529,
											"end": 17042,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16529,
											"end": 17042,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 16529,
											"end": 17042,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16529,
											"end": 17042,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16529,
											"end": 17042,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A0"
										},
										{
											"begin": 16529,
											"end": 17042,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 16529,
											"end": 17042,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16529,
											"end": 17042,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 16529,
											"end": 17042,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16529,
											"end": 17042,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16529,
											"end": 17042,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 16529,
											"end": 17042,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 16529,
											"end": 17042,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16529,
											"end": 17042,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 16529,
											"end": 17042,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16529,
											"end": 17042,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16529,
											"end": 17042,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 16529,
											"end": 17042,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16529,
											"end": 17042,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16529,
											"end": 17042,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 16529,
											"end": 17042,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16529,
											"end": 17042,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 16529,
											"end": 17042,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16918,
											"end": 16924,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16911,
											"end": 16925,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16911,
											"end": 16925,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16911,
											"end": 16925,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16911,
											"end": 16925,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16911,
											"end": 16925,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16911,
											"end": 16925,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16911,
											"end": 16925,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16911,
											"end": 16925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 16911,
											"end": 16925,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16911,
											"end": 16925,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16911,
											"end": 16925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 16911,
											"end": 16925,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16911,
											"end": 16925,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 16911,
											"end": 16925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16911,
											"end": 16925,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16911,
											"end": 16925,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16911,
											"end": 16925,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16911,
											"end": 16925,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16911,
											"end": 16925,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16911,
											"end": 16925,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16911,
											"end": 16925,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16529,
											"end": 17042,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 16529,
											"end": 17042,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16529,
											"end": 17042,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16529,
											"end": 17042,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 16529,
											"end": 17042,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16965,
											"end": 17027,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16965,
											"end": 17027,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16965,
											"end": 17027,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16965,
											"end": 17027,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16965,
											"end": 17027,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16965,
											"end": 17027,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16965,
											"end": 17027,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16965,
											"end": 17027,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 16965,
											"end": 17027,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16965,
											"end": 17027,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 16965,
											"end": 17027,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16965,
											"end": 17027,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 16965,
											"end": 17027,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16965,
											"end": 17027,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16965,
											"end": 17027,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16965,
											"end": 17027,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16965,
											"end": 17027,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16965,
											"end": 17027,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16965,
											"end": 17027,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16965,
											"end": 17027,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16529,
											"end": 17042,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 16529,
											"end": 17042,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16703,
											"end": 16751,
											"name": "PUSH",
											"source": 0,
											"value": "BC197C81"
										},
										{
											"begin": 16703,
											"end": 16751,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 16703,
											"end": 16751,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 16691,
											"end": 16751,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16691,
											"end": 16751,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 16691,
											"end": 16751,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16691,
											"end": 16699,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16691,
											"end": 16751,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16691,
											"end": 16751,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 16691,
											"end": 16751,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16691,
											"end": 16751,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 16687,
											"end": 16844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 16687,
											"end": 16844,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16775,
											"end": 16825,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16775,
											"end": 16825,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16775,
											"end": 16825,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16775,
											"end": 16825,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16775,
											"end": 16825,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16775,
											"end": 16825,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16775,
											"end": 16825,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16775,
											"end": 16825,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 16775,
											"end": 16825,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16775,
											"end": 16825,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 16775,
											"end": 16825,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16775,
											"end": 16825,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 16775,
											"end": 16825,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16775,
											"end": 16825,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16775,
											"end": 16825,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16775,
											"end": 16825,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16775,
											"end": 16825,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16775,
											"end": 16825,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16775,
											"end": 16825,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16775,
											"end": 16825,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16687,
											"end": 16844,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 16687,
											"end": 16844,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16613,
											"end": 16858,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16494,
											"end": 17052,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 16494,
											"end": 17052,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16266,
											"end": 17058,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16266,
											"end": 17058,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16266,
											"end": 17058,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16266,
											"end": 17058,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16266,
											"end": 17058,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16266,
											"end": 17058,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16266,
											"end": 17058,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 17064,
											"end": 17257,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 17064,
											"end": 17257,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17130,
											"end": 17146,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 17158,
											"end": 17180,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17197,
											"end": 17198,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 17183,
											"end": 17199,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17183,
											"end": 17199,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17183,
											"end": 17199,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 17183,
											"end": 17199,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17183,
											"end": 17199,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 17183,
											"end": 17199,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17183,
											"end": 17199,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 17183,
											"end": 17199,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 17183,
											"end": 17199,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17183,
											"end": 17199,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 17183,
											"end": 17199,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17183,
											"end": 17199,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 17183,
											"end": 17199,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17183,
											"end": 17199,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17183,
											"end": 17199,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17183,
											"end": 17199,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17183,
											"end": 17199,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17183,
											"end": 17199,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17183,
											"end": 17199,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17183,
											"end": 17199,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17183,
											"end": 17199,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17183,
											"end": 17199,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 17183,
											"end": 17199,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17183,
											"end": 17199,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17183,
											"end": 17199,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17183,
											"end": 17199,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17183,
											"end": 17199,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17183,
											"end": 17199,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17183,
											"end": 17199,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17183,
											"end": 17199,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17183,
											"end": 17199,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 17183,
											"end": 17199,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17183,
											"end": 17199,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17183,
											"end": 17199,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17183,
											"end": 17199,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17183,
											"end": 17199,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17183,
											"end": 17199,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17183,
											"end": 17199,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 17183,
											"end": 17199,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17183,
											"end": 17199,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 17183,
											"end": 17199,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17183,
											"end": 17199,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 17183,
											"end": 17199,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17183,
											"end": 17199,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17183,
											"end": 17199,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17183,
											"end": 17199,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17183,
											"end": 17199,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17183,
											"end": 17199,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17183,
											"end": 17199,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17183,
											"end": 17199,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17183,
											"end": 17199,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 17183,
											"end": 17199,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17183,
											"end": 17199,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17158,
											"end": 17199,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17158,
											"end": 17199,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17220,
											"end": 17227,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17209,
											"end": 17214,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17215,
											"end": 17216,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17209,
											"end": 17217,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17209,
											"end": 17217,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17209,
											"end": 17217,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17209,
											"end": 17217,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 17209,
											"end": 17217,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 17209,
											"end": 17217,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17209,
											"end": 17217,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 17209,
											"end": 17217,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 17209,
											"end": 17217,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17209,
											"end": 17217,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 17209,
											"end": 17217,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17209,
											"end": 17217,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 17209,
											"end": 17217,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17209,
											"end": 17217,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17209,
											"end": 17217,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 17209,
											"end": 17217,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17209,
											"end": 17217,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17209,
											"end": 17217,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17209,
											"end": 17227,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17209,
											"end": 17227,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17209,
											"end": 17227,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17209,
											"end": 17227,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17209,
											"end": 17227,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17245,
											"end": 17250,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17238,
											"end": 17250,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17238,
											"end": 17250,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17238,
											"end": 17250,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17064,
											"end": 17257,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17064,
											"end": 17257,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17064,
											"end": 17257,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17064,
											"end": 17257,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 15535,
											"end": 16260,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 15535,
											"end": 16260,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15742,
											"end": 15757,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 15742,
											"end": 15744,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15742,
											"end": 15755,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15742,
											"end": 15755,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15742,
											"end": 15755,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 15742,
											"end": 15757,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15742,
											"end": 15757,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 15742,
											"end": 15757,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15738,
											"end": 16254,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15738,
											"end": 16254,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 15738,
											"end": 16254,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15794,
											"end": 15796,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15777,
											"end": 15815,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15777,
											"end": 15815,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15777,
											"end": 15815,
											"name": "PUSH",
											"source": 0,
											"value": "F23A6E61"
										},
										{
											"begin": 15816,
											"end": 15824,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 15826,
											"end": 15830,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 15832,
											"end": 15834,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 15836,
											"end": 15842,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 15844,
											"end": 15848,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15773,
											"end": 16244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 15773,
											"end": 16244,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15773,
											"end": 16244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 15773,
											"end": 16244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 15773,
											"end": 16244,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15773,
											"end": 16244,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 15773,
											"end": 16244,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15773,
											"end": 16244,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15773,
											"end": 16244,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A0"
										},
										{
											"begin": 15773,
											"end": 16244,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15773,
											"end": 16244,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15773,
											"end": 16244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 15773,
											"end": 16244,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15773,
											"end": 16244,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15773,
											"end": 16244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 15773,
											"end": 16244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 15773,
											"end": 16244,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15773,
											"end": 16244,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 15773,
											"end": 16244,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15773,
											"end": 16244,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15773,
											"end": 16244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 15773,
											"end": 16244,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15773,
											"end": 16244,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15773,
											"end": 16244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 15773,
											"end": 16244,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15773,
											"end": 16244,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 15773,
											"end": 16244,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16120,
											"end": 16126,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16113,
											"end": 16127,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16113,
											"end": 16127,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16113,
											"end": 16127,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16113,
											"end": 16127,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16113,
											"end": 16127,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16113,
											"end": 16127,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16113,
											"end": 16127,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16113,
											"end": 16127,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 16113,
											"end": 16127,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16113,
											"end": 16127,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16113,
											"end": 16127,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 16113,
											"end": 16127,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16113,
											"end": 16127,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 16113,
											"end": 16127,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16113,
											"end": 16127,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16113,
											"end": 16127,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16113,
											"end": 16127,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16113,
											"end": 16127,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16113,
											"end": 16127,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16113,
											"end": 16127,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16113,
											"end": 16127,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15773,
											"end": 16244,
											"name": "tag",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 15773,
											"end": 16244,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15773,
											"end": 16244,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15773,
											"end": 16244,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 15773,
											"end": 16244,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16167,
											"end": 16229,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16167,
											"end": 16229,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16167,
											"end": 16229,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16167,
											"end": 16229,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16167,
											"end": 16229,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16167,
											"end": 16229,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16167,
											"end": 16229,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16167,
											"end": 16229,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 16167,
											"end": 16229,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16167,
											"end": 16229,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 16167,
											"end": 16229,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16167,
											"end": 16229,
											"name": "tag",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 16167,
											"end": 16229,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16167,
											"end": 16229,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16167,
											"end": 16229,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16167,
											"end": 16229,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16167,
											"end": 16229,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16167,
											"end": 16229,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16167,
											"end": 16229,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16167,
											"end": 16229,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15773,
											"end": 16244,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 15773,
											"end": 16244,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15910,
											"end": 15953,
											"name": "PUSH",
											"source": 0,
											"value": "F23A6E61"
										},
										{
											"begin": 15910,
											"end": 15953,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 15910,
											"end": 15953,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 15898,
											"end": 15953,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15898,
											"end": 15953,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 15898,
											"end": 15953,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15898,
											"end": 15906,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15898,
											"end": 15953,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15898,
											"end": 15953,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 15898,
											"end": 15953,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15898,
											"end": 15953,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15894,
											"end": 16046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 15894,
											"end": 16046,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15977,
											"end": 16027,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15977,
											"end": 16027,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15977,
											"end": 16027,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15977,
											"end": 16027,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15977,
											"end": 16027,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15977,
											"end": 16027,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15977,
											"end": 16027,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15977,
											"end": 16027,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 15977,
											"end": 16027,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15977,
											"end": 16027,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 15977,
											"end": 16027,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15977,
											"end": 16027,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 15977,
											"end": 16027,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15977,
											"end": 16027,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15977,
											"end": 16027,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15977,
											"end": 16027,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15977,
											"end": 16027,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15977,
											"end": 16027,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15977,
											"end": 16027,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15977,
											"end": 16027,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15894,
											"end": 16046,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 15894,
											"end": 16046,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15850,
											"end": 16060,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15738,
											"end": 16254,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 15738,
											"end": 16254,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15535,
											"end": 16260,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15535,
											"end": 16260,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15535,
											"end": 16260,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15535,
											"end": 16260,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15535,
											"end": 16260,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15535,
											"end": 16260,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15535,
											"end": 16260,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "tag",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1235,
											"end": 1239,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1487,
											"end": 1488,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1465,
											"end": 1472,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1458,
											"end": 1488,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1458,
											"end": 1488,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 8,
											"value": "222"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 8,
											"value": "223"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 8,
											"value": "224"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 8,
											"value": "226"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "299"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 8,
											"value": "299"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 8,
											"value": "227"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "301"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "226"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 8,
											"value": "301"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "302"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 8,
											"value": "302"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "304"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "227"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 8,
											"value": "304"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 841,
											"end": 918,
											"name": "tag",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 841,
											"end": 918,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 878,
											"end": 885,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 907,
											"end": 912,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 896,
											"end": 912,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 896,
											"end": 912,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 841,
											"end": 918,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 841,
											"end": 918,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "tag",
											"source": 8,
											"value": "230"
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "307"
										},
										{
											"begin": 1015,
											"end": 1020,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "tag",
											"source": 8,
											"value": "307"
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 990,
											"end": 995,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 987,
											"end": 1022,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "308"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1036,
											"end": 1037,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1033,
											"end": 1034,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1026,
											"end": 1038,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "tag",
											"source": 8,
											"value": "308"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "tag",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1098,
											"end": 1103,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1143,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "310"
										},
										{
											"begin": 1179,
											"end": 1184,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "230"
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "tag",
											"source": 8,
											"value": "310"
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "tag",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1322,
											"end": 1324,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1310,
											"end": 1319,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1301,
											"end": 1308,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1293,
											"end": 1325,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "312"
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "313"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "223"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "tag",
											"source": 8,
											"value": "313"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "tag",
											"source": 8,
											"value": "312"
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1448,
											"end": 1449,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "314"
										},
										{
											"begin": 1518,
											"end": 1525,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1509,
											"end": 1515,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1498,
											"end": 1507,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 1494,
											"end": 1516,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "tag",
											"source": 8,
											"value": "314"
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1463,
											"end": 1526,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1463,
											"end": 1526,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1419,
											"end": 1536,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1575,
											"end": 1577,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 1646,
											"end": 1653,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1637,
											"end": 1643,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1626,
											"end": 1635,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 1622,
											"end": 1644,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "tag",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1591,
											"end": 1654,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1591,
											"end": 1654,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1546,
											"end": 1664,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "tag",
											"source": 8,
											"value": "232"
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "317"
										},
										{
											"begin": 1782,
											"end": 1787,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "tag",
											"source": 8,
											"value": "317"
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1759,
											"end": 1762,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1752,
											"end": 1789,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "tag",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1894,
											"end": 1898,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1932,
											"end": 1934,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1921,
											"end": 1930,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1917,
											"end": 1935,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1909,
											"end": 1935,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1909,
											"end": 1935,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "319"
										},
										{
											"begin": 2013,
											"end": 2014,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2002,
											"end": 2011,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1998,
											"end": 2015,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1989,
											"end": 1995,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "232"
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "tag",
											"source": 8,
											"value": "319"
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 2029,
											"end": 2178,
											"name": "tag",
											"source": 8,
											"value": "233"
										},
										{
											"begin": 2029,
											"end": 2178,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2065,
											"end": 2072,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2105,
											"end": 2171,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2098,
											"end": 2103,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2094,
											"end": 2172,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2083,
											"end": 2172,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2083,
											"end": 2172,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2029,
											"end": 2178,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2029,
											"end": 2178,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2029,
											"end": 2178,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2029,
											"end": 2178,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 2184,
											"end": 2304,
											"name": "tag",
											"source": 8,
											"value": "234"
										},
										{
											"begin": 2184,
											"end": 2304,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2256,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "322"
										},
										{
											"begin": 2273,
											"end": 2278,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2256,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "233"
										},
										{
											"begin": 2256,
											"end": 2279,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2256,
											"end": 2279,
											"name": "tag",
											"source": 8,
											"value": "322"
										},
										{
											"begin": 2256,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2249,
											"end": 2254,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2246,
											"end": 2280,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2236,
											"end": 2298,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "323"
										},
										{
											"begin": 2236,
											"end": 2298,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2294,
											"end": 2295,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2291,
											"end": 2292,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2236,
											"end": 2298,
											"name": "tag",
											"source": 8,
											"value": "323"
										},
										{
											"begin": 2236,
											"end": 2298,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2184,
											"end": 2304,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2184,
											"end": 2304,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "tag",
											"source": 8,
											"value": "235"
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2355,
											"end": 2360,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2393,
											"end": 2399,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2380,
											"end": 2400,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 2371,
											"end": 2400,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2371,
											"end": 2400,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2409,
											"end": 2441,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "325"
										},
										{
											"begin": 2435,
											"end": 2440,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2409,
											"end": 2441,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "234"
										},
										{
											"begin": 2409,
											"end": 2441,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2409,
											"end": 2441,
											"name": "tag",
											"source": 8,
											"value": "325"
										},
										{
											"begin": 2409,
											"end": 2441,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "tag",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2511,
											"end": 2517,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2560,
											"end": 2562,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2548,
											"end": 2557,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2539,
											"end": 2546,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2535,
											"end": 2558,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2531,
											"end": 2563,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2528,
											"end": 2647,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2528,
											"end": 2647,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "327"
										},
										{
											"begin": 2528,
											"end": 2647,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2566,
											"end": 2645,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "328"
										},
										{
											"begin": 2566,
											"end": 2645,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "223"
										},
										{
											"begin": 2566,
											"end": 2645,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2566,
											"end": 2645,
											"name": "tag",
											"source": 8,
											"value": "328"
										},
										{
											"begin": 2566,
											"end": 2645,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2528,
											"end": 2647,
											"name": "tag",
											"source": 8,
											"value": "327"
										},
										{
											"begin": 2528,
											"end": 2647,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2686,
											"end": 2687,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2711,
											"end": 2763,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "329"
										},
										{
											"begin": 2755,
											"end": 2762,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2746,
											"end": 2752,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2735,
											"end": 2744,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2731,
											"end": 2753,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2711,
											"end": 2763,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "235"
										},
										{
											"begin": 2711,
											"end": 2763,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2711,
											"end": 2763,
											"name": "tag",
											"source": 8,
											"value": "329"
										},
										{
											"begin": 2711,
											"end": 2763,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2701,
											"end": 2763,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2701,
											"end": 2763,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2657,
											"end": 2773,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 2786,
											"end": 2876,
											"name": "tag",
											"source": 8,
											"value": "236"
										},
										{
											"begin": 2786,
											"end": 2876,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2820,
											"end": 2827,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2863,
											"end": 2868,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2856,
											"end": 2869,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2849,
											"end": 2870,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2838,
											"end": 2870,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2838,
											"end": 2870,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2786,
											"end": 2876,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2786,
											"end": 2876,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2786,
											"end": 2876,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2786,
											"end": 2876,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 2882,
											"end": 2991,
											"name": "tag",
											"source": 8,
											"value": "237"
										},
										{
											"begin": 2882,
											"end": 2991,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2963,
											"end": 2984,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "332"
										},
										{
											"begin": 2978,
											"end": 2983,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2963,
											"end": 2984,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "236"
										},
										{
											"begin": 2963,
											"end": 2984,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2963,
											"end": 2984,
											"name": "tag",
											"source": 8,
											"value": "332"
										},
										{
											"begin": 2963,
											"end": 2984,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2958,
											"end": 2961,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2951,
											"end": 2985,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2882,
											"end": 2991,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2882,
											"end": 2991,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2882,
											"end": 2991,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "tag",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3084,
											"end": 3088,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3122,
											"end": 3124,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3111,
											"end": 3120,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3107,
											"end": 3125,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3099,
											"end": 3125,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3099,
											"end": 3125,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3135,
											"end": 3200,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "334"
										},
										{
											"begin": 3197,
											"end": 3198,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3186,
											"end": 3195,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3182,
											"end": 3199,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3173,
											"end": 3179,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3135,
											"end": 3200,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "237"
										},
										{
											"begin": 3135,
											"end": 3200,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3135,
											"end": 3200,
											"name": "tag",
											"source": 8,
											"value": "334"
										},
										{
											"begin": 3135,
											"end": 3200,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 3213,
											"end": 3542,
											"name": "tag",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 3213,
											"end": 3542,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3272,
											"end": 3278,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3321,
											"end": 3323,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3309,
											"end": 3318,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3300,
											"end": 3307,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3296,
											"end": 3319,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3292,
											"end": 3324,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 3289,
											"end": 3408,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3289,
											"end": 3408,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "336"
										},
										{
											"begin": 3289,
											"end": 3408,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3327,
											"end": 3406,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "337"
										},
										{
											"begin": 3327,
											"end": 3406,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "223"
										},
										{
											"begin": 3327,
											"end": 3406,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3327,
											"end": 3406,
											"name": "tag",
											"source": 8,
											"value": "337"
										},
										{
											"begin": 3327,
											"end": 3406,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3289,
											"end": 3408,
											"name": "tag",
											"source": 8,
											"value": "336"
										},
										{
											"begin": 3289,
											"end": 3408,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3447,
											"end": 3448,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3472,
											"end": 3525,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "338"
										},
										{
											"begin": 3517,
											"end": 3524,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3508,
											"end": 3514,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3497,
											"end": 3506,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3493,
											"end": 3515,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3472,
											"end": 3525,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 3472,
											"end": 3525,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3472,
											"end": 3525,
											"name": "tag",
											"source": 8,
											"value": "338"
										},
										{
											"begin": 3472,
											"end": 3525,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3525,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3525,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3418,
											"end": 3535,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3213,
											"end": 3542,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3213,
											"end": 3542,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3213,
											"end": 3542,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3213,
											"end": 3542,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3213,
											"end": 3542,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 3548,
											"end": 3647,
											"name": "tag",
											"source": 8,
											"value": "238"
										},
										{
											"begin": 3548,
											"end": 3647,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3600,
											"end": 3606,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3634,
											"end": 3639,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3628,
											"end": 3640,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3618,
											"end": 3640,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3618,
											"end": 3640,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3548,
											"end": 3647,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3548,
											"end": 3647,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3548,
											"end": 3647,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3548,
											"end": 3647,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 3653,
											"end": 3822,
											"name": "tag",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 3653,
											"end": 3822,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3737,
											"end": 3748,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3771,
											"end": 3777,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3766,
											"end": 3769,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3759,
											"end": 3778,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3811,
											"end": 3815,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3806,
											"end": 3809,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3802,
											"end": 3816,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3787,
											"end": 3816,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3787,
											"end": 3816,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3653,
											"end": 3822,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3653,
											"end": 3822,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3653,
											"end": 3822,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3653,
											"end": 3822,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3653,
											"end": 3822,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 3828,
											"end": 4135,
											"name": "tag",
											"source": 8,
											"value": "240"
										},
										{
											"begin": 3828,
											"end": 4135,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3896,
											"end": 3897,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3906,
											"end": 4019,
											"name": "tag",
											"source": 8,
											"value": "342"
										},
										{
											"begin": 3906,
											"end": 4019,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3920,
											"end": 3926,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3917,
											"end": 3918,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3914,
											"end": 3927,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 3906,
											"end": 4019,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3906,
											"end": 4019,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "344"
										},
										{
											"begin": 3906,
											"end": 4019,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4005,
											"end": 4006,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4000,
											"end": 4003,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3996,
											"end": 4007,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3990,
											"end": 4008,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3986,
											"end": 3987,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3981,
											"end": 3984,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3977,
											"end": 3988,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3970,
											"end": 4009,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3942,
											"end": 3944,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3939,
											"end": 3940,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3935,
											"end": 3945,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3930,
											"end": 3945,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3930,
											"end": 3945,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3906,
											"end": 4019,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "342"
										},
										{
											"begin": 3906,
											"end": 4019,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3906,
											"end": 4019,
											"name": "tag",
											"source": 8,
											"value": "344"
										},
										{
											"begin": 3906,
											"end": 4019,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4037,
											"end": 4043,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4034,
											"end": 4035,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4031,
											"end": 4044,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 4028,
											"end": 4129,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4028,
											"end": 4129,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "345"
										},
										{
											"begin": 4028,
											"end": 4129,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4117,
											"end": 4118,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4108,
											"end": 4114,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4103,
											"end": 4106,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4099,
											"end": 4115,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4092,
											"end": 4119,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4028,
											"end": 4129,
											"name": "tag",
											"source": 8,
											"value": "345"
										},
										{
											"begin": 4028,
											"end": 4129,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3877,
											"end": 4135,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3828,
											"end": 4135,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3828,
											"end": 4135,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3828,
											"end": 4135,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3828,
											"end": 4135,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 4141,
											"end": 4243,
											"name": "tag",
											"source": 8,
											"value": "241"
										},
										{
											"begin": 4141,
											"end": 4243,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4182,
											"end": 4188,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4233,
											"end": 4235,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 4229,
											"end": 4236,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 4224,
											"end": 4226,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 4217,
											"end": 4222,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4213,
											"end": 4227,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4209,
											"end": 4237,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4199,
											"end": 4237,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4199,
											"end": 4237,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4141,
											"end": 4243,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4141,
											"end": 4243,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4141,
											"end": 4243,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4141,
											"end": 4243,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 4249,
											"end": 4613,
											"name": "tag",
											"source": 8,
											"value": "242"
										},
										{
											"begin": 4249,
											"end": 4613,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4337,
											"end": 4340,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4365,
											"end": 4404,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "348"
										},
										{
											"begin": 4398,
											"end": 4403,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4365,
											"end": 4404,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "238"
										},
										{
											"begin": 4365,
											"end": 4404,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4365,
											"end": 4404,
											"name": "tag",
											"source": 8,
											"value": "348"
										},
										{
											"begin": 4365,
											"end": 4404,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4420,
											"end": 4491,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "349"
										},
										{
											"begin": 4484,
											"end": 4490,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4479,
											"end": 4482,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4420,
											"end": 4491,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 4420,
											"end": 4491,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4420,
											"end": 4491,
											"name": "tag",
											"source": 8,
											"value": "349"
										},
										{
											"begin": 4420,
											"end": 4491,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4413,
											"end": 4491,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 4413,
											"end": 4491,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4500,
											"end": 4552,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "350"
										},
										{
											"begin": 4545,
											"end": 4551,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4540,
											"end": 4543,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4533,
											"end": 4537,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4526,
											"end": 4531,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4522,
											"end": 4538,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4500,
											"end": 4552,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "240"
										},
										{
											"begin": 4500,
											"end": 4552,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4500,
											"end": 4552,
											"name": "tag",
											"source": 8,
											"value": "350"
										},
										{
											"begin": 4500,
											"end": 4552,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4577,
											"end": 4606,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "351"
										},
										{
											"begin": 4599,
											"end": 4605,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4577,
											"end": 4606,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "241"
										},
										{
											"begin": 4577,
											"end": 4606,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4577,
											"end": 4606,
											"name": "tag",
											"source": 8,
											"value": "351"
										},
										{
											"begin": 4577,
											"end": 4606,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4572,
											"end": 4575,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4568,
											"end": 4607,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4561,
											"end": 4607,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4561,
											"end": 4607,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4341,
											"end": 4613,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4249,
											"end": 4613,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4249,
											"end": 4613,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4249,
											"end": 4613,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4249,
											"end": 4613,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4249,
											"end": 4613,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 4619,
											"end": 4932,
											"name": "tag",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 4619,
											"end": 4932,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4732,
											"end": 4736,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4770,
											"end": 4772,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4759,
											"end": 4768,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4755,
											"end": 4773,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4747,
											"end": 4773,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4747,
											"end": 4773,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4819,
											"end": 4828,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4813,
											"end": 4817,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4809,
											"end": 4829,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4805,
											"end": 4806,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4794,
											"end": 4803,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4790,
											"end": 4807,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4783,
											"end": 4830,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4847,
											"end": 4925,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "353"
										},
										{
											"begin": 4920,
											"end": 4924,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4911,
											"end": 4917,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4847,
											"end": 4925,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "242"
										},
										{
											"begin": 4847,
											"end": 4925,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4847,
											"end": 4925,
											"name": "tag",
											"source": 8,
											"value": "353"
										},
										{
											"begin": 4847,
											"end": 4925,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4839,
											"end": 4925,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4839,
											"end": 4925,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4619,
											"end": 4932,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4619,
											"end": 4932,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4619,
											"end": 4932,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4619,
											"end": 4932,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4619,
											"end": 4932,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 4938,
											"end": 5055,
											"name": "tag",
											"source": 8,
											"value": "243"
										},
										{
											"begin": 4938,
											"end": 5055,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5047,
											"end": 5048,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5044,
											"end": 5045,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5037,
											"end": 5049,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5061,
											"end": 5241,
											"name": "tag",
											"source": 8,
											"value": "86"
										},
										{
											"begin": 5061,
											"end": 5241,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5109,
											"end": 5186,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5106,
											"end": 5107,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5099,
											"end": 5187,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5206,
											"end": 5210,
											"name": "PUSH",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 5203,
											"end": 5204,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5196,
											"end": 5211,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5230,
											"end": 5234,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 5227,
											"end": 5228,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5220,
											"end": 5235,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5247,
											"end": 5528,
											"name": "tag",
											"source": 8,
											"value": "244"
										},
										{
											"begin": 5247,
											"end": 5528,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5330,
											"end": 5357,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "357"
										},
										{
											"begin": 5352,
											"end": 5356,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5330,
											"end": 5357,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "241"
										},
										{
											"begin": 5330,
											"end": 5357,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5330,
											"end": 5357,
											"name": "tag",
											"source": 8,
											"value": "357"
										},
										{
											"begin": 5330,
											"end": 5357,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5322,
											"end": 5328,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5318,
											"end": 5358,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5460,
											"end": 5466,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5448,
											"end": 5458,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5445,
											"end": 5467,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 5424,
											"end": 5442,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5412,
											"end": 5422,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5409,
											"end": 5443,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 5406,
											"end": 5468,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 5403,
											"end": 5491,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5403,
											"end": 5491,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "358"
										},
										{
											"begin": 5403,
											"end": 5491,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5471,
											"end": 5489,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "359"
										},
										{
											"begin": 5471,
											"end": 5489,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "86"
										},
										{
											"begin": 5471,
											"end": 5489,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5471,
											"end": 5489,
											"name": "tag",
											"source": 8,
											"value": "359"
										},
										{
											"begin": 5471,
											"end": 5489,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5403,
											"end": 5491,
											"name": "tag",
											"source": 8,
											"value": "358"
										},
										{
											"begin": 5403,
											"end": 5491,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5511,
											"end": 5521,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5507,
											"end": 5509,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5500,
											"end": 5522,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5290,
											"end": 5528,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5247,
											"end": 5528,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5247,
											"end": 5528,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5247,
											"end": 5528,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 5534,
											"end": 5663,
											"name": "tag",
											"source": 8,
											"value": "245"
										},
										{
											"begin": 5534,
											"end": 5663,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5568,
											"end": 5574,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5595,
											"end": 5615,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "361"
										},
										{
											"begin": 5595,
											"end": 5615,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "222"
										},
										{
											"begin": 5595,
											"end": 5615,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5595,
											"end": 5615,
											"name": "tag",
											"source": 8,
											"value": "361"
										},
										{
											"begin": 5595,
											"end": 5615,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5585,
											"end": 5615,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5585,
											"end": 5615,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5624,
											"end": 5657,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "362"
										},
										{
											"begin": 5652,
											"end": 5656,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5644,
											"end": 5650,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5624,
											"end": 5657,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "244"
										},
										{
											"begin": 5624,
											"end": 5657,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5624,
											"end": 5657,
											"name": "tag",
											"source": 8,
											"value": "362"
										},
										{
											"begin": 5624,
											"end": 5657,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5534,
											"end": 5663,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5534,
											"end": 5663,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5534,
											"end": 5663,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5534,
											"end": 5663,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 5669,
											"end": 5980,
											"name": "tag",
											"source": 8,
											"value": "246"
										},
										{
											"begin": 5669,
											"end": 5980,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5746,
											"end": 5750,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5836,
											"end": 5854,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5828,
											"end": 5834,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5825,
											"end": 5855,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 5822,
											"end": 5878,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5822,
											"end": 5878,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "364"
										},
										{
											"begin": 5822,
											"end": 5878,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5858,
											"end": 5876,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "365"
										},
										{
											"begin": 5858,
											"end": 5876,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "86"
										},
										{
											"begin": 5858,
											"end": 5876,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5858,
											"end": 5876,
											"name": "tag",
											"source": 8,
											"value": "365"
										},
										{
											"begin": 5858,
											"end": 5876,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5822,
											"end": 5878,
											"name": "tag",
											"source": 8,
											"value": "364"
										},
										{
											"begin": 5822,
											"end": 5878,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5908,
											"end": 5912,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5900,
											"end": 5906,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5896,
											"end": 5913,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 5888,
											"end": 5913,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5888,
											"end": 5913,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5968,
											"end": 5972,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5962,
											"end": 5966,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5958,
											"end": 5973,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5950,
											"end": 5973,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5950,
											"end": 5973,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5669,
											"end": 5980,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5669,
											"end": 5980,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5669,
											"end": 5980,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5669,
											"end": 5980,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 5986,
											"end": 6103,
											"name": "tag",
											"source": 8,
											"value": "247"
										},
										{
											"begin": 5986,
											"end": 6103,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6095,
											"end": 6096,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6092,
											"end": 6093,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6085,
											"end": 6097,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 6126,
											"end": 6836,
											"name": "tag",
											"source": 8,
											"value": "248"
										},
										{
											"begin": 6126,
											"end": 6836,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6222,
											"end": 6227,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6247,
											"end": 6328,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "368"
										},
										{
											"begin": 6263,
											"end": 6327,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "369"
										},
										{
											"begin": 6320,
											"end": 6326,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6263,
											"end": 6327,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "246"
										},
										{
											"begin": 6263,
											"end": 6327,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 6263,
											"end": 6327,
											"name": "tag",
											"source": 8,
											"value": "369"
										},
										{
											"begin": 6263,
											"end": 6327,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6247,
											"end": 6328,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "245"
										},
										{
											"begin": 6247,
											"end": 6328,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 6247,
											"end": 6328,
											"name": "tag",
											"source": 8,
											"value": "368"
										},
										{
											"begin": 6247,
											"end": 6328,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6238,
											"end": 6328,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6238,
											"end": 6328,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6348,
											"end": 6353,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6377,
											"end": 6383,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6370,
											"end": 6375,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6363,
											"end": 6384,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6411,
											"end": 6415,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6404,
											"end": 6409,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6400,
											"end": 6416,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6393,
											"end": 6416,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6393,
											"end": 6416,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6464,
											"end": 6468,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6456,
											"end": 6462,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6452,
											"end": 6469,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 6444,
											"end": 6450,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6440,
											"end": 6470,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6493,
											"end": 6496,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6485,
											"end": 6491,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6482,
											"end": 6497,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 6479,
											"end": 6601,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6479,
											"end": 6601,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "370"
										},
										{
											"begin": 6479,
											"end": 6601,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6512,
											"end": 6591,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "371"
										},
										{
											"begin": 6512,
											"end": 6591,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "247"
										},
										{
											"begin": 6512,
											"end": 6591,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 6512,
											"end": 6591,
											"name": "tag",
											"source": 8,
											"value": "371"
										},
										{
											"begin": 6512,
											"end": 6591,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6479,
											"end": 6601,
											"name": "tag",
											"source": 8,
											"value": "370"
										},
										{
											"begin": 6479,
											"end": 6601,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6627,
											"end": 6633,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6610,
											"end": 6830,
											"name": "tag",
											"source": 8,
											"value": "372"
										},
										{
											"begin": 6610,
											"end": 6830,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6644,
											"end": 6650,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6639,
											"end": 6642,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6636,
											"end": 6651,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 6610,
											"end": 6830,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6610,
											"end": 6830,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "374"
										},
										{
											"begin": 6610,
											"end": 6830,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6719,
											"end": 6722,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6748,
											"end": 6785,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "375"
										},
										{
											"begin": 6781,
											"end": 6784,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 6769,
											"end": 6779,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6748,
											"end": 6785,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 6748,
											"end": 6785,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 6748,
											"end": 6785,
											"name": "tag",
											"source": 8,
											"value": "375"
										},
										{
											"begin": 6748,
											"end": 6785,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6743,
											"end": 6746,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6736,
											"end": 6786,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6815,
											"end": 6819,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6810,
											"end": 6813,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6806,
											"end": 6820,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6799,
											"end": 6820,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 6799,
											"end": 6820,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6686,
											"end": 6830,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6670,
											"end": 6674,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6665,
											"end": 6668,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6661,
											"end": 6675,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6654,
											"end": 6675,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6654,
											"end": 6675,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6610,
											"end": 6830,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "372"
										},
										{
											"begin": 6610,
											"end": 6830,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6610,
											"end": 6830,
											"name": "tag",
											"source": 8,
											"value": "374"
										},
										{
											"begin": 6610,
											"end": 6830,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6614,
											"end": 6635,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6228,
											"end": 6836,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6228,
											"end": 6836,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6126,
											"end": 6836,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 6126,
											"end": 6836,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6126,
											"end": 6836,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6126,
											"end": 6836,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6126,
											"end": 6836,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6126,
											"end": 6836,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 6859,
											"end": 7229,
											"name": "tag",
											"source": 8,
											"value": "249"
										},
										{
											"begin": 6859,
											"end": 7229,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6930,
											"end": 6935,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6979,
											"end": 6982,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6972,
											"end": 6976,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 6964,
											"end": 6970,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6960,
											"end": 6977,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6956,
											"end": 6983,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 6946,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "377"
										},
										{
											"begin": 6946,
											"end": 7068,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6987,
											"end": 7066,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "378"
										},
										{
											"begin": 6987,
											"end": 7066,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "243"
										},
										{
											"begin": 6987,
											"end": 7066,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 6987,
											"end": 7066,
											"name": "tag",
											"source": 8,
											"value": "378"
										},
										{
											"begin": 6987,
											"end": 7066,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6946,
											"end": 7068,
											"name": "tag",
											"source": 8,
											"value": "377"
										},
										{
											"begin": 6946,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7104,
											"end": 7110,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7091,
											"end": 7111,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 7129,
											"end": 7223,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "379"
										},
										{
											"begin": 7219,
											"end": 7222,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7211,
											"end": 7217,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7204,
											"end": 7208,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7196,
											"end": 7202,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 7192,
											"end": 7209,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7129,
											"end": 7223,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "248"
										},
										{
											"begin": 7129,
											"end": 7223,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 7129,
											"end": 7223,
											"name": "tag",
											"source": 8,
											"value": "379"
										},
										{
											"begin": 7129,
											"end": 7223,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7120,
											"end": 7223,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7120,
											"end": 7223,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6936,
											"end": 7229,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6859,
											"end": 7229,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6859,
											"end": 7229,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6859,
											"end": 7229,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6859,
											"end": 7229,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6859,
											"end": 7229,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 7235,
											"end": 7352,
											"name": "tag",
											"source": 8,
											"value": "250"
										},
										{
											"begin": 7235,
											"end": 7352,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7344,
											"end": 7345,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7341,
											"end": 7342,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7334,
											"end": 7346,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 7358,
											"end": 7665,
											"name": "tag",
											"source": 8,
											"value": "251"
										},
										{
											"begin": 7358,
											"end": 7665,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7419,
											"end": 7423,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7509,
											"end": 7527,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7501,
											"end": 7507,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7498,
											"end": 7528,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 7495,
											"end": 7551,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7495,
											"end": 7551,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "382"
										},
										{
											"begin": 7495,
											"end": 7551,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7531,
											"end": 7549,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "383"
										},
										{
											"begin": 7531,
											"end": 7549,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "86"
										},
										{
											"begin": 7531,
											"end": 7549,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 7531,
											"end": 7549,
											"name": "tag",
											"source": 8,
											"value": "383"
										},
										{
											"begin": 7531,
											"end": 7549,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7495,
											"end": 7551,
											"name": "tag",
											"source": 8,
											"value": "382"
										},
										{
											"begin": 7495,
											"end": 7551,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7569,
											"end": 7598,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "384"
										},
										{
											"begin": 7591,
											"end": 7597,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7569,
											"end": 7598,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "241"
										},
										{
											"begin": 7569,
											"end": 7598,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 7569,
											"end": 7598,
											"name": "tag",
											"source": 8,
											"value": "384"
										},
										{
											"begin": 7569,
											"end": 7598,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7561,
											"end": 7598,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7561,
											"end": 7598,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7653,
											"end": 7657,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7647,
											"end": 7651,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7643,
											"end": 7658,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7635,
											"end": 7658,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7635,
											"end": 7658,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7358,
											"end": 7665,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7358,
											"end": 7665,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7358,
											"end": 7665,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7358,
											"end": 7665,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 7671,
											"end": 7825,
											"name": "tag",
											"source": 8,
											"value": "252"
										},
										{
											"begin": 7671,
											"end": 7825,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7755,
											"end": 7761,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7750,
											"end": 7753,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7745,
											"end": 7748,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7732,
											"end": 7762,
											"name": "CALLDATACOPY",
											"source": 8
										},
										{
											"begin": 7817,
											"end": 7818,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7808,
											"end": 7814,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7803,
											"end": 7806,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7799,
											"end": 7815,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7792,
											"end": 7819,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7671,
											"end": 7825,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7671,
											"end": 7825,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7671,
											"end": 7825,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7671,
											"end": 7825,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 7831,
											"end": 8241,
											"name": "tag",
											"source": 8,
											"value": "253"
										},
										{
											"begin": 7831,
											"end": 8241,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7908,
											"end": 7913,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7933,
											"end": 7998,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "387"
										},
										{
											"begin": 7949,
											"end": 7997,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "388"
										},
										{
											"begin": 7990,
											"end": 7996,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7949,
											"end": 7997,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "251"
										},
										{
											"begin": 7949,
											"end": 7997,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 7949,
											"end": 7997,
											"name": "tag",
											"source": 8,
											"value": "388"
										},
										{
											"begin": 7949,
											"end": 7997,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7933,
											"end": 7998,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "245"
										},
										{
											"begin": 7933,
											"end": 7998,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 7933,
											"end": 7998,
											"name": "tag",
											"source": 8,
											"value": "387"
										},
										{
											"begin": 7933,
											"end": 7998,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7924,
											"end": 7998,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7924,
											"end": 7998,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8021,
											"end": 8027,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8014,
											"end": 8019,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8007,
											"end": 8028,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8059,
											"end": 8063,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8052,
											"end": 8057,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8048,
											"end": 8064,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8097,
											"end": 8100,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8088,
											"end": 8094,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8083,
											"end": 8086,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8079,
											"end": 8095,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8076,
											"end": 8101,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 8073,
											"end": 8185,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8073,
											"end": 8185,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "389"
										},
										{
											"begin": 8073,
											"end": 8185,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8104,
											"end": 8183,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "390"
										},
										{
											"begin": 8104,
											"end": 8183,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "250"
										},
										{
											"begin": 8104,
											"end": 8183,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 8104,
											"end": 8183,
											"name": "tag",
											"source": 8,
											"value": "390"
										},
										{
											"begin": 8104,
											"end": 8183,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8073,
											"end": 8185,
											"name": "tag",
											"source": 8,
											"value": "389"
										},
										{
											"begin": 8073,
											"end": 8185,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8194,
											"end": 8235,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "391"
										},
										{
											"begin": 8228,
											"end": 8234,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8223,
											"end": 8226,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8218,
											"end": 8221,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 8194,
											"end": 8235,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "252"
										},
										{
											"begin": 8194,
											"end": 8235,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 8194,
											"end": 8235,
											"name": "tag",
											"source": 8,
											"value": "391"
										},
										{
											"begin": 8194,
											"end": 8235,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7914,
											"end": 8241,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7831,
											"end": 8241,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 7831,
											"end": 8241,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7831,
											"end": 8241,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7831,
											"end": 8241,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7831,
											"end": 8241,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7831,
											"end": 8241,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 8260,
											"end": 8598,
											"name": "tag",
											"source": 8,
											"value": "254"
										},
										{
											"begin": 8260,
											"end": 8598,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8315,
											"end": 8320,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8364,
											"end": 8367,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8357,
											"end": 8361,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 8349,
											"end": 8355,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8345,
											"end": 8362,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8341,
											"end": 8368,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 8331,
											"end": 8453,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "393"
										},
										{
											"begin": 8331,
											"end": 8453,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8372,
											"end": 8451,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "394"
										},
										{
											"begin": 8372,
											"end": 8451,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "243"
										},
										{
											"begin": 8372,
											"end": 8451,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 8372,
											"end": 8451,
											"name": "tag",
											"source": 8,
											"value": "394"
										},
										{
											"begin": 8372,
											"end": 8451,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8331,
											"end": 8453,
											"name": "tag",
											"source": 8,
											"value": "393"
										},
										{
											"begin": 8331,
											"end": 8453,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8489,
											"end": 8495,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8476,
											"end": 8496,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 8514,
											"end": 8592,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "395"
										},
										{
											"begin": 8588,
											"end": 8591,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8580,
											"end": 8586,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8573,
											"end": 8577,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8565,
											"end": 8571,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 8561,
											"end": 8578,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8514,
											"end": 8592,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "253"
										},
										{
											"begin": 8514,
											"end": 8592,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 8514,
											"end": 8592,
											"name": "tag",
											"source": 8,
											"value": "395"
										},
										{
											"begin": 8514,
											"end": 8592,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8505,
											"end": 8592,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8505,
											"end": 8592,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8321,
											"end": 8598,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8260,
											"end": 8598,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8260,
											"end": 8598,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8260,
											"end": 8598,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8260,
											"end": 8598,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8260,
											"end": 8598,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 8604,
											"end": 10113,
											"name": "tag",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 8604,
											"end": 10113,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8758,
											"end": 8764,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8766,
											"end": 8772,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8774,
											"end": 8780,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8782,
											"end": 8788,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8790,
											"end": 8796,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8839,
											"end": 8842,
											"name": "PUSH",
											"source": 8,
											"value": "A0"
										},
										{
											"begin": 8827,
											"end": 8836,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 8818,
											"end": 8825,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 8814,
											"end": 8837,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 8810,
											"end": 8843,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 8807,
											"end": 8927,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8807,
											"end": 8927,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "397"
										},
										{
											"begin": 8807,
											"end": 8927,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8846,
											"end": 8925,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "398"
										},
										{
											"begin": 8846,
											"end": 8925,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "223"
										},
										{
											"begin": 8846,
											"end": 8925,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 8846,
											"end": 8925,
											"name": "tag",
											"source": 8,
											"value": "398"
										},
										{
											"begin": 8846,
											"end": 8925,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8807,
											"end": 8927,
											"name": "tag",
											"source": 8,
											"value": "397"
										},
										{
											"begin": 8807,
											"end": 8927,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8966,
											"end": 8967,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8991,
											"end": 9044,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "399"
										},
										{
											"begin": 9036,
											"end": 9043,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 9027,
											"end": 9033,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9016,
											"end": 9025,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 9012,
											"end": 9034,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8991,
											"end": 9044,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 8991,
											"end": 9044,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 8991,
											"end": 9044,
											"name": "tag",
											"source": 8,
											"value": "399"
										},
										{
											"begin": 8991,
											"end": 9044,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8981,
											"end": 9044,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 8981,
											"end": 9044,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8937,
											"end": 9054,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9093,
											"end": 9095,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9119,
											"end": 9172,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "400"
										},
										{
											"begin": 9164,
											"end": 9171,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 9155,
											"end": 9161,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9144,
											"end": 9153,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 9140,
											"end": 9162,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9119,
											"end": 9172,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 9119,
											"end": 9172,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 9119,
											"end": 9172,
											"name": "tag",
											"source": 8,
											"value": "400"
										},
										{
											"begin": 9119,
											"end": 9172,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9109,
											"end": 9172,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 9109,
											"end": 9172,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9064,
											"end": 9182,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9249,
											"end": 9251,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 9238,
											"end": 9247,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 9234,
											"end": 9252,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9221,
											"end": 9253,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 9280,
											"end": 9298,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9272,
											"end": 9278,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9269,
											"end": 9299,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 9266,
											"end": 9383,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 9266,
											"end": 9383,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "401"
										},
										{
											"begin": 9266,
											"end": 9383,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9302,
											"end": 9381,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "402"
										},
										{
											"begin": 9302,
											"end": 9381,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "224"
										},
										{
											"begin": 9302,
											"end": 9381,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 9302,
											"end": 9381,
											"name": "tag",
											"source": 8,
											"value": "402"
										},
										{
											"begin": 9302,
											"end": 9381,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9266,
											"end": 9383,
											"name": "tag",
											"source": 8,
											"value": "401"
										},
										{
											"begin": 9266,
											"end": 9383,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9407,
											"end": 9485,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "403"
										},
										{
											"begin": 9477,
											"end": 9484,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 9468,
											"end": 9474,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9457,
											"end": 9466,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 9453,
											"end": 9475,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9407,
											"end": 9485,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "249"
										},
										{
											"begin": 9407,
											"end": 9485,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 9407,
											"end": 9485,
											"name": "tag",
											"source": 8,
											"value": "403"
										},
										{
											"begin": 9407,
											"end": 9485,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9397,
											"end": 9485,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 9397,
											"end": 9485,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9192,
											"end": 9495,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9562,
											"end": 9564,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 9551,
											"end": 9560,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 9547,
											"end": 9565,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9534,
											"end": 9566,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 9593,
											"end": 9611,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9585,
											"end": 9591,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9582,
											"end": 9612,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 9579,
											"end": 9696,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 9579,
											"end": 9696,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "404"
										},
										{
											"begin": 9579,
											"end": 9696,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9615,
											"end": 9694,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "405"
										},
										{
											"begin": 9615,
											"end": 9694,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "224"
										},
										{
											"begin": 9615,
											"end": 9694,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 9615,
											"end": 9694,
											"name": "tag",
											"source": 8,
											"value": "405"
										},
										{
											"begin": 9615,
											"end": 9694,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9579,
											"end": 9696,
											"name": "tag",
											"source": 8,
											"value": "404"
										},
										{
											"begin": 9579,
											"end": 9696,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9720,
											"end": 9798,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "406"
										},
										{
											"begin": 9790,
											"end": 9797,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 9781,
											"end": 9787,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9770,
											"end": 9779,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 9766,
											"end": 9788,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9720,
											"end": 9798,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "249"
										},
										{
											"begin": 9720,
											"end": 9798,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 9720,
											"end": 9798,
											"name": "tag",
											"source": 8,
											"value": "406"
										},
										{
											"begin": 9720,
											"end": 9798,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9710,
											"end": 9798,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9710,
											"end": 9798,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9505,
											"end": 9808,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9875,
											"end": 9878,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 9864,
											"end": 9873,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 9860,
											"end": 9879,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9847,
											"end": 9880,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 9907,
											"end": 9925,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9899,
											"end": 9905,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9896,
											"end": 9926,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 9893,
											"end": 10010,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 9893,
											"end": 10010,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "407"
										},
										{
											"begin": 9893,
											"end": 10010,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9929,
											"end": 10008,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "408"
										},
										{
											"begin": 9929,
											"end": 10008,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "224"
										},
										{
											"begin": 9929,
											"end": 10008,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 9929,
											"end": 10008,
											"name": "tag",
											"source": 8,
											"value": "408"
										},
										{
											"begin": 9929,
											"end": 10008,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9893,
											"end": 10010,
											"name": "tag",
											"source": 8,
											"value": "407"
										},
										{
											"begin": 9893,
											"end": 10010,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10034,
											"end": 10096,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "409"
										},
										{
											"begin": 10088,
											"end": 10095,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 10079,
											"end": 10085,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10068,
											"end": 10077,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 10064,
											"end": 10086,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10034,
											"end": 10096,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "254"
										},
										{
											"begin": 10034,
											"end": 10096,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 10034,
											"end": 10096,
											"name": "tag",
											"source": 8,
											"value": "409"
										},
										{
											"begin": 10034,
											"end": 10096,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10024,
											"end": 10096,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10024,
											"end": 10096,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9818,
											"end": 10106,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8604,
											"end": 10113,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8604,
											"end": 10113,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 8604,
											"end": 10113,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8604,
											"end": 10113,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8604,
											"end": 10113,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 8604,
											"end": 10113,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8604,
											"end": 10113,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 8604,
											"end": 10113,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8604,
											"end": 10113,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 10119,
											"end": 10430,
											"name": "tag",
											"source": 8,
											"value": "255"
										},
										{
											"begin": 10119,
											"end": 10430,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10196,
											"end": 10200,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10286,
											"end": 10304,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10278,
											"end": 10284,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10275,
											"end": 10305,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 10272,
											"end": 10328,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 10272,
											"end": 10328,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "411"
										},
										{
											"begin": 10272,
											"end": 10328,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10308,
											"end": 10326,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "412"
										},
										{
											"begin": 10308,
											"end": 10326,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "86"
										},
										{
											"begin": 10308,
											"end": 10326,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 10308,
											"end": 10326,
											"name": "tag",
											"source": 8,
											"value": "412"
										},
										{
											"begin": 10308,
											"end": 10326,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10272,
											"end": 10328,
											"name": "tag",
											"source": 8,
											"value": "411"
										},
										{
											"begin": 10272,
											"end": 10328,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10358,
											"end": 10362,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10350,
											"end": 10356,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10346,
											"end": 10363,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 10338,
											"end": 10363,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10338,
											"end": 10363,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10418,
											"end": 10422,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10412,
											"end": 10416,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10408,
											"end": 10423,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10400,
											"end": 10423,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10400,
											"end": 10423,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10119,
											"end": 10430,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10119,
											"end": 10430,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10119,
											"end": 10430,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10119,
											"end": 10430,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 10453,
											"end": 11163,
											"name": "tag",
											"source": 8,
											"value": "256"
										},
										{
											"begin": 10453,
											"end": 11163,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10549,
											"end": 10554,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10574,
											"end": 10655,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "414"
										},
										{
											"begin": 10590,
											"end": 10654,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "415"
										},
										{
											"begin": 10647,
											"end": 10653,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 10590,
											"end": 10654,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "255"
										},
										{
											"begin": 10590,
											"end": 10654,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 10590,
											"end": 10654,
											"name": "tag",
											"source": 8,
											"value": "415"
										},
										{
											"begin": 10590,
											"end": 10654,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10574,
											"end": 10655,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "245"
										},
										{
											"begin": 10574,
											"end": 10655,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 10574,
											"end": 10655,
											"name": "tag",
											"source": 8,
											"value": "414"
										},
										{
											"begin": 10574,
											"end": 10655,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10565,
											"end": 10655,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10565,
											"end": 10655,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10675,
											"end": 10680,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10704,
											"end": 10710,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10697,
											"end": 10702,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10690,
											"end": 10711,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10738,
											"end": 10742,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10731,
											"end": 10736,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10727,
											"end": 10743,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10720,
											"end": 10743,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10720,
											"end": 10743,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10791,
											"end": 10795,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10783,
											"end": 10789,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 10779,
											"end": 10796,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 10771,
											"end": 10777,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10767,
											"end": 10797,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10820,
											"end": 10823,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 10812,
											"end": 10818,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10809,
											"end": 10824,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 10806,
											"end": 10928,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 10806,
											"end": 10928,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "416"
										},
										{
											"begin": 10806,
											"end": 10928,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10839,
											"end": 10918,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "417"
										},
										{
											"begin": 10839,
											"end": 10918,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "247"
										},
										{
											"begin": 10839,
											"end": 10918,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 10839,
											"end": 10918,
											"name": "tag",
											"source": 8,
											"value": "417"
										},
										{
											"begin": 10839,
											"end": 10918,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10806,
											"end": 10928,
											"name": "tag",
											"source": 8,
											"value": "416"
										},
										{
											"begin": 10806,
											"end": 10928,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10954,
											"end": 10960,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10937,
											"end": 11157,
											"name": "tag",
											"source": 8,
											"value": "418"
										},
										{
											"begin": 10937,
											"end": 11157,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10971,
											"end": 10977,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10966,
											"end": 10969,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10963,
											"end": 10978,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 10937,
											"end": 11157,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 10937,
											"end": 11157,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "420"
										},
										{
											"begin": 10937,
											"end": 11157,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 11046,
											"end": 11049,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 11075,
											"end": 11112,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "421"
										},
										{
											"begin": 11108,
											"end": 11111,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 11096,
											"end": 11106,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11075,
											"end": 11112,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 11075,
											"end": 11112,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 11075,
											"end": 11112,
											"name": "tag",
											"source": 8,
											"value": "421"
										},
										{
											"begin": 11075,
											"end": 11112,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11070,
											"end": 11073,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 11063,
											"end": 11113,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11142,
											"end": 11146,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11137,
											"end": 11140,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 11133,
											"end": 11147,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11126,
											"end": 11147,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 11126,
											"end": 11147,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11013,
											"end": 11157,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10997,
											"end": 11001,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10992,
											"end": 10995,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10988,
											"end": 11002,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10981,
											"end": 11002,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10981,
											"end": 11002,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10937,
											"end": 11157,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "418"
										},
										{
											"begin": 10937,
											"end": 11157,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10937,
											"end": 11157,
											"name": "tag",
											"source": 8,
											"value": "420"
										},
										{
											"begin": 10937,
											"end": 11157,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10941,
											"end": 10962,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10555,
											"end": 11163,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10555,
											"end": 11163,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10453,
											"end": 11163,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 10453,
											"end": 11163,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10453,
											"end": 11163,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10453,
											"end": 11163,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10453,
											"end": 11163,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10453,
											"end": 11163,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 11186,
											"end": 11556,
											"name": "tag",
											"source": 8,
											"value": "257"
										},
										{
											"begin": 11186,
											"end": 11556,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11257,
											"end": 11262,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11306,
											"end": 11309,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11299,
											"end": 11303,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 11291,
											"end": 11297,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11287,
											"end": 11304,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11283,
											"end": 11310,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 11273,
											"end": 11395,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "423"
										},
										{
											"begin": 11273,
											"end": 11395,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 11314,
											"end": 11393,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "424"
										},
										{
											"begin": 11314,
											"end": 11393,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "243"
										},
										{
											"begin": 11314,
											"end": 11393,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 11314,
											"end": 11393,
											"name": "tag",
											"source": 8,
											"value": "424"
										},
										{
											"begin": 11314,
											"end": 11393,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11273,
											"end": 11395,
											"name": "tag",
											"source": 8,
											"value": "423"
										},
										{
											"begin": 11273,
											"end": 11395,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11431,
											"end": 11437,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11418,
											"end": 11438,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 11456,
											"end": 11550,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "425"
										},
										{
											"begin": 11546,
											"end": 11549,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 11538,
											"end": 11544,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11531,
											"end": 11535,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11523,
											"end": 11529,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 11519,
											"end": 11536,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11456,
											"end": 11550,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "256"
										},
										{
											"begin": 11456,
											"end": 11550,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 11456,
											"end": 11550,
											"name": "tag",
											"source": 8,
											"value": "425"
										},
										{
											"begin": 11456,
											"end": 11550,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11447,
											"end": 11550,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11447,
											"end": 11550,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11263,
											"end": 11556,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11186,
											"end": 11556,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 11186,
											"end": 11556,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11186,
											"end": 11556,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11186,
											"end": 11556,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11186,
											"end": 11556,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 11562,
											"end": 12456,
											"name": "tag",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 11562,
											"end": 12456,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11680,
											"end": 11686,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11688,
											"end": 11694,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 11737,
											"end": 11739,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 11725,
											"end": 11734,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11716,
											"end": 11723,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 11712,
											"end": 11735,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 11708,
											"end": 11740,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 11705,
											"end": 11824,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 11705,
											"end": 11824,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "427"
										},
										{
											"begin": 11705,
											"end": 11824,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 11743,
											"end": 11822,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "428"
										},
										{
											"begin": 11743,
											"end": 11822,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "223"
										},
										{
											"begin": 11743,
											"end": 11822,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 11743,
											"end": 11822,
											"name": "tag",
											"source": 8,
											"value": "428"
										},
										{
											"begin": 11743,
											"end": 11822,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11705,
											"end": 11824,
											"name": "tag",
											"source": 8,
											"value": "427"
										},
										{
											"begin": 11705,
											"end": 11824,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11891,
											"end": 11892,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11880,
											"end": 11889,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11876,
											"end": 11893,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11863,
											"end": 11894,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 11921,
											"end": 11939,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11913,
											"end": 11919,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11910,
											"end": 11940,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 11907,
											"end": 12024,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 11907,
											"end": 12024,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "429"
										},
										{
											"begin": 11907,
											"end": 12024,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 11943,
											"end": 12022,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "430"
										},
										{
											"begin": 11943,
											"end": 12022,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "224"
										},
										{
											"begin": 11943,
											"end": 12022,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 11943,
											"end": 12022,
											"name": "tag",
											"source": 8,
											"value": "430"
										},
										{
											"begin": 11943,
											"end": 12022,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11907,
											"end": 12024,
											"name": "tag",
											"source": 8,
											"value": "429"
										},
										{
											"begin": 11907,
											"end": 12024,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12048,
											"end": 12126,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "431"
										},
										{
											"begin": 12118,
											"end": 12125,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 12109,
											"end": 12115,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12098,
											"end": 12107,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 12094,
											"end": 12116,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12048,
											"end": 12126,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "257"
										},
										{
											"begin": 12048,
											"end": 12126,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 12048,
											"end": 12126,
											"name": "tag",
											"source": 8,
											"value": "431"
										},
										{
											"begin": 12048,
											"end": 12126,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12038,
											"end": 12126,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 12038,
											"end": 12126,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11834,
											"end": 12136,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12203,
											"end": 12205,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12192,
											"end": 12201,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12188,
											"end": 12206,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12175,
											"end": 12207,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 12234,
											"end": 12252,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12226,
											"end": 12232,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12223,
											"end": 12253,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 12220,
											"end": 12337,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 12220,
											"end": 12337,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "432"
										},
										{
											"begin": 12220,
											"end": 12337,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 12256,
											"end": 12335,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "433"
										},
										{
											"begin": 12256,
											"end": 12335,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "224"
										},
										{
											"begin": 12256,
											"end": 12335,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 12256,
											"end": 12335,
											"name": "tag",
											"source": 8,
											"value": "433"
										},
										{
											"begin": 12256,
											"end": 12335,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12220,
											"end": 12337,
											"name": "tag",
											"source": 8,
											"value": "432"
										},
										{
											"begin": 12220,
											"end": 12337,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12361,
											"end": 12439,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "434"
										},
										{
											"begin": 12431,
											"end": 12438,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 12422,
											"end": 12428,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12411,
											"end": 12420,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 12407,
											"end": 12429,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12361,
											"end": 12439,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "249"
										},
										{
											"begin": 12361,
											"end": 12439,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 12361,
											"end": 12439,
											"name": "tag",
											"source": 8,
											"value": "434"
										},
										{
											"begin": 12361,
											"end": 12439,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12351,
											"end": 12439,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12351,
											"end": 12439,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12146,
											"end": 12449,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11562,
											"end": 12456,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 11562,
											"end": 12456,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11562,
											"end": 12456,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 11562,
											"end": 12456,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11562,
											"end": 12456,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11562,
											"end": 12456,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 12462,
											"end": 12576,
											"name": "tag",
											"source": 8,
											"value": "258"
										},
										{
											"begin": 12462,
											"end": 12576,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12529,
											"end": 12535,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12563,
											"end": 12568,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12557,
											"end": 12569,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 12547,
											"end": 12569,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12547,
											"end": 12569,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12462,
											"end": 12576,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12462,
											"end": 12576,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12462,
											"end": 12576,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12462,
											"end": 12576,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 12582,
											"end": 12766,
											"name": "tag",
											"source": 8,
											"value": "259"
										},
										{
											"begin": 12582,
											"end": 12766,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12681,
											"end": 12692,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12715,
											"end": 12721,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12710,
											"end": 12713,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12703,
											"end": 12722,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12755,
											"end": 12759,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12750,
											"end": 12753,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12746,
											"end": 12760,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12731,
											"end": 12760,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12731,
											"end": 12760,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12582,
											"end": 12766,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 12582,
											"end": 12766,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12582,
											"end": 12766,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12582,
											"end": 12766,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12582,
											"end": 12766,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 12772,
											"end": 12904,
											"name": "tag",
											"source": 8,
											"value": "260"
										},
										{
											"begin": 12772,
											"end": 12904,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12839,
											"end": 12843,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12862,
											"end": 12865,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12854,
											"end": 12865,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12854,
											"end": 12865,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12892,
											"end": 12896,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12887,
											"end": 12890,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12883,
											"end": 12897,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12875,
											"end": 12897,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12875,
											"end": 12897,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12772,
											"end": 12904,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12772,
											"end": 12904,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12772,
											"end": 12904,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12772,
											"end": 12904,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 12910,
											"end": 13018,
											"name": "tag",
											"source": 8,
											"value": "261"
										},
										{
											"begin": 12910,
											"end": 13018,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12987,
											"end": 13011,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "439"
										},
										{
											"begin": 13005,
											"end": 13010,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12987,
											"end": 13011,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 12987,
											"end": 13011,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 12987,
											"end": 13011,
											"name": "tag",
											"source": 8,
											"value": "439"
										},
										{
											"begin": 12987,
											"end": 13011,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12982,
											"end": 12985,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12975,
											"end": 13012,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12910,
											"end": 13018,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12910,
											"end": 13018,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12910,
											"end": 13018,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 13024,
											"end": 13203,
											"name": "tag",
											"source": 8,
											"value": "262"
										},
										{
											"begin": 13024,
											"end": 13203,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13093,
											"end": 13103,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13114,
											"end": 13160,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "441"
										},
										{
											"begin": 13156,
											"end": 13159,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13148,
											"end": 13154,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13114,
											"end": 13160,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "261"
										},
										{
											"begin": 13114,
											"end": 13160,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 13114,
											"end": 13160,
											"name": "tag",
											"source": 8,
											"value": "441"
										},
										{
											"begin": 13114,
											"end": 13160,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13192,
											"end": 13196,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13187,
											"end": 13190,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13183,
											"end": 13197,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13169,
											"end": 13197,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13169,
											"end": 13197,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13024,
											"end": 13203,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 13024,
											"end": 13203,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13024,
											"end": 13203,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13024,
											"end": 13203,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13024,
											"end": 13203,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 13209,
											"end": 13322,
											"name": "tag",
											"source": 8,
											"value": "263"
										},
										{
											"begin": 13209,
											"end": 13322,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13279,
											"end": 13283,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13311,
											"end": 13315,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13306,
											"end": 13309,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13302,
											"end": 13316,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13294,
											"end": 13316,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13294,
											"end": 13316,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13209,
											"end": 13322,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13209,
											"end": 13322,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13209,
											"end": 13322,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13209,
											"end": 13322,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 13358,
											"end": 14090,
											"name": "tag",
											"source": 8,
											"value": "264"
										},
										{
											"begin": 13358,
											"end": 14090,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13477,
											"end": 13480,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13506,
											"end": 13560,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "444"
										},
										{
											"begin": 13554,
											"end": 13559,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13506,
											"end": 13560,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "258"
										},
										{
											"begin": 13506,
											"end": 13560,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 13506,
											"end": 13560,
											"name": "tag",
											"source": 8,
											"value": "444"
										},
										{
											"begin": 13506,
											"end": 13560,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13576,
											"end": 13662,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "445"
										},
										{
											"begin": 13655,
											"end": 13661,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13650,
											"end": 13653,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 13576,
											"end": 13662,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "259"
										},
										{
											"begin": 13576,
											"end": 13662,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 13576,
											"end": 13662,
											"name": "tag",
											"source": 8,
											"value": "445"
										},
										{
											"begin": 13576,
											"end": 13662,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13569,
											"end": 13662,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 13569,
											"end": 13662,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13686,
											"end": 13742,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "446"
										},
										{
											"begin": 13736,
											"end": 13741,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13686,
											"end": 13742,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "260"
										},
										{
											"begin": 13686,
											"end": 13742,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 13686,
											"end": 13742,
											"name": "tag",
											"source": 8,
											"value": "446"
										},
										{
											"begin": 13686,
											"end": 13742,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13765,
											"end": 13772,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 13796,
											"end": 13797,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13781,
											"end": 14065,
											"name": "tag",
											"source": 8,
											"value": "447"
										},
										{
											"begin": 13781,
											"end": 14065,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13806,
											"end": 13812,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13803,
											"end": 13804,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13800,
											"end": 13813,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 13781,
											"end": 14065,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 13781,
											"end": 14065,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "449"
										},
										{
											"begin": 13781,
											"end": 14065,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 13882,
											"end": 13888,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13876,
											"end": 13889,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 13909,
											"end": 13972,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "450"
										},
										{
											"begin": 13968,
											"end": 13971,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 13953,
											"end": 13966,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13909,
											"end": 13972,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "262"
										},
										{
											"begin": 13909,
											"end": 13972,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 13909,
											"end": 13972,
											"name": "tag",
											"source": 8,
											"value": "450"
										},
										{
											"begin": 13909,
											"end": 13972,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13902,
											"end": 13972,
											"name": "SWAP8",
											"source": 8
										},
										{
											"begin": 13902,
											"end": 13972,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13995,
											"end": 14055,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "451"
										},
										{
											"begin": 14048,
											"end": 14054,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13995,
											"end": 14055,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "263"
										},
										{
											"begin": 13995,
											"end": 14055,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 13995,
											"end": 14055,
											"name": "tag",
											"source": 8,
											"value": "451"
										},
										{
											"begin": 13995,
											"end": 14055,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13985,
											"end": 14055,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 13985,
											"end": 14055,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13841,
											"end": 14065,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13828,
											"end": 13829,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 13825,
											"end": 13826,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13821,
											"end": 13830,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13816,
											"end": 13830,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13816,
											"end": 13830,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13781,
											"end": 14065,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "447"
										},
										{
											"begin": 13781,
											"end": 14065,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13781,
											"end": 14065,
											"name": "tag",
											"source": 8,
											"value": "449"
										},
										{
											"begin": 13781,
											"end": 14065,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13785,
											"end": 13799,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14081,
											"end": 14084,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 14074,
											"end": 14084,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 14074,
											"end": 14084,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13482,
											"end": 14090,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13482,
											"end": 14090,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13482,
											"end": 14090,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13358,
											"end": 14090,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 13358,
											"end": 14090,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13358,
											"end": 14090,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13358,
											"end": 14090,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13358,
											"end": 14090,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 14096,
											"end": 14469,
											"name": "tag",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 14096,
											"end": 14469,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14239,
											"end": 14243,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14277,
											"end": 14279,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 14266,
											"end": 14275,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14262,
											"end": 14280,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14254,
											"end": 14280,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14254,
											"end": 14280,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14326,
											"end": 14335,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14320,
											"end": 14324,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14316,
											"end": 14336,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 14312,
											"end": 14313,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14301,
											"end": 14310,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14297,
											"end": 14314,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14290,
											"end": 14337,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14354,
											"end": 14462,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "453"
										},
										{
											"begin": 14457,
											"end": 14461,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14448,
											"end": 14454,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 14354,
											"end": 14462,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "264"
										},
										{
											"begin": 14354,
											"end": 14462,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 14354,
											"end": 14462,
											"name": "tag",
											"source": 8,
											"value": "453"
										},
										{
											"begin": 14354,
											"end": 14462,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14346,
											"end": 14462,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14346,
											"end": 14462,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14096,
											"end": 14469,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 14096,
											"end": 14469,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14096,
											"end": 14469,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14096,
											"end": 14469,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14096,
											"end": 14469,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 14475,
											"end": 14591,
											"name": "tag",
											"source": 8,
											"value": "265"
										},
										{
											"begin": 14475,
											"end": 14591,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14545,
											"end": 14566,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "455"
										},
										{
											"begin": 14560,
											"end": 14565,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14545,
											"end": 14566,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "236"
										},
										{
											"begin": 14545,
											"end": 14566,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 14545,
											"end": 14566,
											"name": "tag",
											"source": 8,
											"value": "455"
										},
										{
											"begin": 14545,
											"end": 14566,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14538,
											"end": 14543,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14535,
											"end": 14567,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 14525,
											"end": 14585,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "456"
										},
										{
											"begin": 14525,
											"end": 14585,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 14581,
											"end": 14582,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14578,
											"end": 14579,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 14571,
											"end": 14583,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 14525,
											"end": 14585,
											"name": "tag",
											"source": 8,
											"value": "456"
										},
										{
											"begin": 14525,
											"end": 14585,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14475,
											"end": 14591,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14475,
											"end": 14591,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 14597,
											"end": 14730,
											"name": "tag",
											"source": 8,
											"value": "266"
										},
										{
											"begin": 14597,
											"end": 14730,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14640,
											"end": 14645,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14678,
											"end": 14684,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14665,
											"end": 14685,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 14656,
											"end": 14685,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14656,
											"end": 14685,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14694,
											"end": 14724,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "458"
										},
										{
											"begin": 14718,
											"end": 14723,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14694,
											"end": 14724,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "265"
										},
										{
											"begin": 14694,
											"end": 14724,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 14694,
											"end": 14724,
											"name": "tag",
											"source": 8,
											"value": "458"
										},
										{
											"begin": 14694,
											"end": 14724,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14597,
											"end": 14730,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 14597,
											"end": 14730,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14597,
											"end": 14730,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14597,
											"end": 14730,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14597,
											"end": 14730,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 14736,
											"end": 15204,
											"name": "tag",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 14736,
											"end": 15204,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14801,
											"end": 14807,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14809,
											"end": 14815,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 14858,
											"end": 14860,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 14846,
											"end": 14855,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14837,
											"end": 14844,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 14833,
											"end": 14856,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 14829,
											"end": 14861,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 14826,
											"end": 14945,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 14826,
											"end": 14945,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "460"
										},
										{
											"begin": 14826,
											"end": 14945,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 14864,
											"end": 14943,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "461"
										},
										{
											"begin": 14864,
											"end": 14943,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "223"
										},
										{
											"begin": 14864,
											"end": 14943,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 14864,
											"end": 14943,
											"name": "tag",
											"source": 8,
											"value": "461"
										},
										{
											"begin": 14864,
											"end": 14943,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14826,
											"end": 14945,
											"name": "tag",
											"source": 8,
											"value": "460"
										},
										{
											"begin": 14826,
											"end": 14945,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14984,
											"end": 14985,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15009,
											"end": 15062,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "462"
										},
										{
											"begin": 15054,
											"end": 15061,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 15045,
											"end": 15051,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15034,
											"end": 15043,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 15030,
											"end": 15052,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15009,
											"end": 15062,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 15009,
											"end": 15062,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 15009,
											"end": 15062,
											"name": "tag",
											"source": 8,
											"value": "462"
										},
										{
											"begin": 15009,
											"end": 15062,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14999,
											"end": 15062,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 14999,
											"end": 15062,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14955,
											"end": 15072,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15111,
											"end": 15113,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 15137,
											"end": 15187,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "463"
										},
										{
											"begin": 15179,
											"end": 15186,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 15170,
											"end": 15176,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15159,
											"end": 15168,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 15155,
											"end": 15177,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15137,
											"end": 15187,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "266"
										},
										{
											"begin": 15137,
											"end": 15187,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 15137,
											"end": 15187,
											"name": "tag",
											"source": 8,
											"value": "463"
										},
										{
											"begin": 15137,
											"end": 15187,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15127,
											"end": 15187,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15127,
											"end": 15187,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15082,
											"end": 15197,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14736,
											"end": 15204,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 14736,
											"end": 15204,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14736,
											"end": 15204,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 14736,
											"end": 15204,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14736,
											"end": 15204,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14736,
											"end": 15204,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 15210,
											"end": 15684,
											"name": "tag",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 15210,
											"end": 15684,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15278,
											"end": 15284,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15286,
											"end": 15292,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 15335,
											"end": 15337,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 15323,
											"end": 15332,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 15314,
											"end": 15321,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 15310,
											"end": 15333,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 15306,
											"end": 15338,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 15303,
											"end": 15422,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 15303,
											"end": 15422,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "465"
										},
										{
											"begin": 15303,
											"end": 15422,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 15341,
											"end": 15420,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "466"
										},
										{
											"begin": 15341,
											"end": 15420,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "223"
										},
										{
											"begin": 15341,
											"end": 15420,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 15341,
											"end": 15420,
											"name": "tag",
											"source": 8,
											"value": "466"
										},
										{
											"begin": 15341,
											"end": 15420,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15303,
											"end": 15422,
											"name": "tag",
											"source": 8,
											"value": "465"
										},
										{
											"begin": 15303,
											"end": 15422,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15461,
											"end": 15462,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15486,
											"end": 15539,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "467"
										},
										{
											"begin": 15531,
											"end": 15538,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 15522,
											"end": 15528,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15511,
											"end": 15520,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 15507,
											"end": 15529,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15486,
											"end": 15539,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 15486,
											"end": 15539,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 15486,
											"end": 15539,
											"name": "tag",
											"source": 8,
											"value": "467"
										},
										{
											"begin": 15486,
											"end": 15539,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15476,
											"end": 15539,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 15476,
											"end": 15539,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15432,
											"end": 15549,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15588,
											"end": 15590,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 15614,
											"end": 15667,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "468"
										},
										{
											"begin": 15659,
											"end": 15666,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 15650,
											"end": 15656,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15639,
											"end": 15648,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 15635,
											"end": 15657,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15614,
											"end": 15667,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 15614,
											"end": 15667,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 15614,
											"end": 15667,
											"name": "tag",
											"source": 8,
											"value": "468"
										},
										{
											"begin": 15614,
											"end": 15667,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15604,
											"end": 15667,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15604,
											"end": 15667,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15559,
											"end": 15677,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15210,
											"end": 15684,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 15210,
											"end": 15684,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15210,
											"end": 15684,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 15210,
											"end": 15684,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15210,
											"end": 15684,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15210,
											"end": 15684,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 15690,
											"end": 16779,
											"name": "tag",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 15690,
											"end": 16779,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15794,
											"end": 15800,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15802,
											"end": 15808,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 15810,
											"end": 15816,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15818,
											"end": 15824,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 15826,
											"end": 15832,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15875,
											"end": 15878,
											"name": "PUSH",
											"source": 8,
											"value": "A0"
										},
										{
											"begin": 15863,
											"end": 15872,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 15854,
											"end": 15861,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 15850,
											"end": 15873,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 15846,
											"end": 15879,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 15843,
											"end": 15963,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 15843,
											"end": 15963,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "470"
										},
										{
											"begin": 15843,
											"end": 15963,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 15882,
											"end": 15961,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "471"
										},
										{
											"begin": 15882,
											"end": 15961,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "223"
										},
										{
											"begin": 15882,
											"end": 15961,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 15882,
											"end": 15961,
											"name": "tag",
											"source": 8,
											"value": "471"
										},
										{
											"begin": 15882,
											"end": 15961,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15843,
											"end": 15963,
											"name": "tag",
											"source": 8,
											"value": "470"
										},
										{
											"begin": 15843,
											"end": 15963,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16002,
											"end": 16003,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16027,
											"end": 16080,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "472"
										},
										{
											"begin": 16072,
											"end": 16079,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 16063,
											"end": 16069,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16052,
											"end": 16061,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 16048,
											"end": 16070,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16027,
											"end": 16080,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 16027,
											"end": 16080,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 16027,
											"end": 16080,
											"name": "tag",
											"source": 8,
											"value": "472"
										},
										{
											"begin": 16027,
											"end": 16080,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16017,
											"end": 16080,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 16017,
											"end": 16080,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15973,
											"end": 16090,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16129,
											"end": 16131,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 16155,
											"end": 16208,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "473"
										},
										{
											"begin": 16200,
											"end": 16207,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 16191,
											"end": 16197,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16180,
											"end": 16189,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 16176,
											"end": 16198,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16155,
											"end": 16208,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 16155,
											"end": 16208,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 16155,
											"end": 16208,
											"name": "tag",
											"source": 8,
											"value": "473"
										},
										{
											"begin": 16155,
											"end": 16208,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16145,
											"end": 16208,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 16145,
											"end": 16208,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16100,
											"end": 16218,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16257,
											"end": 16259,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 16283,
											"end": 16336,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "474"
										},
										{
											"begin": 16328,
											"end": 16335,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 16319,
											"end": 16325,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16308,
											"end": 16317,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 16304,
											"end": 16326,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16283,
											"end": 16336,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 16283,
											"end": 16336,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 16283,
											"end": 16336,
											"name": "tag",
											"source": 8,
											"value": "474"
										},
										{
											"begin": 16283,
											"end": 16336,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16273,
											"end": 16336,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 16273,
											"end": 16336,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16228,
											"end": 16346,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16385,
											"end": 16387,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 16411,
											"end": 16464,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "475"
										},
										{
											"begin": 16456,
											"end": 16463,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 16447,
											"end": 16453,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16436,
											"end": 16445,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 16432,
											"end": 16454,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16411,
											"end": 16464,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 16411,
											"end": 16464,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 16411,
											"end": 16464,
											"name": "tag",
											"source": 8,
											"value": "475"
										},
										{
											"begin": 16411,
											"end": 16464,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16401,
											"end": 16464,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 16401,
											"end": 16464,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16356,
											"end": 16474,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16541,
											"end": 16544,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 16530,
											"end": 16539,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 16526,
											"end": 16545,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16513,
											"end": 16546,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 16573,
											"end": 16591,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16565,
											"end": 16571,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16562,
											"end": 16592,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 16559,
											"end": 16676,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 16559,
											"end": 16676,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "476"
										},
										{
											"begin": 16559,
											"end": 16676,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 16595,
											"end": 16674,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "477"
										},
										{
											"begin": 16595,
											"end": 16674,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "224"
										},
										{
											"begin": 16595,
											"end": 16674,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 16595,
											"end": 16674,
											"name": "tag",
											"source": 8,
											"value": "477"
										},
										{
											"begin": 16595,
											"end": 16674,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16559,
											"end": 16676,
											"name": "tag",
											"source": 8,
											"value": "476"
										},
										{
											"begin": 16559,
											"end": 16676,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16700,
											"end": 16762,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "478"
										},
										{
											"begin": 16754,
											"end": 16761,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 16745,
											"end": 16751,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16734,
											"end": 16743,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 16730,
											"end": 16752,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16700,
											"end": 16762,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "254"
										},
										{
											"begin": 16700,
											"end": 16762,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 16700,
											"end": 16762,
											"name": "tag",
											"source": 8,
											"value": "478"
										},
										{
											"begin": 16700,
											"end": 16762,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16690,
											"end": 16762,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16690,
											"end": 16762,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16484,
											"end": 16772,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15690,
											"end": 16779,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 15690,
											"end": 16779,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 15690,
											"end": 16779,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15690,
											"end": 16779,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 15690,
											"end": 16779,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 15690,
											"end": 16779,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15690,
											"end": 16779,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 15690,
											"end": 16779,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15690,
											"end": 16779,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 16785,
											"end": 17014,
											"name": "tag",
											"source": 8,
											"value": "267"
										},
										{
											"begin": 16785,
											"end": 17014,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16925,
											"end": 16959,
											"name": "PUSH",
											"source": 8,
											"value": "455243313135353A2061646472657373207A65726F206973206E6F7420612076"
										},
										{
											"begin": 16921,
											"end": 16922,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16913,
											"end": 16919,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16909,
											"end": 16923,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16902,
											"end": 16960,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 16994,
											"end": 17006,
											"name": "PUSH",
											"source": 8,
											"value": "616C6964206F776E657200000000000000000000000000000000000000000000"
										},
										{
											"begin": 16989,
											"end": 16991,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 16981,
											"end": 16987,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16977,
											"end": 16992,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16970,
											"end": 17007,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 16785,
											"end": 17014,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16785,
											"end": 17014,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 17020,
											"end": 17386,
											"name": "tag",
											"source": 8,
											"value": "268"
										},
										{
											"begin": 17020,
											"end": 17386,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17162,
											"end": 17165,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17183,
											"end": 17250,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "481"
										},
										{
											"begin": 17247,
											"end": 17249,
											"name": "PUSH",
											"source": 8,
											"value": "2A"
										},
										{
											"begin": 17242,
											"end": 17245,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 17183,
											"end": 17250,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 17183,
											"end": 17250,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 17183,
											"end": 17250,
											"name": "tag",
											"source": 8,
											"value": "481"
										},
										{
											"begin": 17183,
											"end": 17250,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17176,
											"end": 17250,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 17176,
											"end": 17250,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17259,
											"end": 17352,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "482"
										},
										{
											"begin": 17348,
											"end": 17351,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17259,
											"end": 17352,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "267"
										},
										{
											"begin": 17259,
											"end": 17352,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 17259,
											"end": 17352,
											"name": "tag",
											"source": 8,
											"value": "482"
										},
										{
											"begin": 17259,
											"end": 17352,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17377,
											"end": 17379,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 17372,
											"end": 17375,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17368,
											"end": 17380,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17361,
											"end": 17380,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17361,
											"end": 17380,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17020,
											"end": 17386,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 17020,
											"end": 17386,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17020,
											"end": 17386,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17020,
											"end": 17386,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 17392,
											"end": 17811,
											"name": "tag",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 17392,
											"end": 17811,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17558,
											"end": 17562,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17596,
											"end": 17598,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 17585,
											"end": 17594,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17581,
											"end": 17599,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17573,
											"end": 17599,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17573,
											"end": 17599,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17645,
											"end": 17654,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17639,
											"end": 17643,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17635,
											"end": 17655,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 17631,
											"end": 17632,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17620,
											"end": 17629,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 17616,
											"end": 17633,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17609,
											"end": 17656,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 17673,
											"end": 17804,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "484"
										},
										{
											"begin": 17799,
											"end": 17803,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17673,
											"end": 17804,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "268"
										},
										{
											"begin": 17673,
											"end": 17804,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 17673,
											"end": 17804,
											"name": "tag",
											"source": 8,
											"value": "484"
										},
										{
											"begin": 17673,
											"end": 17804,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17665,
											"end": 17804,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17665,
											"end": 17804,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17392,
											"end": 17811,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 17392,
											"end": 17811,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17392,
											"end": 17811,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17392,
											"end": 17811,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 17817,
											"end": 17997,
											"name": "tag",
											"source": 8,
											"value": "269"
										},
										{
											"begin": 17817,
											"end": 17997,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17865,
											"end": 17942,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17862,
											"end": 17863,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17855,
											"end": 17943,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 17962,
											"end": 17966,
											"name": "PUSH",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 17959,
											"end": 17960,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 17952,
											"end": 17967,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 17986,
											"end": 17990,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 17983,
											"end": 17984,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17976,
											"end": 17991,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 18003,
											"end": 18323,
											"name": "tag",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 18003,
											"end": 18323,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18047,
											"end": 18053,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18084,
											"end": 18085,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 18078,
											"end": 18082,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18074,
											"end": 18086,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 18064,
											"end": 18086,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18064,
											"end": 18086,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18131,
											"end": 18132,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 18125,
											"end": 18129,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18121,
											"end": 18133,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 18152,
											"end": 18170,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 18142,
											"end": 18223,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "487"
										},
										{
											"begin": 18142,
											"end": 18223,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 18208,
											"end": 18212,
											"name": "PUSH",
											"source": 8,
											"value": "7F"
										},
										{
											"begin": 18200,
											"end": 18206,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18196,
											"end": 18213,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 18186,
											"end": 18213,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 18186,
											"end": 18213,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18142,
											"end": 18223,
											"name": "tag",
											"source": 8,
											"value": "487"
										},
										{
											"begin": 18142,
											"end": 18223,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18270,
											"end": 18272,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 18262,
											"end": 18268,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18259,
											"end": 18273,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 18239,
											"end": 18257,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18236,
											"end": 18274,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 18233,
											"end": 18317,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 18233,
											"end": 18317,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "488"
										},
										{
											"begin": 18233,
											"end": 18317,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 18289,
											"end": 18307,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "489"
										},
										{
											"begin": 18289,
											"end": 18307,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "269"
										},
										{
											"begin": 18289,
											"end": 18307,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 18289,
											"end": 18307,
											"name": "tag",
											"source": 8,
											"value": "489"
										},
										{
											"begin": 18289,
											"end": 18307,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18233,
											"end": 18317,
											"name": "tag",
											"source": 8,
											"value": "488"
										},
										{
											"begin": 18233,
											"end": 18317,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18054,
											"end": 18323,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18003,
											"end": 18323,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 18003,
											"end": 18323,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18003,
											"end": 18323,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18003,
											"end": 18323,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 18329,
											"end": 18562,
											"name": "tag",
											"source": 8,
											"value": "270"
										},
										{
											"begin": 18329,
											"end": 18562,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18469,
											"end": 18503,
											"name": "PUSH",
											"source": 8,
											"value": "455243313135353A2063616C6C6572206973206E6F7420746F6B656E206F776E"
										},
										{
											"begin": 18465,
											"end": 18466,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18457,
											"end": 18463,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18453,
											"end": 18467,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18446,
											"end": 18504,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 18538,
											"end": 18554,
											"name": "PUSH",
											"source": 8,
											"value": "6572206F7220617070726F766564000000000000000000000000000000000000"
										},
										{
											"begin": 18533,
											"end": 18535,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 18525,
											"end": 18531,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18521,
											"end": 18536,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18514,
											"end": 18555,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 18329,
											"end": 18562,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18329,
											"end": 18562,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 18568,
											"end": 18934,
											"name": "tag",
											"source": 8,
											"value": "271"
										},
										{
											"begin": 18568,
											"end": 18934,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18710,
											"end": 18713,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18731,
											"end": 18798,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "492"
										},
										{
											"begin": 18795,
											"end": 18797,
											"name": "PUSH",
											"source": 8,
											"value": "2E"
										},
										{
											"begin": 18790,
											"end": 18793,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 18731,
											"end": 18798,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 18731,
											"end": 18798,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 18731,
											"end": 18798,
											"name": "tag",
											"source": 8,
											"value": "492"
										},
										{
											"begin": 18731,
											"end": 18798,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18724,
											"end": 18798,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 18724,
											"end": 18798,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18807,
											"end": 18900,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "493"
										},
										{
											"begin": 18896,
											"end": 18899,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18807,
											"end": 18900,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "270"
										},
										{
											"begin": 18807,
											"end": 18900,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 18807,
											"end": 18900,
											"name": "tag",
											"source": 8,
											"value": "493"
										},
										{
											"begin": 18807,
											"end": 18900,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18925,
											"end": 18927,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 18920,
											"end": 18923,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18916,
											"end": 18928,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18909,
											"end": 18928,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18909,
											"end": 18928,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18568,
											"end": 18934,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 18568,
											"end": 18934,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18568,
											"end": 18934,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18568,
											"end": 18934,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 18940,
											"end": 19359,
											"name": "tag",
											"source": 8,
											"value": "77"
										},
										{
											"begin": 18940,
											"end": 19359,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19106,
											"end": 19110,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19144,
											"end": 19146,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 19133,
											"end": 19142,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19129,
											"end": 19147,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19121,
											"end": 19147,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19121,
											"end": 19147,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19193,
											"end": 19202,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 19187,
											"end": 19191,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 19183,
											"end": 19203,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 19179,
											"end": 19180,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19168,
											"end": 19177,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 19164,
											"end": 19181,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19157,
											"end": 19204,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 19221,
											"end": 19352,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "495"
										},
										{
											"begin": 19347,
											"end": 19351,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 19221,
											"end": 19352,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "271"
										},
										{
											"begin": 19221,
											"end": 19352,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 19221,
											"end": 19352,
											"name": "tag",
											"source": 8,
											"value": "495"
										},
										{
											"begin": 19221,
											"end": 19352,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19213,
											"end": 19352,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19213,
											"end": 19352,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18940,
											"end": 19359,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 18940,
											"end": 19359,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18940,
											"end": 19359,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18940,
											"end": 19359,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 19365,
											"end": 19593,
											"name": "tag",
											"source": 8,
											"value": "272"
										},
										{
											"begin": 19365,
											"end": 19593,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19505,
											"end": 19539,
											"name": "PUSH",
											"source": 8,
											"value": "455243313135353A206163636F756E747320616E6420696473206C656E677468"
										},
										{
											"begin": 19501,
											"end": 19502,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19493,
											"end": 19499,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19489,
											"end": 19503,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19482,
											"end": 19540,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 19574,
											"end": 19585,
											"name": "PUSH",
											"source": 8,
											"value": "206D69736D617463680000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19569,
											"end": 19571,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 19561,
											"end": 19567,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19557,
											"end": 19572,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19550,
											"end": 19586,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 19365,
											"end": 19593,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19365,
											"end": 19593,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 19599,
											"end": 19965,
											"name": "tag",
											"source": 8,
											"value": "273"
										},
										{
											"begin": 19599,
											"end": 19965,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19741,
											"end": 19744,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19762,
											"end": 19829,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "498"
										},
										{
											"begin": 19826,
											"end": 19828,
											"name": "PUSH",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 19821,
											"end": 19824,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 19762,
											"end": 19829,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 19762,
											"end": 19829,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 19762,
											"end": 19829,
											"name": "tag",
											"source": 8,
											"value": "498"
										},
										{
											"begin": 19762,
											"end": 19829,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19755,
											"end": 19829,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 19755,
											"end": 19829,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19838,
											"end": 19931,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "499"
										},
										{
											"begin": 19927,
											"end": 19930,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19838,
											"end": 19931,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "272"
										},
										{
											"begin": 19838,
											"end": 19931,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 19838,
											"end": 19931,
											"name": "tag",
											"source": 8,
											"value": "499"
										},
										{
											"begin": 19838,
											"end": 19931,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19956,
											"end": 19958,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 19951,
											"end": 19954,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19947,
											"end": 19959,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19940,
											"end": 19959,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19940,
											"end": 19959,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19599,
											"end": 19965,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 19599,
											"end": 19965,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19599,
											"end": 19965,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19599,
											"end": 19965,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 19971,
											"end": 20390,
											"name": "tag",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 19971,
											"end": 20390,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20137,
											"end": 20141,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20175,
											"end": 20177,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 20164,
											"end": 20173,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20160,
											"end": 20178,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 20152,
											"end": 20178,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20152,
											"end": 20178,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20224,
											"end": 20233,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 20218,
											"end": 20222,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 20214,
											"end": 20234,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 20210,
											"end": 20211,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20199,
											"end": 20208,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 20195,
											"end": 20212,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 20188,
											"end": 20235,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 20252,
											"end": 20383,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "501"
										},
										{
											"begin": 20378,
											"end": 20382,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 20252,
											"end": 20383,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "273"
										},
										{
											"begin": 20252,
											"end": 20383,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 20252,
											"end": 20383,
											"name": "tag",
											"source": 8,
											"value": "501"
										},
										{
											"begin": 20252,
											"end": 20383,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20244,
											"end": 20383,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20244,
											"end": 20383,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19971,
											"end": 20390,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 19971,
											"end": 20390,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19971,
											"end": 20390,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19971,
											"end": 20390,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 20396,
											"end": 20576,
											"name": "tag",
											"source": 8,
											"value": "94"
										},
										{
											"begin": 20396,
											"end": 20576,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20444,
											"end": 20521,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20441,
											"end": 20442,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20434,
											"end": 20522,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 20541,
											"end": 20545,
											"name": "PUSH",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 20538,
											"end": 20539,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 20531,
											"end": 20546,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 20565,
											"end": 20569,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 20562,
											"end": 20563,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20555,
											"end": 20570,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 20582,
											"end": 20762,
											"name": "tag",
											"source": 8,
											"value": "274"
										},
										{
											"begin": 20582,
											"end": 20762,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20630,
											"end": 20707,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20627,
											"end": 20628,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20620,
											"end": 20708,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 20727,
											"end": 20731,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 20724,
											"end": 20725,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 20717,
											"end": 20732,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 20751,
											"end": 20755,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 20748,
											"end": 20749,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20741,
											"end": 20756,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 20768,
											"end": 21001,
											"name": "tag",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 20768,
											"end": 21001,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20807,
											"end": 20810,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20830,
											"end": 20854,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "505"
										},
										{
											"begin": 20848,
											"end": 20853,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20830,
											"end": 20854,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 20830,
											"end": 20854,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 20830,
											"end": 20854,
											"name": "tag",
											"source": 8,
											"value": "505"
										},
										{
											"begin": 20830,
											"end": 20854,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20821,
											"end": 20854,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 20821,
											"end": 20854,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20876,
											"end": 20942,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20869,
											"end": 20874,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20866,
											"end": 20943,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 20863,
											"end": 20966,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 20863,
											"end": 20966,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "506"
										},
										{
											"begin": 20863,
											"end": 20966,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 20946,
											"end": 20964,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "507"
										},
										{
											"begin": 20946,
											"end": 20964,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "274"
										},
										{
											"begin": 20946,
											"end": 20964,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 20946,
											"end": 20964,
											"name": "tag",
											"source": 8,
											"value": "507"
										},
										{
											"begin": 20946,
											"end": 20964,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20863,
											"end": 20966,
											"name": "tag",
											"source": 8,
											"value": "506"
										},
										{
											"begin": 20863,
											"end": 20966,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20993,
											"end": 20994,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 20986,
											"end": 20991,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20982,
											"end": 20995,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 20975,
											"end": 20995,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20975,
											"end": 20995,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20768,
											"end": 21001,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 20768,
											"end": 21001,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20768,
											"end": 21001,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20768,
											"end": 21001,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 21007,
											"end": 21234,
											"name": "tag",
											"source": 8,
											"value": "275"
										},
										{
											"begin": 21007,
											"end": 21234,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21147,
											"end": 21181,
											"name": "PUSH",
											"source": 8,
											"value": "455243313135353A2069647320616E6420616D6F756E7473206C656E67746820"
										},
										{
											"begin": 21143,
											"end": 21144,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 21135,
											"end": 21141,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21131,
											"end": 21145,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21124,
											"end": 21182,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 21216,
											"end": 21226,
											"name": "PUSH",
											"source": 8,
											"value": "6D69736D61746368000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21211,
											"end": 21213,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 21203,
											"end": 21209,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21199,
											"end": 21214,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21192,
											"end": 21227,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 21007,
											"end": 21234,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21007,
											"end": 21234,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 21240,
											"end": 21606,
											"name": "tag",
											"source": 8,
											"value": "276"
										},
										{
											"begin": 21240,
											"end": 21606,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21382,
											"end": 21385,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 21403,
											"end": 21470,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "510"
										},
										{
											"begin": 21467,
											"end": 21469,
											"name": "PUSH",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 21462,
											"end": 21465,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 21403,
											"end": 21470,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 21403,
											"end": 21470,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 21403,
											"end": 21470,
											"name": "tag",
											"source": 8,
											"value": "510"
										},
										{
											"begin": 21403,
											"end": 21470,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21396,
											"end": 21470,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 21396,
											"end": 21470,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21479,
											"end": 21572,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "511"
										},
										{
											"begin": 21568,
											"end": 21571,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21479,
											"end": 21572,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "275"
										},
										{
											"begin": 21479,
											"end": 21572,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 21479,
											"end": 21572,
											"name": "tag",
											"source": 8,
											"value": "511"
										},
										{
											"begin": 21479,
											"end": 21572,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21597,
											"end": 21599,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 21592,
											"end": 21595,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21588,
											"end": 21600,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21581,
											"end": 21600,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 21581,
											"end": 21600,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21240,
											"end": 21606,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 21240,
											"end": 21606,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 21240,
											"end": 21606,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21240,
											"end": 21606,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 21612,
											"end": 22031,
											"name": "tag",
											"source": 8,
											"value": "120"
										},
										{
											"begin": 21612,
											"end": 22031,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21778,
											"end": 21782,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 21816,
											"end": 21818,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 21805,
											"end": 21814,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21801,
											"end": 21819,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21793,
											"end": 21819,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 21793,
											"end": 21819,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21865,
											"end": 21874,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 21859,
											"end": 21863,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 21855,
											"end": 21875,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 21851,
											"end": 21852,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 21840,
											"end": 21849,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 21836,
											"end": 21853,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21829,
											"end": 21876,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 21893,
											"end": 22024,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "513"
										},
										{
											"begin": 22019,
											"end": 22023,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 21893,
											"end": 22024,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "276"
										},
										{
											"begin": 21893,
											"end": 22024,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 21893,
											"end": 22024,
											"name": "tag",
											"source": 8,
											"value": "513"
										},
										{
											"begin": 21893,
											"end": 22024,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21885,
											"end": 22024,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 21885,
											"end": 22024,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21612,
											"end": 22031,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 21612,
											"end": 22031,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 21612,
											"end": 22031,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21612,
											"end": 22031,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 22037,
											"end": 22261,
											"name": "tag",
											"source": 8,
											"value": "277"
										},
										{
											"begin": 22037,
											"end": 22261,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22177,
											"end": 22211,
											"name": "PUSH",
											"source": 8,
											"value": "455243313135353A207472616E7366657220746F20746865207A65726F206164"
										},
										{
											"begin": 22173,
											"end": 22174,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 22165,
											"end": 22171,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 22161,
											"end": 22175,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 22154,
											"end": 22212,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 22246,
											"end": 22253,
											"name": "PUSH",
											"source": 8,
											"value": "6472657373000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22241,
											"end": 22243,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 22233,
											"end": 22239,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 22229,
											"end": 22244,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 22222,
											"end": 22254,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 22037,
											"end": 22261,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22037,
											"end": 22261,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 22267,
											"end": 22633,
											"name": "tag",
											"source": 8,
											"value": "278"
										},
										{
											"begin": 22267,
											"end": 22633,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22409,
											"end": 22412,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 22430,
											"end": 22497,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "516"
										},
										{
											"begin": 22494,
											"end": 22496,
											"name": "PUSH",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 22489,
											"end": 22492,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 22430,
											"end": 22497,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 22430,
											"end": 22497,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 22430,
											"end": 22497,
											"name": "tag",
											"source": 8,
											"value": "516"
										},
										{
											"begin": 22430,
											"end": 22497,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22423,
											"end": 22497,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 22423,
											"end": 22497,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22506,
											"end": 22599,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "517"
										},
										{
											"begin": 22595,
											"end": 22598,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 22506,
											"end": 22599,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "277"
										},
										{
											"begin": 22506,
											"end": 22599,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 22506,
											"end": 22599,
											"name": "tag",
											"source": 8,
											"value": "517"
										},
										{
											"begin": 22506,
											"end": 22599,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22624,
											"end": 22626,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 22619,
											"end": 22622,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 22615,
											"end": 22627,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 22608,
											"end": 22627,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 22608,
											"end": 22627,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22267,
											"end": 22633,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 22267,
											"end": 22633,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 22267,
											"end": 22633,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22267,
											"end": 22633,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 22639,
											"end": 23058,
											"name": "tag",
											"source": 8,
											"value": "123"
										},
										{
											"begin": 22639,
											"end": 23058,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22805,
											"end": 22809,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 22843,
											"end": 22845,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 22832,
											"end": 22841,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 22828,
											"end": 22846,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 22820,
											"end": 22846,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 22820,
											"end": 22846,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22892,
											"end": 22901,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 22886,
											"end": 22890,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 22882,
											"end": 22902,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 22878,
											"end": 22879,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 22867,
											"end": 22876,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 22863,
											"end": 22880,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 22856,
											"end": 22903,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 22920,
											"end": 23051,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "519"
										},
										{
											"begin": 23046,
											"end": 23050,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 22920,
											"end": 23051,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "278"
										},
										{
											"begin": 22920,
											"end": 23051,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 22920,
											"end": 23051,
											"name": "tag",
											"source": 8,
											"value": "519"
										},
										{
											"begin": 22920,
											"end": 23051,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22912,
											"end": 23051,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 22912,
											"end": 23051,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22639,
											"end": 23058,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 22639,
											"end": 23058,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 22639,
											"end": 23058,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22639,
											"end": 23058,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 23064,
											"end": 23293,
											"name": "tag",
											"source": 8,
											"value": "279"
										},
										{
											"begin": 23064,
											"end": 23293,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23204,
											"end": 23238,
											"name": "PUSH",
											"source": 8,
											"value": "455243313135353A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 23200,
											"end": 23201,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 23192,
											"end": 23198,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 23188,
											"end": 23202,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 23181,
											"end": 23239,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 23273,
											"end": 23285,
											"name": "PUSH",
											"source": 8,
											"value": "72207472616E7366657200000000000000000000000000000000000000000000"
										},
										{
											"begin": 23268,
											"end": 23270,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 23260,
											"end": 23266,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 23256,
											"end": 23271,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 23249,
											"end": 23286,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 23064,
											"end": 23293,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23064,
											"end": 23293,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 23299,
											"end": 23665,
											"name": "tag",
											"source": 8,
											"value": "280"
										},
										{
											"begin": 23299,
											"end": 23665,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23441,
											"end": 23444,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 23462,
											"end": 23529,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "522"
										},
										{
											"begin": 23526,
											"end": 23528,
											"name": "PUSH",
											"source": 8,
											"value": "2A"
										},
										{
											"begin": 23521,
											"end": 23524,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 23462,
											"end": 23529,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 23462,
											"end": 23529,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 23462,
											"end": 23529,
											"name": "tag",
											"source": 8,
											"value": "522"
										},
										{
											"begin": 23462,
											"end": 23529,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23455,
											"end": 23529,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 23455,
											"end": 23529,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23538,
											"end": 23631,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "523"
										},
										{
											"begin": 23627,
											"end": 23630,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 23538,
											"end": 23631,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "279"
										},
										{
											"begin": 23538,
											"end": 23631,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 23538,
											"end": 23631,
											"name": "tag",
											"source": 8,
											"value": "523"
										},
										{
											"begin": 23538,
											"end": 23631,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23656,
											"end": 23658,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 23651,
											"end": 23654,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 23647,
											"end": 23659,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 23640,
											"end": 23659,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 23640,
											"end": 23659,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23299,
											"end": 23665,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 23299,
											"end": 23665,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 23299,
											"end": 23665,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23299,
											"end": 23665,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 23671,
											"end": 24090,
											"name": "tag",
											"source": 8,
											"value": "136"
										},
										{
											"begin": 23671,
											"end": 24090,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23837,
											"end": 23841,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 23875,
											"end": 23877,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 23864,
											"end": 23873,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 23860,
											"end": 23878,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 23852,
											"end": 23878,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 23852,
											"end": 23878,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23924,
											"end": 23933,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 23918,
											"end": 23922,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 23914,
											"end": 23934,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 23910,
											"end": 23911,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 23899,
											"end": 23908,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 23895,
											"end": 23912,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 23888,
											"end": 23935,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 23952,
											"end": 24083,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "525"
										},
										{
											"begin": 24078,
											"end": 24082,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 23952,
											"end": 24083,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "280"
										},
										{
											"begin": 23952,
											"end": 24083,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 23952,
											"end": 24083,
											"name": "tag",
											"source": 8,
											"value": "525"
										},
										{
											"begin": 23952,
											"end": 24083,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23944,
											"end": 24083,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 23944,
											"end": 24083,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23671,
											"end": 24090,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 23671,
											"end": 24090,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 23671,
											"end": 24090,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23671,
											"end": 24090,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 24096,
											"end": 24401,
											"name": "tag",
											"source": 8,
											"value": "138"
										},
										{
											"begin": 24096,
											"end": 24401,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24136,
											"end": 24139,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 24155,
											"end": 24175,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "527"
										},
										{
											"begin": 24173,
											"end": 24174,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 24155,
											"end": 24175,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 24155,
											"end": 24175,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 24155,
											"end": 24175,
											"name": "tag",
											"source": 8,
											"value": "527"
										},
										{
											"begin": 24155,
											"end": 24175,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24150,
											"end": 24175,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 24150,
											"end": 24175,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24189,
											"end": 24209,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "528"
										},
										{
											"begin": 24207,
											"end": 24208,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 24189,
											"end": 24209,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 24189,
											"end": 24209,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 24189,
											"end": 24209,
											"name": "tag",
											"source": 8,
											"value": "528"
										},
										{
											"begin": 24189,
											"end": 24209,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24184,
											"end": 24209,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 24184,
											"end": 24209,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24343,
											"end": 24344,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 24275,
											"end": 24341,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24271,
											"end": 24345,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 24268,
											"end": 24269,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 24265,
											"end": 24346,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 24262,
											"end": 24369,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 24262,
											"end": 24369,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "529"
										},
										{
											"begin": 24262,
											"end": 24369,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 24349,
											"end": 24367,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "530"
										},
										{
											"begin": 24349,
											"end": 24367,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "274"
										},
										{
											"begin": 24349,
											"end": 24367,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 24349,
											"end": 24367,
											"name": "tag",
											"source": 8,
											"value": "530"
										},
										{
											"begin": 24349,
											"end": 24367,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24262,
											"end": 24369,
											"name": "tag",
											"source": 8,
											"value": "529"
										},
										{
											"begin": 24262,
											"end": 24369,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24393,
											"end": 24394,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 24390,
											"end": 24391,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 24386,
											"end": 24395,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 24379,
											"end": 24395,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 24379,
											"end": 24395,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24096,
											"end": 24401,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 24096,
											"end": 24401,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 24096,
											"end": 24401,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24096,
											"end": 24401,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24096,
											"end": 24401,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 24407,
											"end": 25041,
											"name": "tag",
											"source": 8,
											"value": "141"
										},
										{
											"begin": 24407,
											"end": 25041,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24628,
											"end": 24632,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 24666,
											"end": 24668,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 24655,
											"end": 24664,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 24651,
											"end": 24669,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 24643,
											"end": 24669,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 24643,
											"end": 24669,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24715,
											"end": 24724,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 24709,
											"end": 24713,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 24705,
											"end": 24725,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 24701,
											"end": 24702,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 24690,
											"end": 24699,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 24686,
											"end": 24703,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 24679,
											"end": 24726,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 24743,
											"end": 24851,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "532"
										},
										{
											"begin": 24846,
											"end": 24850,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 24837,
											"end": 24843,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 24743,
											"end": 24851,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "264"
										},
										{
											"begin": 24743,
											"end": 24851,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 24743,
											"end": 24851,
											"name": "tag",
											"source": 8,
											"value": "532"
										},
										{
											"begin": 24743,
											"end": 24851,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24735,
											"end": 24851,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 24735,
											"end": 24851,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24898,
											"end": 24907,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 24892,
											"end": 24896,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 24888,
											"end": 24908,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 24883,
											"end": 24885,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 24872,
											"end": 24881,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 24868,
											"end": 24886,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 24861,
											"end": 24909,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 24926,
											"end": 25034,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "533"
										},
										{
											"begin": 25029,
											"end": 25033,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 25020,
											"end": 25026,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 24926,
											"end": 25034,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "264"
										},
										{
											"begin": 24926,
											"end": 25034,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 24926,
											"end": 25034,
											"name": "tag",
											"source": 8,
											"value": "533"
										},
										{
											"begin": 24926,
											"end": 25034,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24918,
											"end": 25034,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 24918,
											"end": 25034,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24407,
											"end": 25041,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 24407,
											"end": 25041,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 24407,
											"end": 25041,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24407,
											"end": 25041,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24407,
											"end": 25041,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24407,
											"end": 25041,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 25047,
											"end": 25275,
											"name": "tag",
											"source": 8,
											"value": "281"
										},
										{
											"begin": 25047,
											"end": 25275,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 25187,
											"end": 25221,
											"name": "PUSH",
											"source": 8,
											"value": "455243313135353A2073657474696E6720617070726F76616C20737461747573"
										},
										{
											"begin": 25183,
											"end": 25184,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 25175,
											"end": 25181,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 25171,
											"end": 25185,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 25164,
											"end": 25222,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 25256,
											"end": 25267,
											"name": "PUSH",
											"source": 8,
											"value": "20666F722073656C660000000000000000000000000000000000000000000000"
										},
										{
											"begin": 25251,
											"end": 25253,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 25243,
											"end": 25249,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 25239,
											"end": 25254,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 25232,
											"end": 25268,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 25047,
											"end": 25275,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25047,
											"end": 25275,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 25281,
											"end": 25647,
											"name": "tag",
											"source": 8,
											"value": "282"
										},
										{
											"begin": 25281,
											"end": 25647,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 25423,
											"end": 25426,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 25444,
											"end": 25511,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "536"
										},
										{
											"begin": 25508,
											"end": 25510,
											"name": "PUSH",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 25503,
											"end": 25506,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 25444,
											"end": 25511,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 25444,
											"end": 25511,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 25444,
											"end": 25511,
											"name": "tag",
											"source": 8,
											"value": "536"
										},
										{
											"begin": 25444,
											"end": 25511,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 25437,
											"end": 25511,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 25437,
											"end": 25511,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25520,
											"end": 25613,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "537"
										},
										{
											"begin": 25609,
											"end": 25612,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 25520,
											"end": 25613,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "281"
										},
										{
											"begin": 25520,
											"end": 25613,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 25520,
											"end": 25613,
											"name": "tag",
											"source": 8,
											"value": "537"
										},
										{
											"begin": 25520,
											"end": 25613,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 25638,
											"end": 25640,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 25633,
											"end": 25636,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 25629,
											"end": 25641,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 25622,
											"end": 25641,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 25622,
											"end": 25641,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25281,
											"end": 25647,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 25281,
											"end": 25647,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 25281,
											"end": 25647,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25281,
											"end": 25647,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 25653,
											"end": 26072,
											"name": "tag",
											"source": 8,
											"value": "149"
										},
										{
											"begin": 25653,
											"end": 26072,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 25819,
											"end": 25823,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 25857,
											"end": 25859,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 25846,
											"end": 25855,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 25842,
											"end": 25860,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 25834,
											"end": 25860,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 25834,
											"end": 25860,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25906,
											"end": 25915,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 25900,
											"end": 25904,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 25896,
											"end": 25916,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 25892,
											"end": 25893,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 25881,
											"end": 25890,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 25877,
											"end": 25894,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 25870,
											"end": 25917,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 25934,
											"end": 26065,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "539"
										},
										{
											"begin": 26060,
											"end": 26064,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 25934,
											"end": 26065,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "282"
										},
										{
											"begin": 25934,
											"end": 26065,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 25934,
											"end": 26065,
											"name": "tag",
											"source": 8,
											"value": "539"
										},
										{
											"begin": 25934,
											"end": 26065,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 25926,
											"end": 26065,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 25926,
											"end": 26065,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25653,
											"end": 26072,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 25653,
											"end": 26072,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 25653,
											"end": 26072,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25653,
											"end": 26072,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 26078,
											"end": 26410,
											"name": "tag",
											"source": 8,
											"value": "163"
										},
										{
											"begin": 26078,
											"end": 26410,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 26199,
											"end": 26203,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 26237,
											"end": 26239,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 26226,
											"end": 26235,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 26222,
											"end": 26240,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 26214,
											"end": 26240,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 26214,
											"end": 26240,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 26250,
											"end": 26321,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "541"
										},
										{
											"begin": 26318,
											"end": 26319,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 26307,
											"end": 26316,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 26303,
											"end": 26320,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 26294,
											"end": 26300,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 26250,
											"end": 26321,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "232"
										},
										{
											"begin": 26250,
											"end": 26321,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 26250,
											"end": 26321,
											"name": "tag",
											"source": 8,
											"value": "541"
										},
										{
											"begin": 26250,
											"end": 26321,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 26331,
											"end": 26403,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "542"
										},
										{
											"begin": 26399,
											"end": 26401,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 26388,
											"end": 26397,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 26384,
											"end": 26402,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 26375,
											"end": 26381,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 26331,
											"end": 26403,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "232"
										},
										{
											"begin": 26331,
											"end": 26403,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 26331,
											"end": 26403,
											"name": "tag",
											"source": 8,
											"value": "542"
										},
										{
											"begin": 26331,
											"end": 26403,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 26078,
											"end": 26410,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 26078,
											"end": 26410,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 26078,
											"end": 26410,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 26078,
											"end": 26410,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 26078,
											"end": 26410,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 26078,
											"end": 26410,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 26416,
											"end": 26534,
											"name": "tag",
											"source": 8,
											"value": "283"
										},
										{
											"begin": 26416,
											"end": 26534,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 26503,
											"end": 26527,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "544"
										},
										{
											"begin": 26521,
											"end": 26526,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 26503,
											"end": 26527,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "226"
										},
										{
											"begin": 26503,
											"end": 26527,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 26503,
											"end": 26527,
											"name": "tag",
											"source": 8,
											"value": "544"
										},
										{
											"begin": 26503,
											"end": 26527,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 26498,
											"end": 26501,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 26491,
											"end": 26528,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 26416,
											"end": 26534,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 26416,
											"end": 26534,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 26416,
											"end": 26534,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 26540,
											"end": 26638,
											"name": "tag",
											"source": 8,
											"value": "284"
										},
										{
											"begin": 26540,
											"end": 26638,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 26591,
											"end": 26597,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 26625,
											"end": 26630,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 26619,
											"end": 26631,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 26609,
											"end": 26631,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 26609,
											"end": 26631,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 26540,
											"end": 26638,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 26540,
											"end": 26638,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 26540,
											"end": 26638,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 26540,
											"end": 26638,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 26644,
											"end": 26812,
											"name": "tag",
											"source": 8,
											"value": "285"
										},
										{
											"begin": 26644,
											"end": 26812,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 26727,
											"end": 26738,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 26761,
											"end": 26767,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 26756,
											"end": 26759,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 26749,
											"end": 26768,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 26801,
											"end": 26805,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 26796,
											"end": 26799,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 26792,
											"end": 26806,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 26777,
											"end": 26806,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 26777,
											"end": 26806,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 26644,
											"end": 26812,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 26644,
											"end": 26812,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 26644,
											"end": 26812,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 26644,
											"end": 26812,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 26644,
											"end": 26812,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 26818,
											"end": 27178,
											"name": "tag",
											"source": 8,
											"value": "286"
										},
										{
											"begin": 26818,
											"end": 27178,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 26904,
											"end": 26907,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 26932,
											"end": 26970,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "548"
										},
										{
											"begin": 26964,
											"end": 26969,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 26932,
											"end": 26970,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "284"
										},
										{
											"begin": 26932,
											"end": 26970,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 26932,
											"end": 26970,
											"name": "tag",
											"source": 8,
											"value": "548"
										},
										{
											"begin": 26932,
											"end": 26970,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 26986,
											"end": 27056,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "549"
										},
										{
											"begin": 27049,
											"end": 27055,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 27044,
											"end": 27047,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 26986,
											"end": 27056,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "285"
										},
										{
											"begin": 26986,
											"end": 27056,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 26986,
											"end": 27056,
											"name": "tag",
											"source": 8,
											"value": "549"
										},
										{
											"begin": 26986,
											"end": 27056,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 26979,
											"end": 27056,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 26979,
											"end": 27056,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 27065,
											"end": 27117,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "550"
										},
										{
											"begin": 27110,
											"end": 27116,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 27105,
											"end": 27108,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 27098,
											"end": 27102,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 27091,
											"end": 27096,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 27087,
											"end": 27103,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 27065,
											"end": 27117,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "240"
										},
										{
											"begin": 27065,
											"end": 27117,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 27065,
											"end": 27117,
											"name": "tag",
											"source": 8,
											"value": "550"
										},
										{
											"begin": 27065,
											"end": 27117,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 27142,
											"end": 27171,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "551"
										},
										{
											"begin": 27164,
											"end": 27170,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 27142,
											"end": 27171,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "241"
										},
										{
											"begin": 27142,
											"end": 27171,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 27142,
											"end": 27171,
											"name": "tag",
											"source": 8,
											"value": "551"
										},
										{
											"begin": 27142,
											"end": 27171,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 27137,
											"end": 27140,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 27133,
											"end": 27172,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 27126,
											"end": 27172,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 27126,
											"end": 27172,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 26908,
											"end": 27178,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 26818,
											"end": 27178,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 26818,
											"end": 27178,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 26818,
											"end": 27178,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 26818,
											"end": 27178,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 26818,
											"end": 27178,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 27184,
											"end": 28237,
											"name": "tag",
											"source": 8,
											"value": "174"
										},
										{
											"begin": 27184,
											"end": 28237,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 27507,
											"end": 27511,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 27545,
											"end": 27548,
											"name": "PUSH",
											"source": 8,
											"value": "A0"
										},
										{
											"begin": 27534,
											"end": 27543,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 27530,
											"end": 27549,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 27522,
											"end": 27549,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 27522,
											"end": 27549,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 27559,
											"end": 27630,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "553"
										},
										{
											"begin": 27627,
											"end": 27628,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 27616,
											"end": 27625,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 27612,
											"end": 27629,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 27603,
											"end": 27609,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 27559,
											"end": 27630,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "283"
										},
										{
											"begin": 27559,
											"end": 27630,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 27559,
											"end": 27630,
											"name": "tag",
											"source": 8,
											"value": "553"
										},
										{
											"begin": 27559,
											"end": 27630,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 27640,
											"end": 27712,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "554"
										},
										{
											"begin": 27708,
											"end": 27710,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 27697,
											"end": 27706,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 27693,
											"end": 27711,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 27684,
											"end": 27690,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 27640,
											"end": 27712,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "283"
										},
										{
											"begin": 27640,
											"end": 27712,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 27640,
											"end": 27712,
											"name": "tag",
											"source": 8,
											"value": "554"
										},
										{
											"begin": 27640,
											"end": 27712,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 27759,
											"end": 27768,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 27753,
											"end": 27757,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 27749,
											"end": 27769,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 27744,
											"end": 27746,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 27733,
											"end": 27742,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 27729,
											"end": 27747,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 27722,
											"end": 27770,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 27787,
											"end": 27895,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "555"
										},
										{
											"begin": 27890,
											"end": 27894,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 27881,
											"end": 27887,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 27787,
											"end": 27895,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "264"
										},
										{
											"begin": 27787,
											"end": 27895,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 27787,
											"end": 27895,
											"name": "tag",
											"source": 8,
											"value": "555"
										},
										{
											"begin": 27787,
											"end": 27895,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 27779,
											"end": 27895,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 27779,
											"end": 27895,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 27942,
											"end": 27951,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 27936,
											"end": 27940,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 27932,
											"end": 27952,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 27927,
											"end": 27929,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 27916,
											"end": 27925,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 27912,
											"end": 27930,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 27905,
											"end": 27953,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 27970,
											"end": 28078,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "556"
										},
										{
											"begin": 28073,
											"end": 28077,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 28064,
											"end": 28070,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 27970,
											"end": 28078,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "264"
										},
										{
											"begin": 27970,
											"end": 28078,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 27970,
											"end": 28078,
											"name": "tag",
											"source": 8,
											"value": "556"
										},
										{
											"begin": 27970,
											"end": 28078,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 27962,
											"end": 28078,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 27962,
											"end": 28078,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 28126,
											"end": 28135,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 28120,
											"end": 28124,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 28116,
											"end": 28136,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 28110,
											"end": 28113,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 28099,
											"end": 28108,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 28095,
											"end": 28114,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 28088,
											"end": 28137,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 28154,
											"end": 28230,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "557"
										},
										{
											"begin": 28225,
											"end": 28229,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 28216,
											"end": 28222,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 28154,
											"end": 28230,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "286"
										},
										{
											"begin": 28154,
											"end": 28230,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 28154,
											"end": 28230,
											"name": "tag",
											"source": 8,
											"value": "557"
										},
										{
											"begin": 28154,
											"end": 28230,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 28146,
											"end": 28230,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 28146,
											"end": 28230,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 27184,
											"end": 28237,
											"name": "SWAP7",
											"source": 8
										},
										{
											"begin": 27184,
											"end": 28237,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 27184,
											"end": 28237,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 27184,
											"end": 28237,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 27184,
											"end": 28237,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 27184,
											"end": 28237,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 27184,
											"end": 28237,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 27184,
											"end": 28237,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 27184,
											"end": 28237,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 28243,
											"end": 28384,
											"name": "tag",
											"source": 8,
											"value": "287"
										},
										{
											"begin": 28243,
											"end": 28384,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 28299,
											"end": 28304,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 28330,
											"end": 28336,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 28324,
											"end": 28337,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 28315,
											"end": 28337,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 28315,
											"end": 28337,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 28346,
											"end": 28378,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "559"
										},
										{
											"begin": 28372,
											"end": 28377,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 28346,
											"end": 28378,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "234"
										},
										{
											"begin": 28346,
											"end": 28378,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 28346,
											"end": 28378,
											"name": "tag",
											"source": 8,
											"value": "559"
										},
										{
											"begin": 28346,
											"end": 28378,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 28243,
											"end": 28384,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 28243,
											"end": 28384,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 28243,
											"end": 28384,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 28243,
											"end": 28384,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 28243,
											"end": 28384,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 28390,
											"end": 28739,
											"name": "tag",
											"source": 8,
											"value": "178"
										},
										{
											"begin": 28390,
											"end": 28739,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 28459,
											"end": 28465,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 28508,
											"end": 28510,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 28496,
											"end": 28505,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 28487,
											"end": 28494,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 28483,
											"end": 28506,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 28479,
											"end": 28511,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 28476,
											"end": 28595,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 28476,
											"end": 28595,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "561"
										},
										{
											"begin": 28476,
											"end": 28595,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 28514,
											"end": 28593,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "562"
										},
										{
											"begin": 28514,
											"end": 28593,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "223"
										},
										{
											"begin": 28514,
											"end": 28593,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 28514,
											"end": 28593,
											"name": "tag",
											"source": 8,
											"value": "562"
										},
										{
											"begin": 28514,
											"end": 28593,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 28476,
											"end": 28595,
											"name": "tag",
											"source": 8,
											"value": "561"
										},
										{
											"begin": 28476,
											"end": 28595,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 28634,
											"end": 28635,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 28659,
											"end": 28722,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "563"
										},
										{
											"begin": 28714,
											"end": 28721,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 28705,
											"end": 28711,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 28694,
											"end": 28703,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 28690,
											"end": 28712,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 28659,
											"end": 28722,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "287"
										},
										{
											"begin": 28659,
											"end": 28722,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 28659,
											"end": 28722,
											"name": "tag",
											"source": 8,
											"value": "563"
										},
										{
											"begin": 28659,
											"end": 28722,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 28649,
											"end": 28722,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 28649,
											"end": 28722,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 28605,
											"end": 28732,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 28390,
											"end": 28739,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 28390,
											"end": 28739,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 28390,
											"end": 28739,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 28390,
											"end": 28739,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 28390,
											"end": 28739,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 28745,
											"end": 28851,
											"name": "tag",
											"source": 8,
											"value": "288"
										},
										{
											"begin": 28745,
											"end": 28851,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 28789,
											"end": 28797,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 28838,
											"end": 28843,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 28833,
											"end": 28836,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 28829,
											"end": 28844,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 28808,
											"end": 28844,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 28808,
											"end": 28844,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 28745,
											"end": 28851,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 28745,
											"end": 28851,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 28745,
											"end": 28851,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 28745,
											"end": 28851,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 28857,
											"end": 29040,
											"name": "tag",
											"source": 8,
											"value": "184"
										},
										{
											"begin": 28857,
											"end": 29040,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 28892,
											"end": 28895,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 28930,
											"end": 28931,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 28912,
											"end": 28928,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 28909,
											"end": 28932,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 28906,
											"end": 29034,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 28906,
											"end": 29034,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "566"
										},
										{
											"begin": 28906,
											"end": 29034,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 28968,
											"end": 28969,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 28965,
											"end": 28966,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 28962,
											"end": 28963,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 28947,
											"end": 28970,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 28990,
											"end": 29024,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "567"
										},
										{
											"begin": 29021,
											"end": 29022,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 29015,
											"end": 29023,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 28990,
											"end": 29024,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "288"
										},
										{
											"begin": 28990,
											"end": 29024,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 28990,
											"end": 29024,
											"name": "tag",
											"source": 8,
											"value": "567"
										},
										{
											"begin": 28990,
											"end": 29024,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 28983,
											"end": 29024,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 28983,
											"end": 29024,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 28906,
											"end": 29034,
											"name": "tag",
											"source": 8,
											"value": "566"
										},
										{
											"begin": 28906,
											"end": 29034,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 28857,
											"end": 29040,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 28857,
											"end": 29040,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 29046,
											"end": 29757,
											"name": "tag",
											"source": 8,
											"value": "186"
										},
										{
											"begin": 29046,
											"end": 29757,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 29085,
											"end": 29088,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 29123,
											"end": 29127,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 29105,
											"end": 29121,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 29102,
											"end": 29128,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 29099,
											"end": 29138,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 29099,
											"end": 29138,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "569"
										},
										{
											"begin": 29099,
											"end": 29138,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 29131,
											"end": 29136,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "568"
										},
										{
											"begin": 29131,
											"end": 29136,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 29099,
											"end": 29138,
											"name": "tag",
											"source": 8,
											"value": "569"
										},
										{
											"begin": 29099,
											"end": 29138,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 29160,
											"end": 29180,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "570"
										},
										{
											"begin": 29160,
											"end": 29180,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "222"
										},
										{
											"begin": 29160,
											"end": 29180,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 29160,
											"end": 29180,
											"name": "tag",
											"source": 8,
											"value": "570"
										},
										{
											"begin": 29160,
											"end": 29180,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 29235,
											"end": 29236,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 29217,
											"end": 29233,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 29213,
											"end": 29237,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 29210,
											"end": 29211,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 29204,
											"end": 29208,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 29189,
											"end": 29238,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 29268,
											"end": 29272,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 29262,
											"end": 29273,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 29367,
											"end": 29383,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 29360,
											"end": 29364,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 29352,
											"end": 29358,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 29348,
											"end": 29365,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 29345,
											"end": 29384,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 29312,
											"end": 29330,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29304,
											"end": 29310,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 29301,
											"end": 29331,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 29285,
											"end": 29398,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 29282,
											"end": 29428,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 29282,
											"end": 29428,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "571"
										},
										{
											"begin": 29282,
											"end": 29428,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 29413,
											"end": 29418,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 29413,
											"end": 29418,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 29413,
											"end": 29418,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "568"
										},
										{
											"begin": 29413,
											"end": 29418,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 29282,
											"end": 29428,
											"name": "tag",
											"source": 8,
											"value": "571"
										},
										{
											"begin": 29282,
											"end": 29428,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 29459,
											"end": 29465,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 29453,
											"end": 29457,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 29449,
											"end": 29466,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 29495,
											"end": 29498,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 29489,
											"end": 29499,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 29522,
											"end": 29540,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29514,
											"end": 29520,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 29511,
											"end": 29541,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 29508,
											"end": 29551,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 29508,
											"end": 29551,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "572"
										},
										{
											"begin": 29508,
											"end": 29551,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 29544,
											"end": 29549,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 29544,
											"end": 29549,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 29544,
											"end": 29549,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 29544,
											"end": 29549,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 29544,
											"end": 29549,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "568"
										},
										{
											"begin": 29544,
											"end": 29549,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 29508,
											"end": 29551,
											"name": "tag",
											"source": 8,
											"value": "572"
										},
										{
											"begin": 29508,
											"end": 29551,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 29592,
											"end": 29598,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 29585,
											"end": 29589,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 29580,
											"end": 29583,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 29576,
											"end": 29590,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 29572,
											"end": 29599,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 29651,
											"end": 29652,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 29633,
											"end": 29649,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 29629,
											"end": 29653,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 29623,
											"end": 29627,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 29619,
											"end": 29654,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 29614,
											"end": 29617,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 29611,
											"end": 29655,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 29608,
											"end": 29665,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 29608,
											"end": 29665,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "573"
										},
										{
											"begin": 29608,
											"end": 29665,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 29658,
											"end": 29663,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 29658,
											"end": 29663,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 29658,
											"end": 29663,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 29658,
											"end": 29663,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 29658,
											"end": 29663,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 29658,
											"end": 29663,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "568"
										},
										{
											"begin": 29658,
											"end": 29663,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 29608,
											"end": 29665,
											"name": "tag",
											"source": 8,
											"value": "573"
										},
										{
											"begin": 29608,
											"end": 29665,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 29675,
											"end": 29732,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "574"
										},
										{
											"begin": 29723,
											"end": 29729,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 29717,
											"end": 29721,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 29713,
											"end": 29730,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 29705,
											"end": 29711,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 29701,
											"end": 29731,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 29695,
											"end": 29699,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 29675,
											"end": 29732,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "244"
										},
										{
											"begin": 29675,
											"end": 29732,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 29675,
											"end": 29732,
											"name": "tag",
											"source": 8,
											"value": "574"
										},
										{
											"begin": 29675,
											"end": 29732,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 29748,
											"end": 29751,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 29741,
											"end": 29751,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 29741,
											"end": 29751,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 29089,
											"end": 29757,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 29089,
											"end": 29757,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 29089,
											"end": 29757,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 29089,
											"end": 29757,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 29089,
											"end": 29757,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 29046,
											"end": 29757,
											"name": "tag",
											"source": 8,
											"value": "568"
										},
										{
											"begin": 29046,
											"end": 29757,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 29046,
											"end": 29757,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 29046,
											"end": 29757,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 29763,
											"end": 30002,
											"name": "tag",
											"source": 8,
											"value": "289"
										},
										{
											"begin": 29763,
											"end": 30002,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 29903,
											"end": 29937,
											"name": "PUSH",
											"source": 8,
											"value": "455243313135353A207472616E7366657220746F206E6F6E2D45524331313535"
										},
										{
											"begin": 29899,
											"end": 29900,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 29891,
											"end": 29897,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 29887,
											"end": 29901,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 29880,
											"end": 29938,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 29972,
											"end": 29994,
											"name": "PUSH",
											"source": 8,
											"value": "526563656976657220696D706C656D656E746572000000000000000000000000"
										},
										{
											"begin": 29967,
											"end": 29969,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 29959,
											"end": 29965,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 29955,
											"end": 29970,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 29948,
											"end": 29995,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 29763,
											"end": 30002,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 29763,
											"end": 30002,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 30008,
											"end": 30374,
											"name": "tag",
											"source": 8,
											"value": "290"
										},
										{
											"begin": 30008,
											"end": 30374,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 30150,
											"end": 30153,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 30171,
											"end": 30238,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "577"
										},
										{
											"begin": 30235,
											"end": 30237,
											"name": "PUSH",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 30230,
											"end": 30233,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 30171,
											"end": 30238,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 30171,
											"end": 30238,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 30171,
											"end": 30238,
											"name": "tag",
											"source": 8,
											"value": "577"
										},
										{
											"begin": 30171,
											"end": 30238,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 30164,
											"end": 30238,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 30164,
											"end": 30238,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 30247,
											"end": 30340,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "578"
										},
										{
											"begin": 30336,
											"end": 30339,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 30247,
											"end": 30340,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "289"
										},
										{
											"begin": 30247,
											"end": 30340,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 30247,
											"end": 30340,
											"name": "tag",
											"source": 8,
											"value": "578"
										},
										{
											"begin": 30247,
											"end": 30340,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 30365,
											"end": 30367,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 30360,
											"end": 30363,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 30356,
											"end": 30368,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 30349,
											"end": 30368,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 30349,
											"end": 30368,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 30008,
											"end": 30374,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 30008,
											"end": 30374,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 30008,
											"end": 30374,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 30008,
											"end": 30374,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 30380,
											"end": 30799,
											"name": "tag",
											"source": 8,
											"value": "190"
										},
										{
											"begin": 30380,
											"end": 30799,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 30546,
											"end": 30550,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 30584,
											"end": 30586,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 30573,
											"end": 30582,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 30569,
											"end": 30587,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 30561,
											"end": 30587,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 30561,
											"end": 30587,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 30633,
											"end": 30642,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 30627,
											"end": 30631,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 30623,
											"end": 30643,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 30619,
											"end": 30620,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 30608,
											"end": 30617,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 30604,
											"end": 30621,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 30597,
											"end": 30644,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 30661,
											"end": 30792,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "580"
										},
										{
											"begin": 30787,
											"end": 30791,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 30661,
											"end": 30792,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "290"
										},
										{
											"begin": 30661,
											"end": 30792,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 30661,
											"end": 30792,
											"name": "tag",
											"source": 8,
											"value": "580"
										},
										{
											"begin": 30661,
											"end": 30792,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 30653,
											"end": 30792,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 30653,
											"end": 30792,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 30380,
											"end": 30799,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 30380,
											"end": 30799,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 30380,
											"end": 30799,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 30380,
											"end": 30799,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 30805,
											"end": 31032,
											"name": "tag",
											"source": 8,
											"value": "291"
										},
										{
											"begin": 30805,
											"end": 31032,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 30945,
											"end": 30979,
											"name": "PUSH",
											"source": 8,
											"value": "455243313135353A204552433131353552656365697665722072656A65637465"
										},
										{
											"begin": 30941,
											"end": 30942,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 30933,
											"end": 30939,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 30929,
											"end": 30943,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 30922,
											"end": 30980,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 31014,
											"end": 31024,
											"name": "PUSH",
											"source": 8,
											"value": "6420746F6B656E73000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 31009,
											"end": 31011,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 31001,
											"end": 31007,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 30997,
											"end": 31012,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 30990,
											"end": 31025,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 30805,
											"end": 31032,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 30805,
											"end": 31032,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 31038,
											"end": 31404,
											"name": "tag",
											"source": 8,
											"value": "292"
										},
										{
											"begin": 31038,
											"end": 31404,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 31180,
											"end": 31183,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 31201,
											"end": 31268,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "583"
										},
										{
											"begin": 31265,
											"end": 31267,
											"name": "PUSH",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 31260,
											"end": 31263,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 31201,
											"end": 31268,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 31201,
											"end": 31268,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 31201,
											"end": 31268,
											"name": "tag",
											"source": 8,
											"value": "583"
										},
										{
											"begin": 31201,
											"end": 31268,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 31194,
											"end": 31268,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 31194,
											"end": 31268,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 31277,
											"end": 31370,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "584"
										},
										{
											"begin": 31366,
											"end": 31369,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 31277,
											"end": 31370,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "291"
										},
										{
											"begin": 31277,
											"end": 31370,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 31277,
											"end": 31370,
											"name": "tag",
											"source": 8,
											"value": "584"
										},
										{
											"begin": 31277,
											"end": 31370,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 31395,
											"end": 31397,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 31390,
											"end": 31393,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 31386,
											"end": 31398,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 31379,
											"end": 31398,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 31379,
											"end": 31398,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 31038,
											"end": 31404,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 31038,
											"end": 31404,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 31038,
											"end": 31404,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 31038,
											"end": 31404,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 31410,
											"end": 31829,
											"name": "tag",
											"source": 8,
											"value": "194"
										},
										{
											"begin": 31410,
											"end": 31829,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 31576,
											"end": 31580,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 31614,
											"end": 31616,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 31603,
											"end": 31612,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 31599,
											"end": 31617,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 31591,
											"end": 31617,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 31591,
											"end": 31617,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 31663,
											"end": 31672,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 31657,
											"end": 31661,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 31653,
											"end": 31673,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 31649,
											"end": 31650,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 31638,
											"end": 31647,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 31634,
											"end": 31651,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 31627,
											"end": 31674,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 31691,
											"end": 31822,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "586"
										},
										{
											"begin": 31817,
											"end": 31821,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 31691,
											"end": 31822,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "292"
										},
										{
											"begin": 31691,
											"end": 31822,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 31691,
											"end": 31822,
											"name": "tag",
											"source": 8,
											"value": "586"
										},
										{
											"begin": 31691,
											"end": 31822,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 31683,
											"end": 31822,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 31683,
											"end": 31822,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 31410,
											"end": 31829,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 31410,
											"end": 31829,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 31410,
											"end": 31829,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 31410,
											"end": 31829,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 31835,
											"end": 32586,
											"name": "tag",
											"source": 8,
											"value": "205"
										},
										{
											"begin": 31835,
											"end": 32586,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 32058,
											"end": 32062,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 32096,
											"end": 32099,
											"name": "PUSH",
											"source": 8,
											"value": "A0"
										},
										{
											"begin": 32085,
											"end": 32094,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 32081,
											"end": 32100,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 32073,
											"end": 32100,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 32073,
											"end": 32100,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 32110,
											"end": 32181,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "588"
										},
										{
											"begin": 32178,
											"end": 32179,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 32167,
											"end": 32176,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 32163,
											"end": 32180,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 32154,
											"end": 32160,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 32110,
											"end": 32181,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "283"
										},
										{
											"begin": 32110,
											"end": 32181,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 32110,
											"end": 32181,
											"name": "tag",
											"source": 8,
											"value": "588"
										},
										{
											"begin": 32110,
											"end": 32181,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 32191,
											"end": 32263,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "589"
										},
										{
											"begin": 32259,
											"end": 32261,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 32248,
											"end": 32257,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 32244,
											"end": 32262,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 32235,
											"end": 32241,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 32191,
											"end": 32263,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "283"
										},
										{
											"begin": 32191,
											"end": 32263,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 32191,
											"end": 32263,
											"name": "tag",
											"source": 8,
											"value": "589"
										},
										{
											"begin": 32191,
											"end": 32263,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 32273,
											"end": 32345,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "590"
										},
										{
											"begin": 32341,
											"end": 32343,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 32330,
											"end": 32339,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 32326,
											"end": 32344,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 32317,
											"end": 32323,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 32273,
											"end": 32345,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "232"
										},
										{
											"begin": 32273,
											"end": 32345,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 32273,
											"end": 32345,
											"name": "tag",
											"source": 8,
											"value": "590"
										},
										{
											"begin": 32273,
											"end": 32345,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 32355,
											"end": 32427,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "591"
										},
										{
											"begin": 32423,
											"end": 32425,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 32412,
											"end": 32421,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 32408,
											"end": 32426,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 32399,
											"end": 32405,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 32355,
											"end": 32427,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "232"
										},
										{
											"begin": 32355,
											"end": 32427,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 32355,
											"end": 32427,
											"name": "tag",
											"source": 8,
											"value": "591"
										},
										{
											"begin": 32355,
											"end": 32427,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 32475,
											"end": 32484,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 32469,
											"end": 32473,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 32465,
											"end": 32485,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 32459,
											"end": 32462,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 32448,
											"end": 32457,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 32444,
											"end": 32463,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 32437,
											"end": 32486,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 32503,
											"end": 32579,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "592"
										},
										{
											"begin": 32574,
											"end": 32578,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 32565,
											"end": 32571,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 32503,
											"end": 32579,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "286"
										},
										{
											"begin": 32503,
											"end": 32579,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 32503,
											"end": 32579,
											"name": "tag",
											"source": 8,
											"value": "592"
										},
										{
											"begin": 32503,
											"end": 32579,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 32495,
											"end": 32579,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 32495,
											"end": 32579,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 31835,
											"end": 32586,
											"name": "SWAP7",
											"source": 8
										},
										{
											"begin": 31835,
											"end": 32586,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 31835,
											"end": 32586,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 31835,
											"end": 32586,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 31835,
											"end": 32586,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 31835,
											"end": 32586,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 31835,
											"end": 32586,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 31835,
											"end": 32586,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 31835,
											"end": 32586,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"uri_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155 _Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"constructor\":{\"details\":\"See {_setURI}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":\"ERC1155\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0xd917747dc87f189c6779b894f367a028f9dca4be930283cccec8f312966af820\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a5e5b99830cf233f77aa3b1bd1f57561faee103beeee88e6a6f86d044817bbb\",\"dweb:/ipfs/QmREYidSDpHPig3AhxzsMHg3w2ZtMeGfRhcokXxEZyj6fC\"]},\"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x6392f2cfe3a5ee802227fe7a2dfd47096d881aec89bddd214b35c5b46d3cd941\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd9c47a375639888e726a99da718890ba16d17d7ad9eacb0ccc892d46d1b3ee0\",\"dweb:/ipfs/Qmb41W5RUjy2sWg49A2rMnxekSeEk6SvGyJL5tyCCSr7un\"]},\"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xa66d18b9a85458d28fc3304717964502ae36f7f8a2ff35bc83f6f85d74b03574\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e46c80ea068989111d6103e5521223f9ef337e93de76deed8b03f75c6f7b2797\",\"dweb:/ipfs/QmNoSE6knNfFncdDDLTb3fGR6oSQty1srG96Vsx3E9wQdw\"]},\"localhost/.deps/npm/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"localhost/.deps/npm/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"localhost/.deps/npm/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"localhost/.deps/npm/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 25,
								"contract": "localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 31,
								"contract": "localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 33,
								"contract": "localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
								"label": "_uri",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"IERC1155": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._",
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":\"IERC1155\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x6392f2cfe3a5ee802227fe7a2dfd47096d881aec89bddd214b35c5b46d3cd941\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd9c47a375639888e726a99da718890ba16d17d7ad9eacb0ccc892d46d1b3ee0\",\"dweb:/ipfs/Qmb41W5RUjy2sWg49A2rMnxekSeEk6SvGyJL5tyCCSr7un\"]},\"localhost/.deps/npm/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"IERC1155Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "_Available since v3.1._",
						"kind": "dev",
						"methods": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": {
								"details": "Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` (i.e. 0xbc197c81, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"ids": "An array containing ids of each token being transferred (order and length must match values array)",
									"operator": "The address which initiated the batch transfer (i.e. msg.sender)",
									"values": "An array containing amounts of each token being transferred (order and length must match ids array)"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
								}
							},
							"onERC1155Received(address,address,uint256,uint256,bytes)": {
								"details": "Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` (i.e. 0xf23a6e61, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"id": "The ID of the token being transferred",
									"operator": "The address which initiated the transfer (i.e. msg.sender)",
									"value": "The amount of tokens being transferred"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
								}
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
							"onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"_Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":\"IERC1155Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"localhost/.deps/npm/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
				"IERC1155MetadataURI": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP]. _Available since v3.1._",
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"uri(uint256)": {
								"details": "Returns the URI for token type `id`. If the `\\{id\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP]. _Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"uri(uint256)\":{\"details\":\"Returns the URI for token type `id`. If the `\\\\{id\\\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":\"IERC1155MetadataURI\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x6392f2cfe3a5ee802227fe7a2dfd47096d881aec89bddd214b35c5b46d3cd941\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd9c47a375639888e726a99da718890ba16d17d7ad9eacb0ccc892d46d1b3ee0\",\"dweb:/ipfs/Qmb41W5RUjy2sWg49A2rMnxekSeEk6SvGyJL5tyCCSr7un\"]},\"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xa66d18b9a85458d28fc3304717964502ae36f7f8a2ff35bc83f6f85d74b03574\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e46c80ea068989111d6103e5521223f9ef337e93de76deed8b03f75c6f7b2797\",\"dweb:/ipfs/QmNoSE6knNfFncdDDLTb3fGR6oSQty1srG96Vsx3E9wQdw\"]},\"localhost/.deps/npm/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"localhost/.deps/npm/@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"localhost/.deps/npm/@openzeppelin/contracts/utils/Address.sol\":194:9158  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/utils/Address.sol\":194:9158  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220e3ed43822aaa5d627d8ac2272e754d1ac94480c7b91e6657ab5aca166a8e7a3a64736f6c63430008090033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e3ed43822aaa5d627d8ac2272e754d1ac94480c7b91e6657ab5aca166a8e7a3a64736f6c63430008090033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE3 0xED NUMBER DUP3 0x2A 0xAA 0x5D PUSH3 0x7D8AC2 0x27 0x2E PUSH22 0x4D1AC94480C7B91E6657AB5ACA166A8E7A3A64736F6C PUSH4 0x43000809 STOP CALLER ",
							"sourceMap": "194:8964:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e3ed43822aaa5d627d8ac2272e754d1ac94480c7b91e6657ab5aca166a8e7a3a64736f6c63430008090033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE3 0xED NUMBER DUP3 0x2A 0xAA 0x5D PUSH3 0x7D8AC2 0x27 0x2E PUSH22 0x4D1AC94480C7B91E6657AB5ACA166A8E7A3A64736F6C PUSH4 0x43000809 STOP CALLER ",
							"sourceMap": "194:8964:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_revert(bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e3ed43822aaa5d627d8ac2272e754d1ac94480c7b91e6657ab5aca166a8e7a3a64736f6c63430008090033",
									".code": [
										{
											"begin": 194,
											"end": 9158,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"localhost/.deps/npm/@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"localhost/.deps/npm/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"localhost/.deps/npm/@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"localhost/.deps/npm/@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"localhost/.deps/npm/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"localhost/.deps/npm/@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"localhost/.deps/npm/@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"localhost/.deps/npm/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"localhost/.deps/npm/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"localhost/.deps/npm/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"localhost/.deps/npm/@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"localhost/.deps/npm/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol": {
				"ast": {
					"absolutePath": "localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
					"exportedSymbols": {
						"Address": [
							1730
						],
						"Context": [
							1752
						],
						"ERC1155": [
							1222
						],
						"ERC165": [
							1776
						],
						"IERC1155": [
							1344
						],
						"IERC1155MetadataURI": [
							1400
						],
						"IERC1155Receiver": [
							1385
						],
						"IERC165": [
							1788
						]
					},
					"id": 1223,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "109:23:0"
						},
						{
							"absolutePath": "localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
							"file": "./IERC1155.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1223,
							"sourceUnit": 1345,
							"src": "134:24:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
							"file": "./IERC1155Receiver.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1223,
							"sourceUnit": 1386,
							"src": "159:32:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
							"file": "./extensions/IERC1155MetadataURI.sol",
							"id": 4,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1223,
							"sourceUnit": 1401,
							"src": "192:46:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "localhost/.deps/npm/@openzeppelin/contracts/utils/Address.sol",
							"file": "../../utils/Address.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1223,
							"sourceUnit": 1731,
							"src": "239:33:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "localhost/.deps/npm/@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 6,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1223,
							"sourceUnit": 1753,
							"src": "273:33:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "localhost/.deps/npm/@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../../utils/introspection/ERC165.sol",
							"id": 7,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1223,
							"sourceUnit": 1777,
							"src": "307:46:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 9,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1752,
										"src": "590:7:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "590:7:0"
								},
								{
									"baseName": {
										"id": 11,
										"name": "ERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1776,
										"src": "599:6:0"
									},
									"id": 12,
									"nodeType": "InheritanceSpecifier",
									"src": "599:6:0"
								},
								{
									"baseName": {
										"id": 13,
										"name": "IERC1155",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1344,
										"src": "607:8:0"
									},
									"id": 14,
									"nodeType": "InheritanceSpecifier",
									"src": "607:8:0"
								},
								{
									"baseName": {
										"id": 15,
										"name": "IERC1155MetadataURI",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1400,
										"src": "617:19:0"
									},
									"id": 16,
									"nodeType": "InheritanceSpecifier",
									"src": "617:19:0"
								}
							],
							"canonicalName": "ERC1155",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 8,
								"nodeType": "StructuredDocumentation",
								"src": "355:214:0",
								"text": " @dev Implementation of the basic standard multi-token.\n See https://eips.ethereum.org/EIPS/eip-1155\n Originally based on code by Enjin: https://github.com/enjin/erc-1155\n _Available since v3.1._"
							},
							"fullyImplemented": true,
							"id": 1222,
							"linearizedBaseContracts": [
								1222,
								1400,
								1344,
								1776,
								1788,
								1752
							],
							"name": "ERC1155",
							"nameLocation": "579:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 19,
									"libraryName": {
										"id": 17,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1730,
										"src": "649:7:0"
									},
									"nodeType": "UsingForDirective",
									"src": "643:26:0",
									"typeName": {
										"id": 18,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "661:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"constant": false,
									"id": 25,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "780:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 1222,
									"src": "724:65:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(uint256 => mapping(address => uint256))"
									},
									"typeName": {
										"id": 24,
										"keyType": {
											"id": 20,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "732:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "724:47:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(uint256 => mapping(address => uint256))"
										},
										"valueType": {
											"id": 23,
											"keyType": {
												"id": 21,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "751:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "743:27:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 22,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "762:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 31,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "899:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 1222,
									"src": "846:71:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 30,
										"keyType": {
											"id": 26,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "854:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "846:44:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueType": {
											"id": 29,
											"keyType": {
												"id": 27,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "873:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "865:24:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueType": {
												"id": 28,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "884:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 33,
									"mutability": "mutable",
									"name": "_uri",
									"nameLocation": "1053:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 1222,
									"src": "1038:19:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 32,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1038:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 43,
										"nodeType": "Block",
										"src": "1139:30:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 40,
															"name": "uri_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 36,
															"src": "1157:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 39,
														"name": "_setURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 555,
														"src": "1149:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory)"
														}
													},
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1149:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 42,
												"nodeType": "ExpressionStatement",
												"src": "1149:13:0"
											}
										]
									},
									"documentation": {
										"id": 34,
										"nodeType": "StructuredDocumentation",
										"src": "1064:38:0",
										"text": " @dev See {_setURI}."
									},
									"id": 44,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 37,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "uri_",
												"nameLocation": "1133:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1119:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 35,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1119:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1118:20:0"
									},
									"returnParameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1139:0:0"
									},
									"scope": 1222,
									"src": "1107:62:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1775,
										1787
									],
									"body": {
										"id": 74,
										"nodeType": "Block",
										"src": "1344:197:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 72,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 67,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 60,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 55,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 47,
																"src": "1373:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 57,
																			"name": "IERC1155",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1344,
																			"src": "1393:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155_$1344_$",
																				"typeString": "type(contract IERC1155)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC1155_$1344_$",
																				"typeString": "type(contract IERC1155)"
																			}
																		],
																		"id": 56,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1388:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 58,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1388:14:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155_$1344",
																		"typeString": "type(contract IERC1155)"
																	}
																},
																"id": 59,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1388:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1373:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 66,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 61,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 47,
																"src": "1430:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 63,
																			"name": "IERC1155MetadataURI",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1400,
																			"src": "1450:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155MetadataURI_$1400_$",
																				"typeString": "type(contract IERC1155MetadataURI)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC1155MetadataURI_$1400_$",
																				"typeString": "type(contract IERC1155MetadataURI)"
																			}
																		],
																		"id": 62,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1445:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 64,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1445:25:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155MetadataURI_$1400",
																		"typeString": "type(contract IERC1155MetadataURI)"
																	}
																},
																"id": 65,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1445:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1430:52:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1373:109:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 70,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 47,
																"src": "1522:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 68,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1498:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC1155_$1222_$",
																	"typeString": "type(contract super ERC1155)"
																}
															},
															"id": 69,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1775,
															"src": "1498:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 71,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1498:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1373:161:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 54,
												"id": 73,
												"nodeType": "Return",
												"src": "1354:180:0"
											}
										]
									},
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1175:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 75,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1245:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 51,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 49,
												"name": "ERC165",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1776,
												"src": "1312:6:0"
											},
											{
												"id": 50,
												"name": "IERC165",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1788,
												"src": "1320:7:0"
											}
										],
										"src": "1303:25:0"
									},
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1270:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 75,
												"src": "1263:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 46,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1263:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1262:20:0"
									},
									"returnParameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 75,
												"src": "1338:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 52,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1338:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1337:6:0"
									},
									"scope": 1222,
									"src": "1236:305:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1399
									],
									"body": {
										"id": 86,
										"nodeType": "Block",
										"src": "2015:28:0",
										"statements": [
											{
												"expression": {
													"id": 84,
													"name": "_uri",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 33,
													"src": "2032:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 83,
												"id": 85,
												"nodeType": "Return",
												"src": "2025:11:0"
											}
										]
									},
									"documentation": {
										"id": 76,
										"nodeType": "StructuredDocumentation",
										"src": "1547:388:0",
										"text": " @dev See {IERC1155MetadataURI-uri}.\n This implementation returns the same URI for *all* token types. It relies\n on the token type ID substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n Clients calling this function must replace the `\\{id\\}` substring with the\n actual token type ID."
									},
									"functionSelector": "0e89341c",
									"id": 87,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "uri",
									"nameLocation": "1949:3:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 80,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1982:8:0"
									},
									"parameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 78,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "1953:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 77,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1953:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1952:9:0"
									},
									"returnParameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 82,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "2000:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 81,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2000:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1999:15:0"
									},
									"scope": 1222,
									"src": "1940:103:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1282
									],
									"body": {
										"id": 114,
										"nodeType": "Block",
										"src": "2280:132:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 104,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 99,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 90,
																"src": "2298:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 102,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2317:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 101,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2309:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 100,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2309:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 103,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2309:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2298:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2061646472657373207a65726f206973206e6f7420612076616c6964206f776e6572",
															"id": 105,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2321:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad",
																"typeString": "literal_string \"ERC1155: address zero is not a valid owner\""
															},
															"value": "ERC1155: address zero is not a valid owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad",
																"typeString": "literal_string \"ERC1155: address zero is not a valid owner\""
															}
														],
														"id": 98,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2290:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2290:76:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 107,
												"nodeType": "ExpressionStatement",
												"src": "2290:76:0"
											},
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 108,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 25,
															"src": "2383:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(uint256 => mapping(address => uint256))"
															}
														},
														"id": 110,
														"indexExpression": {
															"id": 109,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 92,
															"src": "2393:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2383:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 112,
													"indexExpression": {
														"id": 111,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 90,
														"src": "2397:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2383:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 97,
												"id": 113,
												"nodeType": "Return",
												"src": "2376:29:0"
											}
										]
									},
									"documentation": {
										"id": 88,
										"nodeType": "StructuredDocumentation",
										"src": "2049:131:0",
										"text": " @dev See {IERC1155-balanceOf}.\n Requirements:\n - `account` cannot be the zero address."
									},
									"functionSelector": "00fdd58e",
									"id": 115,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2194:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 94,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2253:8:0"
									},
									"parameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 90,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2212:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "2204:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 89,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2204:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 92,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "2229:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "2221:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 91,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2221:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2203:29:0"
									},
									"returnParameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "2271:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 95,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2271:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2270:9:0"
									},
									"scope": 1222,
									"src": "2185:227:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1295
									],
									"body": {
										"id": 178,
										"nodeType": "Block",
										"src": "2742:335:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 134,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 130,
																	"name": "accounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 119,
																	"src": "2760:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																		"typeString": "address[] memory"
																	}
																},
																"id": 131,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "2760:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 132,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 122,
																	"src": "2779:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 133,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "2779:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2760:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206163636f756e747320616e6420696473206c656e677468206d69736d61746368",
															"id": 135,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2791:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5",
																"typeString": "literal_string \"ERC1155: accounts and ids length mismatch\""
															},
															"value": "ERC1155: accounts and ids length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5",
																"typeString": "literal_string \"ERC1155: accounts and ids length mismatch\""
															}
														],
														"id": 129,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2752:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2752:83:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 137,
												"nodeType": "ExpressionStatement",
												"src": "2752:83:0"
											},
											{
												"assignments": [
													142
												],
												"declarations": [
													{
														"constant": false,
														"id": 142,
														"mutability": "mutable",
														"name": "batchBalances",
														"nameLocation": "2863:13:0",
														"nodeType": "VariableDeclaration",
														"scope": 178,
														"src": "2846:30:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 140,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2846:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 141,
															"nodeType": "ArrayTypeName",
															"src": "2846:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 149,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 146,
																"name": "accounts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 119,
																"src": "2893:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																}
															},
															"id": 147,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2893:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 145,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2879:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 143,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2883:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 144,
															"nodeType": "ArrayTypeName",
															"src": "2883:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2879:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2846:63:0"
											},
											{
												"body": {
													"id": 174,
													"nodeType": "Block",
													"src": "2966:74:0",
													"statements": [
														{
															"expression": {
																"id": 172,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 161,
																		"name": "batchBalances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 142,
																		"src": "2980:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 163,
																	"indexExpression": {
																		"id": 162,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 151,
																		"src": "2994:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2980:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"baseExpression": {
																				"id": 165,
																				"name": "accounts",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 119,
																				"src": "3009:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																					"typeString": "address[] memory"
																				}
																			},
																			"id": 167,
																			"indexExpression": {
																				"id": 166,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 151,
																				"src": "3018:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3009:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"baseExpression": {
																				"id": 168,
																				"name": "ids",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 122,
																				"src": "3022:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 170,
																			"indexExpression": {
																				"id": 169,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 151,
																				"src": "3026:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3022:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 164,
																		"name": "balanceOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 115,
																		"src": "2999:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (address,uint256) view returns (uint256)"
																		}
																	},
																	"id": 171,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2999:30:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2980:49:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 173,
															"nodeType": "ExpressionStatement",
															"src": "2980:49:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 154,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 151,
														"src": "2940:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 155,
															"name": "accounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 119,
															"src": "2944:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 156,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2944:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2940:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 175,
												"initializationExpression": {
													"assignments": [
														151
													],
													"declarations": [
														{
															"constant": false,
															"id": 151,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2933:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 175,
															"src": "2925:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 150,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2925:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 153,
													"initialValue": {
														"hexValue": "30",
														"id": 152,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2937:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2925:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 159,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "2961:3:0",
														"subExpression": {
															"id": 158,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 151,
															"src": "2963:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 160,
													"nodeType": "ExpressionStatement",
													"src": "2961:3:0"
												},
												"nodeType": "ForStatement",
												"src": "2920:120:0"
											},
											{
												"expression": {
													"id": 176,
													"name": "batchBalances",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 142,
													"src": "3057:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 128,
												"id": 177,
												"nodeType": "Return",
												"src": "3050:20:0"
											}
										]
									},
									"documentation": {
										"id": 116,
										"nodeType": "StructuredDocumentation",
										"src": "2418:146:0",
										"text": " @dev See {IERC1155-balanceOfBatch}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 179,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "2578:14:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 124,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2694:8:0"
									},
									"parameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "2610:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "2593:25:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 117,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2593:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 118,
													"nodeType": "ArrayTypeName",
													"src": "2593:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2637:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "2620:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 120,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2620:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 121,
													"nodeType": "ArrayTypeName",
													"src": "2620:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2592:49:0"
									},
									"returnParameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "2720:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 125,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2720:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 126,
													"nodeType": "ArrayTypeName",
													"src": "2720:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2719:18:0"
									},
									"scope": 1222,
									"src": "2569:508:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1303
									],
									"body": {
										"id": 195,
										"nodeType": "Block",
										"src": "3229:69:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 189,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1742,
																"src": "3258:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 190,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3258:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 191,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 182,
															"src": "3272:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 192,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 184,
															"src": "3282:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 188,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1027,
														"src": "3239:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3239:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 194,
												"nodeType": "ExpressionStatement",
												"src": "3239:52:0"
											}
										]
									},
									"documentation": {
										"id": 180,
										"nodeType": "StructuredDocumentation",
										"src": "3083:57:0",
										"text": " @dev See {IERC1155-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 196,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "3154:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 186,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3220:8:0"
									},
									"parameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3180:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "3172:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 181,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3172:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3195:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "3190:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 183,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3190:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3171:33:0"
									},
									"returnParameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3229:0:0"
									},
									"scope": 1222,
									"src": "3145:153:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1313
									],
									"body": {
										"id": 213,
										"nodeType": "Block",
										"src": "3470:61:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 207,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 31,
															"src": "3487:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 209,
														"indexExpression": {
															"id": 208,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 199,
															"src": "3506:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3487:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 211,
													"indexExpression": {
														"id": 210,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 201,
														"src": "3515:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3487:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 206,
												"id": 212,
												"nodeType": "Return",
												"src": "3480:44:0"
											}
										]
									},
									"documentation": {
										"id": 197,
										"nodeType": "StructuredDocumentation",
										"src": "3304:56:0",
										"text": " @dev See {IERC1155-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 214,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "3374:16:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 203,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3446:8:0"
									},
									"parameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3399:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3391:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3391:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3416:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3408:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 200,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3408:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3390:35:0"
									},
									"returnParameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3464:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 204,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3464:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3463:6:0"
									},
									"scope": 1222,
									"src": "3365:166:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1327
									],
									"body": {
										"id": 251,
										"nodeType": "Block",
										"src": "3767:225:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 239,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 233,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 230,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 217,
																	"src": "3798:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 231,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1742,
																		"src": "3806:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 232,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3806:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "3798:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 235,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 217,
																		"src": "3839:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 236,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1742,
																			"src": "3845:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 237,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3845:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 234,
																	"name": "isApprovedForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 214,
																	"src": "3822:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view returns (bool)"
																	}
																},
																"id": 238,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3822:36:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3798:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f766564",
															"id": 240,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3872:48:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156",
																"typeString": "literal_string \"ERC1155: caller is not token owner or approved\""
															},
															"value": "ERC1155: caller is not token owner or approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156",
																"typeString": "literal_string \"ERC1155: caller is not token owner or approved\""
															}
														],
														"id": 229,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3777:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3777:153:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 242,
												"nodeType": "ExpressionStatement",
												"src": "3777:153:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 244,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 217,
															"src": "3958:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 245,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 219,
															"src": "3964:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 246,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 221,
															"src": "3968:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 247,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 223,
															"src": "3972:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 248,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 225,
															"src": "3980:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 243,
														"name": "_safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 409,
														"src": "3940:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,bytes memory)"
														}
													},
													"id": 249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3940:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 250,
												"nodeType": "ExpressionStatement",
												"src": "3940:45:0"
											}
										]
									},
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3537:56:0",
										"text": " @dev See {IERC1155-safeTransferFrom}."
									},
									"functionSelector": "f242432a",
									"id": 252,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3607:16:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 227,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3758:8:0"
									},
									"parameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3641:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "3633:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3633:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3663:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "3655:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3655:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3683:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "3675:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3675:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3703:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "3695:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 222,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3695:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3732:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "3719:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 224,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3719:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3623:119:0"
									},
									"returnParameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3767:0:0"
									},
									"scope": 1222,
									"src": "3598:394:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1343
									],
									"body": {
										"id": 291,
										"nodeType": "Block",
										"src": "4258:232:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 279,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 273,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 270,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 255,
																	"src": "4289:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 271,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1742,
																		"src": "4297:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 272,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4297:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "4289:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 275,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 255,
																		"src": "4330:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 276,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1742,
																			"src": "4336:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 277,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4336:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 274,
																	"name": "isApprovedForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 214,
																	"src": "4313:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view returns (bool)"
																	}
																},
																"id": 278,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4313:36:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4289:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f766564",
															"id": 280,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4363:48:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156",
																"typeString": "literal_string \"ERC1155: caller is not token owner or approved\""
															},
															"value": "ERC1155: caller is not token owner or approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156",
																"typeString": "literal_string \"ERC1155: caller is not token owner or approved\""
															}
														],
														"id": 269,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4268:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 281,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4268:153:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 282,
												"nodeType": "ExpressionStatement",
												"src": "4268:153:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 284,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 255,
															"src": "4454:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 285,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 257,
															"src": "4460:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 286,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 260,
															"src": "4464:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 287,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 263,
															"src": "4469:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 288,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 265,
															"src": "4478:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 283,
														"name": "_safeBatchTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 544,
														"src": "4431:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4431:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 290,
												"nodeType": "ExpressionStatement",
												"src": "4431:52:0"
											}
										]
									},
									"documentation": {
										"id": 253,
										"nodeType": "StructuredDocumentation",
										"src": "3998:61:0",
										"text": " @dev See {IERC1155-safeBatchTransferFrom}."
									},
									"functionSelector": "2eb2c2d6",
									"id": 292,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nameLocation": "4073:21:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 267,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4249:8:0"
									},
									"parameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4112:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "4104:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 254,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4104:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4134:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "4126:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4126:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "4163:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "4146:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 258,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4146:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 259,
													"nodeType": "ArrayTypeName",
													"src": "4146:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "4193:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "4176:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 261,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4176:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 262,
													"nodeType": "ArrayTypeName",
													"src": "4176:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4223:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "4210:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 264,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4210:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4094:139:0"
									},
									"returnParameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4258:0:0"
									},
									"scope": 1222,
									"src": "4064:426:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 408,
										"nodeType": "Block",
										"src": "5103:784:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 312,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 307,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 297,
																"src": "5121:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 310,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5135:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 309,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5127:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 308,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5127:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 311,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5127:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5121:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 313,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5139:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															},
															"value": "ERC1155: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															}
														],
														"id": 306,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5113:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5113:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 315,
												"nodeType": "ExpressionStatement",
												"src": "5113:66:0"
											},
											{
												"assignments": [
													317
												],
												"declarations": [
													{
														"constant": false,
														"id": 317,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "5198:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 408,
														"src": "5190:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 316,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5190:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 320,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 318,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1742,
														"src": "5209:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5209:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5190:31:0"
											},
											{
												"assignments": [
													325
												],
												"declarations": [
													{
														"constant": false,
														"id": 325,
														"mutability": "mutable",
														"name": "ids",
														"nameLocation": "5248:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 408,
														"src": "5231:20:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 323,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "5231:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 324,
															"nodeType": "ArrayTypeName",
															"src": "5231:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 329,
												"initialValue": {
													"arguments": [
														{
															"id": 327,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 299,
															"src": "5272:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 326,
														"name": "_asSingletonArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1221,
														"src": "5254:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														}
													},
													"id": 328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5254:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5231:44:0"
											},
											{
												"assignments": [
													334
												],
												"declarations": [
													{
														"constant": false,
														"id": 334,
														"mutability": "mutable",
														"name": "amounts",
														"nameLocation": "5302:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 408,
														"src": "5285:24:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 332,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "5285:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 333,
															"nodeType": "ArrayTypeName",
															"src": "5285:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 338,
												"initialValue": {
													"arguments": [
														{
															"id": 336,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 301,
															"src": "5330:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 335,
														"name": "_asSingletonArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1221,
														"src": "5312:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														}
													},
													"id": 337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5312:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5285:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 340,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 317,
															"src": "5369:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 341,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 295,
															"src": "5379:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 342,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 297,
															"src": "5385:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 343,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 325,
															"src": "5389:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 344,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 334,
															"src": "5394:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 345,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 303,
															"src": "5403:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 339,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1046,
														"src": "5348:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5348:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 347,
												"nodeType": "ExpressionStatement",
												"src": "5348:60:0"
											},
											{
												"assignments": [
													349
												],
												"declarations": [
													{
														"constant": false,
														"id": 349,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "5427:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 408,
														"src": "5419:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 348,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5419:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 355,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 350,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 25,
															"src": "5441:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(uint256 => mapping(address => uint256))"
															}
														},
														"id": 352,
														"indexExpression": {
															"id": 351,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 299,
															"src": "5451:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5441:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 354,
													"indexExpression": {
														"id": 353,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "5455:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5441:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5419:41:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 359,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 357,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 349,
																"src": "5478:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 358,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 301,
																"src": "5493:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5478:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572",
															"id": 360,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5501:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
															},
															"value": "ERC1155: insufficient balance for transfer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
															}
														],
														"id": 356,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5470:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5470:76:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 362,
												"nodeType": "ExpressionStatement",
												"src": "5470:76:0"
											},
											{
												"id": 373,
												"nodeType": "UncheckedBlock",
												"src": "5556:77:0",
												"statements": [
													{
														"expression": {
															"id": 371,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 363,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 25,
																		"src": "5580:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 366,
																	"indexExpression": {
																		"id": 364,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 299,
																		"src": "5590:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5580:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 367,
																"indexExpression": {
																	"id": 365,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 295,
																	"src": "5594:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "5580:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 370,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 368,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 349,
																	"src": "5602:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 369,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 301,
																	"src": "5616:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5602:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5580:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 372,
														"nodeType": "ExpressionStatement",
														"src": "5580:42:0"
													}
												]
											},
											{
												"expression": {
													"id": 380,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 374,
																"name": "_balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 25,
																"src": "5642:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(uint256 => mapping(address => uint256))"
																}
															},
															"id": 377,
															"indexExpression": {
																"id": 375,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 299,
																"src": "5652:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5642:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 378,
														"indexExpression": {
															"id": 376,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 297,
															"src": "5656:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5642:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 379,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 301,
														"src": "5663:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5642:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 381,
												"nodeType": "ExpressionStatement",
												"src": "5642:27:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 383,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 317,
															"src": "5700:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 384,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 295,
															"src": "5710:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 385,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 297,
															"src": "5716:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 386,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 299,
															"src": "5720:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 387,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 301,
															"src": "5724:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 382,
														"name": "TransferSingle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1241,
														"src": "5685:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5685:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 389,
												"nodeType": "EmitStatement",
												"src": "5680:51:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 391,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 317,
															"src": "5762:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 392,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 295,
															"src": "5772:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 393,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 297,
															"src": "5778:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 394,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 325,
															"src": "5782:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 395,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 334,
															"src": "5787:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 396,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 303,
															"src": "5796:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 390,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1065,
														"src": "5742:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 397,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5742:59:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 398,
												"nodeType": "ExpressionStatement",
												"src": "5742:59:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 400,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 317,
															"src": "5843:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 401,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 295,
															"src": "5853:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 402,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 297,
															"src": "5859:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 403,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 299,
															"src": "5863:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 404,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 301,
															"src": "5867:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 405,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 303,
															"src": "5875:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 399,
														"name": "_doSafeTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1128,
														"src": "5812:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256,bytes memory)"
														}
													},
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5812:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 407,
												"nodeType": "ExpressionStatement",
												"src": "5812:68:0"
											}
										]
									},
									"documentation": {
										"id": 293,
										"nodeType": "StructuredDocumentation",
										"src": "4496:439:0",
										"text": " @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - `from` must have a balance of tokens of type `id` of at least `amount`.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"id": 409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransferFrom",
									"nameLocation": "4949:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4984:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "4976:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 294,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4976:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 297,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5006:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "4998:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 296,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4998:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 299,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "5026:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "5018:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 298,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5018:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5046:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "5038:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 300,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5038:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5075:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "5062:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 302,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5062:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4966:119:0"
									},
									"returnParameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5103:0:0"
									},
									"scope": 1222,
									"src": "4940:947:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 543,
										"nodeType": "Block",
										"src": "6421:927:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 430,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 426,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 417,
																	"src": "6439:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 427,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "6439:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 428,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 420,
																	"src": "6453:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 429,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "6453:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6439:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
															"id": 431,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6469:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															},
															"value": "ERC1155: ids and amounts length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															}
														],
														"id": 425,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6431:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 432,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6431:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 433,
												"nodeType": "ExpressionStatement",
												"src": "6431:81:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 440,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 435,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 414,
																"src": "6530:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6544:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 437,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6536:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 436,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6536:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 439,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6536:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6530:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 441,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6548:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															},
															"value": "ERC1155: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															}
														],
														"id": 434,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6522:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6522:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 443,
												"nodeType": "ExpressionStatement",
												"src": "6522:66:0"
											},
											{
												"assignments": [
													445
												],
												"declarations": [
													{
														"constant": false,
														"id": 445,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "6607:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 543,
														"src": "6599:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 444,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6599:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 448,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 446,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1742,
														"src": "6618:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6618:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6599:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 450,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 445,
															"src": "6662:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 451,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "6672:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 452,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 414,
															"src": "6678:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 453,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "6682:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 454,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 420,
															"src": "6687:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 455,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 422,
															"src": "6696:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 449,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1046,
														"src": "6641:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6641:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 457,
												"nodeType": "ExpressionStatement",
												"src": "6641:60:0"
											},
											{
												"body": {
													"id": 515,
													"nodeType": "Block",
													"src": "6753:370:0",
													"statements": [
														{
															"assignments": [
																470
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 470,
																	"mutability": "mutable",
																	"name": "id",
																	"nameLocation": "6775:2:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 515,
																	"src": "6767:10:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 469,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6767:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 474,
															"initialValue": {
																"baseExpression": {
																	"id": 471,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 417,
																	"src": "6780:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 473,
																"indexExpression": {
																	"id": 472,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 459,
																	"src": "6784:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6780:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6767:19:0"
														},
														{
															"assignments": [
																476
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 476,
																	"mutability": "mutable",
																	"name": "amount",
																	"nameLocation": "6808:6:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 515,
																	"src": "6800:14:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 475,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6800:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 480,
															"initialValue": {
																"baseExpression": {
																	"id": 477,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 420,
																	"src": "6817:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 479,
																"indexExpression": {
																	"id": 478,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 459,
																	"src": "6825:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6817:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6800:27:0"
														},
														{
															"assignments": [
																482
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 482,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6850:11:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 515,
																	"src": "6842:19:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 481,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6842:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 488,
															"initialValue": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 483,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 25,
																		"src": "6864:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 485,
																	"indexExpression": {
																		"id": 484,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 470,
																		"src": "6874:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6864:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 487,
																"indexExpression": {
																	"id": 486,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 412,
																	"src": "6878:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6864:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6842:41:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 492,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 490,
																			"name": "fromBalance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 482,
																			"src": "6905:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 491,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 476,
																			"src": "6920:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6905:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572",
																		"id": 493,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6928:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																			"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
																		},
																		"value": "ERC1155: insufficient balance for transfer"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																			"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
																		}
																	],
																	"id": 489,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "6897:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 494,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6897:76:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 495,
															"nodeType": "ExpressionStatement",
															"src": "6897:76:0"
														},
														{
															"id": 506,
															"nodeType": "UncheckedBlock",
															"src": "6987:85:0",
															"statements": [
																{
																	"expression": {
																		"id": 504,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"baseExpression": {
																					"id": 496,
																					"name": "_balances",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 25,
																					"src": "7015:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(uint256 => mapping(address => uint256))"
																					}
																				},
																				"id": 499,
																				"indexExpression": {
																					"id": 497,
																					"name": "id",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 470,
																					"src": "7025:2:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "7015:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 500,
																			"indexExpression": {
																				"id": 498,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 412,
																				"src": "7029:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7015:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 503,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 501,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 482,
																				"src": "7037:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 502,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 476,
																				"src": "7051:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7037:20:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7015:42:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 505,
																	"nodeType": "ExpressionStatement",
																	"src": "7015:42:0"
																}
															]
														},
														{
															"expression": {
																"id": 513,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 507,
																			"name": "_balances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 25,
																			"src": "7085:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(uint256 => mapping(address => uint256))"
																			}
																		},
																		"id": 510,
																		"indexExpression": {
																			"id": 508,
																			"name": "id",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 470,
																			"src": "7095:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "7085:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 511,
																	"indexExpression": {
																		"id": 509,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 414,
																		"src": "7099:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7085:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 512,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 476,
																	"src": "7106:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7085:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 514,
															"nodeType": "ExpressionStatement",
															"src": "7085:27:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 462,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 459,
														"src": "6732:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 463,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "6736:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 464,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6736:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6732:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 516,
												"initializationExpression": {
													"assignments": [
														459
													],
													"declarations": [
														{
															"constant": false,
															"id": 459,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "6725:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 516,
															"src": "6717:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 458,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "6717:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 461,
													"initialValue": {
														"hexValue": "30",
														"id": 460,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6729:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "6717:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 467,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "6748:3:0",
														"subExpression": {
															"id": 466,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 459,
															"src": "6750:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 468,
													"nodeType": "ExpressionStatement",
													"src": "6748:3:0"
												},
												"nodeType": "ForStatement",
												"src": "6712:411:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 518,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 445,
															"src": "7152:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 519,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "7162:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 520,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 414,
															"src": "7168:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 521,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "7172:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 522,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 420,
															"src": "7177:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 517,
														"name": "TransferBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1256,
														"src": "7138:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 523,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7138:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 524,
												"nodeType": "EmitStatement",
												"src": "7133:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 526,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 445,
															"src": "7216:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 527,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "7226:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 528,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 414,
															"src": "7232:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 529,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "7236:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 530,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 420,
															"src": "7241:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 531,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 422,
															"src": "7250:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 525,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1065,
														"src": "7196:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7196:59:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 533,
												"nodeType": "ExpressionStatement",
												"src": "7196:59:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 535,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 445,
															"src": "7302:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 536,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "7312:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 537,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 414,
															"src": "7318:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 538,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "7322:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 539,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 420,
															"src": "7327:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 540,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 422,
															"src": "7336:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 534,
														"name": "_doSafeBatchTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1193,
														"src": "7266:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 541,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7266:75:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 542,
												"nodeType": "ExpressionStatement",
												"src": "7266:75:0"
											}
										]
									},
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "5893:335:0",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"id": 544,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeBatchTransferFrom",
									"nameLocation": "6242:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6282:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 544,
												"src": "6274:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6274:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6304:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 544,
												"src": "6296:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6296:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "6333:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 544,
												"src": "6316:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 415,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "6316:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 416,
													"nodeType": "ArrayTypeName",
													"src": "6316:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "6363:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 544,
												"src": "6346:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 418,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "6346:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 419,
													"nodeType": "ArrayTypeName",
													"src": "6346:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 422,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6393:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 544,
												"src": "6380:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 421,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6380:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6264:139:0"
									},
									"returnParameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6421:0:0"
									},
									"scope": 1222,
									"src": "6233:1115:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 554,
										"nodeType": "Block",
										"src": "8227:30:0",
										"statements": [
											{
												"expression": {
													"id": 552,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 550,
														"name": "_uri",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 33,
														"src": "8237:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 551,
														"name": "newuri",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 547,
														"src": "8244:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "8237:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 553,
												"nodeType": "ExpressionStatement",
												"src": "8237:13:0"
											}
										]
									},
									"documentation": {
										"id": 545,
										"nodeType": "StructuredDocumentation",
										"src": "7354:812:0",
										"text": " @dev Sets a new URI for all token types, by relying on the token type ID\n substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n URI or any of the amounts in the JSON file at said URI will be replaced by\n clients with the token type ID.\n For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n interpreted by clients as\n `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n for token type ID 0x4cce0.\n See {uri}.\n Because these URIs cannot be meaningfully represented by the {URI} event,\n this function emits no events."
									},
									"id": 555,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setURI",
									"nameLocation": "8180:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 548,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "newuri",
												"nameLocation": "8202:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "8188:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 546,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8188:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8187:22:0"
									},
									"returnParameters": {
										"id": 549,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8227:0:0"
									},
									"scope": 1222,
									"src": "8171:86:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 655,
										"nodeType": "Block",
										"src": "8759:580:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 573,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 568,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 558,
																"src": "8777:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 571,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8791:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 570,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8783:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 569,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8783:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 572,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8783:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8777:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 574,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8795:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															},
															"value": "ERC1155: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															}
														],
														"id": 567,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8769:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 575,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8769:62:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 576,
												"nodeType": "ExpressionStatement",
												"src": "8769:62:0"
											},
											{
												"assignments": [
													578
												],
												"declarations": [
													{
														"constant": false,
														"id": 578,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "8850:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 655,
														"src": "8842:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 577,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8842:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 581,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 579,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1742,
														"src": "8861:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 580,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8861:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8842:31:0"
											},
											{
												"assignments": [
													586
												],
												"declarations": [
													{
														"constant": false,
														"id": 586,
														"mutability": "mutable",
														"name": "ids",
														"nameLocation": "8900:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 655,
														"src": "8883:20:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 584,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "8883:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 585,
															"nodeType": "ArrayTypeName",
															"src": "8883:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 590,
												"initialValue": {
													"arguments": [
														{
															"id": 588,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 560,
															"src": "8924:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 587,
														"name": "_asSingletonArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1221,
														"src": "8906:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														}
													},
													"id": 589,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8906:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8883:44:0"
											},
											{
												"assignments": [
													595
												],
												"declarations": [
													{
														"constant": false,
														"id": 595,
														"mutability": "mutable",
														"name": "amounts",
														"nameLocation": "8954:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 655,
														"src": "8937:24:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 593,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "8937:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 594,
															"nodeType": "ArrayTypeName",
															"src": "8937:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 599,
												"initialValue": {
													"arguments": [
														{
															"id": 597,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 562,
															"src": "8982:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 596,
														"name": "_asSingletonArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1221,
														"src": "8964:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														}
													},
													"id": 598,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8964:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8937:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 601,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 578,
															"src": "9021:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 604,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9039:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 603,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9031:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 602,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9031:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 605,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9031:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 606,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 558,
															"src": "9043:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 607,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 586,
															"src": "9047:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 608,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 595,
															"src": "9052:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 609,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 564,
															"src": "9061:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 600,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1046,
														"src": "9000:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 610,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9000:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 611,
												"nodeType": "ExpressionStatement",
												"src": "9000:66:0"
											},
											{
												"expression": {
													"id": 618,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 612,
																"name": "_balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 25,
																"src": "9077:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(uint256 => mapping(address => uint256))"
																}
															},
															"id": 615,
															"indexExpression": {
																"id": 613,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 560,
																"src": "9087:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9077:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 616,
														"indexExpression": {
															"id": 614,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 558,
															"src": "9091:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9077:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 617,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 562,
														"src": "9098:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9077:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 619,
												"nodeType": "ExpressionStatement",
												"src": "9077:27:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 621,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 578,
															"src": "9134:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 624,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9152:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 623,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9144:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 622,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9144:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 625,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9144:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 626,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 558,
															"src": "9156:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 627,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 560,
															"src": "9160:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 628,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 562,
															"src": "9164:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 620,
														"name": "TransferSingle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1241,
														"src": "9119:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9119:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 630,
												"nodeType": "EmitStatement",
												"src": "9114:57:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 632,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 578,
															"src": "9202:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 635,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9220:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 634,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9212:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 633,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9212:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 636,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9212:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 637,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 558,
															"src": "9224:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 638,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 586,
															"src": "9228:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 639,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 595,
															"src": "9233:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 640,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 564,
															"src": "9242:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 631,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1065,
														"src": "9182:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 641,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9182:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 642,
												"nodeType": "ExpressionStatement",
												"src": "9182:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 644,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 578,
															"src": "9289:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 647,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9307:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 646,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9299:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 645,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9299:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 648,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9299:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 649,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 558,
															"src": "9311:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 650,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 560,
															"src": "9315:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 651,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 562,
															"src": "9319:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 652,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 564,
															"src": "9327:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 643,
														"name": "_doSafeTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1128,
														"src": "9258:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256,bytes memory)"
														}
													},
													"id": 653,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9258:74:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 654,
												"nodeType": "ExpressionStatement",
												"src": "9258:74:0"
											}
										]
									},
									"documentation": {
										"id": 556,
										"nodeType": "StructuredDocumentation",
										"src": "8263:362:0",
										"text": " @dev Creates `amount` tokens of token type `id`, and assigns them to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"id": 656,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "8639:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 565,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 558,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8662:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 656,
												"src": "8654:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 557,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8654:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 560,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "8682:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 656,
												"src": "8674:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 559,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8674:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 562,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8702:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 656,
												"src": "8694:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 561,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8694:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 564,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8731:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 656,
												"src": "8718:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 563,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8718:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8644:97:0"
									},
									"returnParameters": {
										"id": 566,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8759:0:0"
									},
									"scope": 1222,
									"src": "8630:709:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 766,
										"nodeType": "Block",
										"src": "9883:637:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 676,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 671,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 659,
																"src": "9901:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 674,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9915:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 673,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9907:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 672,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9907:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 675,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9907:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9901:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 677,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9919:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															},
															"value": "ERC1155: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															}
														],
														"id": 670,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9893:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 678,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9893:62:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 679,
												"nodeType": "ExpressionStatement",
												"src": "9893:62:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 685,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 681,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 662,
																	"src": "9973:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 682,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "9973:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 683,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 665,
																	"src": "9987:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 684,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "9987:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9973:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10003:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															},
															"value": "ERC1155: ids and amounts length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															}
														],
														"id": 680,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9965:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9965:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 688,
												"nodeType": "ExpressionStatement",
												"src": "9965:81:0"
											},
											{
												"assignments": [
													690
												],
												"declarations": [
													{
														"constant": false,
														"id": 690,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "10065:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 766,
														"src": "10057:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 689,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10057:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 693,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 691,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1742,
														"src": "10076:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 692,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10076:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10057:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 695,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 690,
															"src": "10120:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 698,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10138:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 697,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10130:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 696,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10130:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 699,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10130:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 700,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 659,
															"src": "10142:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 701,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 662,
															"src": "10146:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 702,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 665,
															"src": "10151:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 703,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 667,
															"src": "10160:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 694,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1046,
														"src": "10099:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 704,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10099:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 705,
												"nodeType": "ExpressionStatement",
												"src": "10099:66:0"
											},
											{
												"body": {
													"id": 729,
													"nodeType": "Block",
													"src": "10217:60:0",
													"statements": [
														{
															"expression": {
																"id": 727,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 717,
																			"name": "_balances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 25,
																			"src": "10231:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(uint256 => mapping(address => uint256))"
																			}
																		},
																		"id": 722,
																		"indexExpression": {
																			"baseExpression": {
																				"id": 718,
																				"name": "ids",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 662,
																				"src": "10241:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 720,
																			"indexExpression": {
																				"id": 719,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 707,
																				"src": "10245:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "10241:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "10231:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 723,
																	"indexExpression": {
																		"id": 721,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 659,
																		"src": "10249:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "10231:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 724,
																		"name": "amounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 665,
																		"src": "10256:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 726,
																	"indexExpression": {
																		"id": 725,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 707,
																		"src": "10264:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "10256:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10231:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 728,
															"nodeType": "ExpressionStatement",
															"src": "10231:35:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 713,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 710,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 707,
														"src": "10196:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 711,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 662,
															"src": "10200:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 712,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "10200:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10196:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 730,
												"initializationExpression": {
													"assignments": [
														707
													],
													"declarations": [
														{
															"constant": false,
															"id": 707,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "10189:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 730,
															"src": "10181:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 706,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "10181:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 709,
													"initialValue": {
														"hexValue": "30",
														"id": 708,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10193:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "10181:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 715,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "10212:3:0",
														"subExpression": {
															"id": 714,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 707,
															"src": "10212:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 716,
													"nodeType": "ExpressionStatement",
													"src": "10212:3:0"
												},
												"nodeType": "ForStatement",
												"src": "10176:101:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 732,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 690,
															"src": "10306:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 735,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10324:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 734,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10316:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 733,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10316:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 736,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10316:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 737,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 659,
															"src": "10328:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 738,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 662,
															"src": "10332:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 739,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 665,
															"src": "10337:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 731,
														"name": "TransferBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1256,
														"src": "10292:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 740,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10292:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 741,
												"nodeType": "EmitStatement",
												"src": "10287:58:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 743,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 690,
															"src": "10376:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 746,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10394:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10386:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 744,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10386:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 747,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10386:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 748,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 659,
															"src": "10398:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 749,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 662,
															"src": "10402:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 750,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 665,
															"src": "10407:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 751,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 667,
															"src": "10416:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 742,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1065,
														"src": "10356:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 752,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10356:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 753,
												"nodeType": "ExpressionStatement",
												"src": "10356:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 755,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 690,
															"src": "10468:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 758,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10486:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 757,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10478:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 756,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10478:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 759,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10478:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 760,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 659,
															"src": "10490:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 761,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 662,
															"src": "10494:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 762,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 665,
															"src": "10499:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 763,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 667,
															"src": "10508:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 754,
														"name": "_doSafeBatchTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1193,
														"src": "10432:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10432:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 765,
												"nodeType": "ExpressionStatement",
												"src": "10432:81:0"
											}
										]
									},
									"documentation": {
										"id": 657,
										"nodeType": "StructuredDocumentation",
										"src": "9345:379:0",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `amounts` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"id": 767,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mintBatch",
									"nameLocation": "9738:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 659,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9766:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "9758:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9758:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 662,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "9795:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "9778:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 660,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "9778:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 661,
													"nodeType": "ArrayTypeName",
													"src": "9778:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "9825:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "9808:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 663,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "9808:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 664,
													"nodeType": "ArrayTypeName",
													"src": "9808:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 667,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9855:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "9842:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 666,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9842:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9748:117:0"
									},
									"returnParameters": {
										"id": 669,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9883:0:0"
									},
									"scope": 1222,
									"src": "9729:791:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 871,
										"nodeType": "Block",
										"src": "10910:682:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 783,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 778,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 770,
																"src": "10928:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 781,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10944:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 780,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10936:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 779,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10936:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 782,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10936:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10928:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 784,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10948:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															},
															"value": "ERC1155: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															}
														],
														"id": 777,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10920:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 785,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10920:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 786,
												"nodeType": "ExpressionStatement",
												"src": "10920:66:0"
											},
											{
												"assignments": [
													788
												],
												"declarations": [
													{
														"constant": false,
														"id": 788,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "11005:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 871,
														"src": "10997:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 787,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10997:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 791,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 789,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1742,
														"src": "11016:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 790,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11016:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10997:31:0"
											},
											{
												"assignments": [
													796
												],
												"declarations": [
													{
														"constant": false,
														"id": 796,
														"mutability": "mutable",
														"name": "ids",
														"nameLocation": "11055:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 871,
														"src": "11038:20:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 794,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "11038:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 795,
															"nodeType": "ArrayTypeName",
															"src": "11038:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 800,
												"initialValue": {
													"arguments": [
														{
															"id": 798,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 772,
															"src": "11079:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 797,
														"name": "_asSingletonArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1221,
														"src": "11061:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														}
													},
													"id": 799,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11061:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11038:44:0"
											},
											{
												"assignments": [
													805
												],
												"declarations": [
													{
														"constant": false,
														"id": 805,
														"mutability": "mutable",
														"name": "amounts",
														"nameLocation": "11109:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 871,
														"src": "11092:24:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 803,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "11092:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 804,
															"nodeType": "ArrayTypeName",
															"src": "11092:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 809,
												"initialValue": {
													"arguments": [
														{
															"id": 807,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 774,
															"src": "11137:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 806,
														"name": "_asSingletonArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1221,
														"src": "11119:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														}
													},
													"id": 808,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11119:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11092:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 811,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 788,
															"src": "11176:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 812,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 770,
															"src": "11186:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 815,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11200:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 814,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11192:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 813,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11192:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 816,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11192:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 817,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 796,
															"src": "11204:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 818,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 805,
															"src": "11209:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 819,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11218:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 810,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1046,
														"src": "11155:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 820,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11155:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 821,
												"nodeType": "ExpressionStatement",
												"src": "11155:66:0"
											},
											{
												"assignments": [
													823
												],
												"declarations": [
													{
														"constant": false,
														"id": 823,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "11240:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 871,
														"src": "11232:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 822,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11232:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 829,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 824,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 25,
															"src": "11254:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(uint256 => mapping(address => uint256))"
															}
														},
														"id": 826,
														"indexExpression": {
															"id": 825,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 772,
															"src": "11264:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "11254:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 828,
													"indexExpression": {
														"id": 827,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 770,
														"src": "11268:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "11254:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11232:41:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 833,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 831,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 823,
																"src": "11291:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 832,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 774,
																"src": "11306:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11291:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 834,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11314:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
															},
															"value": "ERC1155: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
															}
														],
														"id": 830,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11283:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 835,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11283:70:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 836,
												"nodeType": "ExpressionStatement",
												"src": "11283:70:0"
											},
											{
												"id": 847,
												"nodeType": "UncheckedBlock",
												"src": "11363:77:0",
												"statements": [
													{
														"expression": {
															"id": 845,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 837,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 25,
																		"src": "11387:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 840,
																	"indexExpression": {
																		"id": 838,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 772,
																		"src": "11397:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "11387:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 841,
																"indexExpression": {
																	"id": 839,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 770,
																	"src": "11401:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "11387:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 844,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 842,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 823,
																	"src": "11409:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 843,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 774,
																	"src": "11423:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11409:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11387:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 846,
														"nodeType": "ExpressionStatement",
														"src": "11387:42:0"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 849,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 788,
															"src": "11470:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 850,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 770,
															"src": "11480:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 853,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11494:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 852,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11486:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 851,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11486:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 854,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11486:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 855,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 772,
															"src": "11498:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 856,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 774,
															"src": "11502:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 848,
														"name": "TransferSingle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1241,
														"src": "11455:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 857,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11455:54:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 858,
												"nodeType": "EmitStatement",
												"src": "11450:59:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 860,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 788,
															"src": "11540:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 861,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 770,
															"src": "11550:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 864,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11564:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 863,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11556:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 862,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11556:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 865,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11556:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 866,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 796,
															"src": "11568:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 867,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 805,
															"src": "11573:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 868,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11582:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 859,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1065,
														"src": "11520:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 869,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11520:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 870,
												"nodeType": "ExpressionStatement",
												"src": "11520:65:0"
											}
										]
									},
									"documentation": {
										"id": 768,
										"nodeType": "StructuredDocumentation",
										"src": "10526:275:0",
										"text": " @dev Destroys `amount` tokens of token type `id` from `from`\n Emits a {TransferSingle} event.\n Requirements:\n - `from` cannot be the zero address.\n - `from` must have at least `amount` tokens of token type `id`."
									},
									"id": 872,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "10815:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 775,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "10838:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 872,
												"src": "10830:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 769,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10830:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 772,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "10860:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 872,
												"src": "10852:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 771,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10852:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 774,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10880:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 872,
												"src": "10872:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 773,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10872:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10820:72:0"
									},
									"returnParameters": {
										"id": 776,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10910:0:0"
									},
									"scope": 1222,
									"src": "10806:786:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 994,
										"nodeType": "Block",
										"src": "11960:814:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 890,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 885,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 875,
																"src": "11978:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 888,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11994:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 887,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11986:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 886,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "11986:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 889,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11986:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11978:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 891,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11998:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															},
															"value": "ERC1155: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															}
														],
														"id": 884,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11970:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 892,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11970:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 893,
												"nodeType": "ExpressionStatement",
												"src": "11970:66:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 899,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 895,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 878,
																	"src": "12054:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 896,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "12054:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 897,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 881,
																	"src": "12068:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 898,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "12068:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12054:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
															"id": 900,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12084:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															},
															"value": "ERC1155: ids and amounts length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															}
														],
														"id": 894,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12046:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 901,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12046:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 902,
												"nodeType": "ExpressionStatement",
												"src": "12046:81:0"
											},
											{
												"assignments": [
													904
												],
												"declarations": [
													{
														"constant": false,
														"id": 904,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "12146:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 994,
														"src": "12138:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 903,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "12138:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 907,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 905,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1742,
														"src": "12157:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 906,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12157:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12138:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 909,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 904,
															"src": "12201:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 910,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 875,
															"src": "12211:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 913,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12225:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 912,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12217:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 911,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12217:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 914,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12217:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 915,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 878,
															"src": "12229:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 916,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 881,
															"src": "12234:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 917,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12243:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 908,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1046,
														"src": "12180:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 918,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12180:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 919,
												"nodeType": "ExpressionStatement",
												"src": "12180:66:0"
											},
											{
												"body": {
													"id": 969,
													"nodeType": "Block",
													"src": "12298:323:0",
													"statements": [
														{
															"assignments": [
																932
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 932,
																	"mutability": "mutable",
																	"name": "id",
																	"nameLocation": "12320:2:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 969,
																	"src": "12312:10:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 931,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "12312:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 936,
															"initialValue": {
																"baseExpression": {
																	"id": 933,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 878,
																	"src": "12325:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 935,
																"indexExpression": {
																	"id": 934,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 921,
																	"src": "12329:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "12325:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "12312:19:0"
														},
														{
															"assignments": [
																938
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 938,
																	"mutability": "mutable",
																	"name": "amount",
																	"nameLocation": "12353:6:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 969,
																	"src": "12345:14:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 937,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "12345:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 942,
															"initialValue": {
																"baseExpression": {
																	"id": 939,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 881,
																	"src": "12362:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 941,
																"indexExpression": {
																	"id": 940,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 921,
																	"src": "12370:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "12362:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "12345:27:0"
														},
														{
															"assignments": [
																944
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 944,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "12395:11:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 969,
																	"src": "12387:19:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 943,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "12387:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 950,
															"initialValue": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 945,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 25,
																		"src": "12409:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 947,
																	"indexExpression": {
																		"id": 946,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 932,
																		"src": "12419:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "12409:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 949,
																"indexExpression": {
																	"id": 948,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 875,
																	"src": "12423:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "12409:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "12387:41:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 954,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 952,
																			"name": "fromBalance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 944,
																			"src": "12450:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 953,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 938,
																			"src": "12465:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "12450:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "455243313135353a206275726e20616d6f756e7420657863656564732062616c616e6365",
																		"id": 955,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12473:38:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																			"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
																		},
																		"value": "ERC1155: burn amount exceeds balance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																			"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
																		}
																	],
																	"id": 951,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "12442:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 956,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12442:70:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 957,
															"nodeType": "ExpressionStatement",
															"src": "12442:70:0"
														},
														{
															"id": 968,
															"nodeType": "UncheckedBlock",
															"src": "12526:85:0",
															"statements": [
																{
																	"expression": {
																		"id": 966,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"baseExpression": {
																					"id": 958,
																					"name": "_balances",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 25,
																					"src": "12554:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(uint256 => mapping(address => uint256))"
																					}
																				},
																				"id": 961,
																				"indexExpression": {
																					"id": 959,
																					"name": "id",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 932,
																					"src": "12564:2:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "12554:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 962,
																			"indexExpression": {
																				"id": 960,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 875,
																				"src": "12568:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "12554:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 965,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 963,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 944,
																				"src": "12576:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 964,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 938,
																				"src": "12590:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "12576:20:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "12554:42:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 967,
																	"nodeType": "ExpressionStatement",
																	"src": "12554:42:0"
																}
															]
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 927,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 924,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 921,
														"src": "12277:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 925,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 878,
															"src": "12281:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 926,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "12281:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12277:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 970,
												"initializationExpression": {
													"assignments": [
														921
													],
													"declarations": [
														{
															"constant": false,
															"id": 921,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "12270:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 970,
															"src": "12262:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 920,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "12262:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 923,
													"initialValue": {
														"hexValue": "30",
														"id": 922,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12274:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "12262:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 929,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "12293:3:0",
														"subExpression": {
															"id": 928,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 921,
															"src": "12293:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 930,
													"nodeType": "ExpressionStatement",
													"src": "12293:3:0"
												},
												"nodeType": "ForStatement",
												"src": "12257:364:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 972,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 904,
															"src": "12650:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 973,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 875,
															"src": "12660:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 976,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12674:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 975,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12666:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 974,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12666:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 977,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12666:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 978,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 878,
															"src": "12678:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 979,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 881,
															"src": "12683:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 971,
														"name": "TransferBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1256,
														"src": "12636:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 980,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12636:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 981,
												"nodeType": "EmitStatement",
												"src": "12631:60:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 983,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 904,
															"src": "12722:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 984,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 875,
															"src": "12732:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 987,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12746:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 986,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12738:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 985,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12738:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 988,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12738:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 989,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 878,
															"src": "12750:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 990,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 881,
															"src": "12755:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 991,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12764:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 982,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1065,
														"src": "12702:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 992,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12702:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 993,
												"nodeType": "ExpressionStatement",
												"src": "12702:65:0"
											}
										]
									},
									"documentation": {
										"id": 873,
										"nodeType": "StructuredDocumentation",
										"src": "11598:228:0",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `amounts` must have the same length."
									},
									"id": 995,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burnBatch",
									"nameLocation": "11840:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 882,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 875,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "11868:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 995,
												"src": "11860:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 874,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11860:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 878,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "11899:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 995,
												"src": "11882:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 876,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "11882:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 877,
													"nodeType": "ArrayTypeName",
													"src": "11882:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 881,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "11929:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 995,
												"src": "11912:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 879,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "11912:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 880,
													"nodeType": "ArrayTypeName",
													"src": "11912:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11850:92:0"
									},
									"returnParameters": {
										"id": 883,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11960:0:0"
									},
									"scope": 1222,
									"src": "11831:943:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1026,
										"nodeType": "Block",
										"src": "13033:200:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1008,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1006,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 998,
																"src": "13051:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1007,
																"name": "operator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1000,
																"src": "13060:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "13051:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2073657474696e6720617070726f76616c2073746174757320666f722073656c66",
															"id": 1009,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13070:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2",
																"typeString": "literal_string \"ERC1155: setting approval status for self\""
															},
															"value": "ERC1155: setting approval status for self"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2",
																"typeString": "literal_string \"ERC1155: setting approval status for self\""
															}
														],
														"id": 1005,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13043:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1010,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13043:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1011,
												"nodeType": "ExpressionStatement",
												"src": "13043:71:0"
											},
											{
												"expression": {
													"id": 1018,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1012,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 31,
																"src": "13124:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1015,
															"indexExpression": {
																"id": 1013,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 998,
																"src": "13143:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "13124:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1016,
														"indexExpression": {
															"id": 1014,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1000,
															"src": "13150:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "13124:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1017,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1002,
														"src": "13162:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "13124:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1019,
												"nodeType": "ExpressionStatement",
												"src": "13124:46:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1021,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 998,
															"src": "13200:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1022,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1000,
															"src": "13207:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1023,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1002,
															"src": "13217:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1020,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1265,
														"src": "13185:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1024,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13185:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1025,
												"nodeType": "EmitStatement",
												"src": "13180:46:0"
											}
										]
									},
									"documentation": {
										"id": 996,
										"nodeType": "StructuredDocumentation",
										"src": "12780:125:0",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Emits an {ApprovalForAll} event."
									},
									"id": 1027,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "12919:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1003,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 998,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "12955:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1027,
												"src": "12947:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 997,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12947:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1000,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "12978:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1027,
												"src": "12970:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 999,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12970:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1002,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "13001:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1027,
												"src": "12996:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1001,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12996:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12937:78:0"
									},
									"returnParameters": {
										"id": 1004,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13033:0:0"
									},
									"scope": 1222,
									"src": "12910:323:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1045,
										"nodeType": "Block",
										"src": "14381:2:0",
										"statements": []
									},
									"documentation": {
										"id": 1028,
										"nodeType": "StructuredDocumentation",
										"src": "13239:925:0",
										"text": " @dev Hook that is called before any token transfer. This includes minting\n and burning, as well as batched variants.\n The same hook is called on both single and batched variants. For single\n transfers, the length of the `ids` and `amounts` arrays will be 1.\n Calling conditions (for each `id` and `amount` pair):\n - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n of token type `id` will be  transferred to `to`.\n - When `from` is zero, `amount` tokens of token type `id` will be minted\n for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n will be burned.\n - `from` and `to` are never both zero.\n - `ids` and `amounts` have the same, non-zero length.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 1046,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "14178:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1043,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1030,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "14216:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "14208:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1029,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14208:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1032,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "14242:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "14234:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1031,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14234:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1034,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14264:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "14256:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1033,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14256:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1037,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "14293:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "14276:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1035,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "14276:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1036,
													"nodeType": "ArrayTypeName",
													"src": "14276:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1040,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "14323:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "14306:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1038,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "14306:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1039,
													"nodeType": "ArrayTypeName",
													"src": "14306:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1042,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "14353:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "14340:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1041,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14340:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14198:165:0"
									},
									"returnParameters": {
										"id": 1044,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14381:0:0"
									},
									"scope": 1222,
									"src": "14169:214:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1064,
										"nodeType": "Block",
										"src": "15527:2:0",
										"statements": []
									},
									"documentation": {
										"id": 1047,
										"nodeType": "StructuredDocumentation",
										"src": "14389:922:0",
										"text": " @dev Hook that is called after any token transfer. This includes minting\n and burning, as well as batched variants.\n The same hook is called on both single and batched variants. For single\n transfers, the length of the `id` and `amount` arrays will be 1.\n Calling conditions (for each `id` and `amount` pair):\n - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n of token type `id` will be  transferred to `to`.\n - When `from` is zero, `amount` tokens of token type `id` will be minted\n for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n will be burned.\n - `from` and `to` are never both zero.\n - `ids` and `amounts` have the same, non-zero length.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 1065,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "15325:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1062,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1049,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "15362:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1065,
												"src": "15354:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1048,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15354:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1051,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "15388:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1065,
												"src": "15380:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1050,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15380:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1053,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15410:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1065,
												"src": "15402:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1052,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15402:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1056,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "15439:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1065,
												"src": "15422:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1054,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "15422:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1055,
													"nodeType": "ArrayTypeName",
													"src": "15422:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1059,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "15469:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1065,
												"src": "15452:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1057,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "15452:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1058,
													"nodeType": "ArrayTypeName",
													"src": "15452:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1061,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "15499:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1065,
												"src": "15486:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1060,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15486:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15344:165:0"
									},
									"returnParameters": {
										"id": 1063,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15527:0:0"
									},
									"scope": 1222,
									"src": "15316:213:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1127,
										"nodeType": "Block",
										"src": "15728:532:0",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1080,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1071,
															"src": "15742:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1081,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "isContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1418,
														"src": "15742:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 1082,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15742:15:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1126,
												"nodeType": "IfStatement",
												"src": "15738:516:0",
												"trueBody": {
													"id": 1125,
													"nodeType": "Block",
													"src": "15759:495:0",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1107,
																		"nodeType": "Block",
																		"src": "15876:184:0",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1100,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1096,
																						"name": "response",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1094,
																						"src": "15898:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1097,
																								"name": "IERC1155Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1385,
																								"src": "15910:16:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1385_$",
																									"typeString": "type(contract IERC1155Receiver)"
																								}
																							},
																							"id": 1098,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberName": "onERC1155Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1366,
																							"src": "15910:34:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC1155Receiver.onERC1155Received(address,address,uint256,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1099,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "15910:43:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "15898:55:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1106,
																				"nodeType": "IfStatement",
																				"src": "15894:152:0",
																				"trueBody": {
																					"id": 1105,
																					"nodeType": "Block",
																					"src": "15955:91:0",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"hexValue": "455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73",
																										"id": 1102,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "string",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "15984:42:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										},
																										"value": "ERC1155: ERC1155Receiver rejected tokens"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										}
																									],
																									"id": 1101,
																									"name": "revert",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [
																										4294967277,
																										4294967277
																									],
																									"referencedDeclaration": 4294967277,
																									"src": "15977:6:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																										"typeString": "function (string memory) pure"
																									}
																								},
																								"id": 1103,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "15977:50:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1104,
																							"nodeType": "ExpressionStatement",
																							"src": "15977:50:0"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1108,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1095,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1094,
																				"mutability": "mutable",
																				"name": "response",
																				"nameLocation": "15866:8:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 1108,
																				"src": "15859:15:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1093,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "15859:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "15858:17:0"
																	},
																	"src": "15850:210:0"
																},
																{
																	"block": {
																		"id": 1116,
																		"nodeType": "Block",
																		"src": "16095:47:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"id": 1113,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1110,
																							"src": "16120:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						],
																						"id": 1112,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "16113:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1114,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "16113:14:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1115,
																				"nodeType": "ExpressionStatement",
																				"src": "16113:14:0"
																			}
																		]
																	},
																	"errorName": "Error",
																	"id": 1117,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1111,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1110,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "16087:6:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 1117,
																				"src": "16073:20:0",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string"
																				},
																				"typeName": {
																					"id": 1109,
																					"name": "string",
																					"nodeType": "ElementaryTypeName",
																					"src": "16073:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_storage_ptr",
																						"typeString": "string"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "16072:22:0"
																	},
																	"src": "16061:81:0"
																},
																{
																	"block": {
																		"id": 1122,
																		"nodeType": "Block",
																		"src": "16149:95:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"hexValue": "455243313135353a207472616e7366657220746f206e6f6e2d45524331313535526563656976657220696d706c656d656e746572",
																							"id": 1119,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "16174:54:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d",
																								"typeString": "literal_string \"ERC1155: transfer to non-ERC1155Receiver implementer\""
																							},
																							"value": "ERC1155: transfer to non-ERC1155Receiver implementer"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_stringliteral_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d",
																								"typeString": "literal_string \"ERC1155: transfer to non-ERC1155Receiver implementer\""
																							}
																						],
																						"id": 1118,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "16167:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1120,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "16167:62:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1121,
																				"nodeType": "ExpressionStatement",
																				"src": "16167:62:0"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1123,
																	"nodeType": "TryCatchClause",
																	"src": "16143:101:0"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"id": 1087,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1067,
																		"src": "15816:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1088,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1069,
																		"src": "15826:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1089,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1073,
																		"src": "15832:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1090,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1075,
																		"src": "15836:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1091,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1077,
																		"src": "15844:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1084,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1071,
																				"src": "15794:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1083,
																			"name": "IERC1155Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1385,
																			"src": "15777:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1385_$",
																				"typeString": "type(contract IERC1155Receiver)"
																			}
																		},
																		"id": 1085,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "15777:20:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1155Receiver_$1385",
																			"typeString": "contract IERC1155Receiver"
																		}
																	},
																	"id": 1086,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "onERC1155Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1366,
																	"src": "15777:38:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1092,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15777:72:0",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1124,
															"nodeType": "TryStatement",
															"src": "15773:471:0"
														}
													]
												}
											}
										]
									},
									"id": 1128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_doSafeTransferAcceptanceCheck",
									"nameLocation": "15544:30:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1078,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1067,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "15592:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "15584:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1066,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15584:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1069,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "15618:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "15610:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1068,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15610:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1071,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15640:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "15632:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1070,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15632:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1073,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "15660:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "15652:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1072,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15652:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1075,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "15680:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "15672:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1074,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15672:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1077,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "15709:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "15696:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1076,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15696:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15574:145:0"
									},
									"returnParameters": {
										"id": 1079,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15728:0:0"
									},
									"scope": 1222,
									"src": "15535:725:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1192,
										"nodeType": "Block",
										"src": "16484:574:0",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1145,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1134,
															"src": "16498:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1146,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "isContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1418,
														"src": "16498:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 1147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16498:15:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1191,
												"nodeType": "IfStatement",
												"src": "16494:558:0",
												"trueBody": {
													"id": 1190,
													"nodeType": "Block",
													"src": "16515:537:0",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1172,
																		"nodeType": "Block",
																		"src": "16669:189:0",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1165,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1161,
																						"name": "response",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1159,
																						"src": "16691:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1162,
																								"name": "IERC1155Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1385,
																								"src": "16703:16:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1385_$",
																									"typeString": "type(contract IERC1155Receiver)"
																								}
																							},
																							"id": 1163,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberName": "onERC1155BatchReceived",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1384,
																							"src": "16703:39:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC1155Receiver.onERC1155BatchReceived(address,address,uint256[] calldata,uint256[] calldata,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1164,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "16703:48:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "16691:60:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1171,
																				"nodeType": "IfStatement",
																				"src": "16687:157:0",
																				"trueBody": {
																					"id": 1170,
																					"nodeType": "Block",
																					"src": "16753:91:0",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"hexValue": "455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73",
																										"id": 1167,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "string",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "16782:42:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										},
																										"value": "ERC1155: ERC1155Receiver rejected tokens"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										}
																									],
																									"id": 1166,
																									"name": "revert",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [
																										4294967277,
																										4294967277
																									],
																									"referencedDeclaration": 4294967277,
																									"src": "16775:6:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																										"typeString": "function (string memory) pure"
																									}
																								},
																								"id": 1168,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "16775:50:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1169,
																							"nodeType": "ExpressionStatement",
																							"src": "16775:50:0"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1173,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1160,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1159,
																				"mutability": "mutable",
																				"name": "response",
																				"nameLocation": "16646:8:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 1173,
																				"src": "16639:15:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1158,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "16639:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "16621:47:0"
																	},
																	"src": "16613:245:0"
																},
																{
																	"block": {
																		"id": 1181,
																		"nodeType": "Block",
																		"src": "16893:47:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"id": 1178,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1175,
																							"src": "16918:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						],
																						"id": 1177,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "16911:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1179,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "16911:14:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1180,
																				"nodeType": "ExpressionStatement",
																				"src": "16911:14:0"
																			}
																		]
																	},
																	"errorName": "Error",
																	"id": 1182,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1176,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1175,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "16885:6:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 1182,
																				"src": "16871:20:0",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string"
																				},
																				"typeName": {
																					"id": 1174,
																					"name": "string",
																					"nodeType": "ElementaryTypeName",
																					"src": "16871:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_storage_ptr",
																						"typeString": "string"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "16870:22:0"
																	},
																	"src": "16859:81:0"
																},
																{
																	"block": {
																		"id": 1187,
																		"nodeType": "Block",
																		"src": "16947:95:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"hexValue": "455243313135353a207472616e7366657220746f206e6f6e2d45524331313535526563656976657220696d706c656d656e746572",
																							"id": 1184,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "16972:54:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d",
																								"typeString": "literal_string \"ERC1155: transfer to non-ERC1155Receiver implementer\""
																							},
																							"value": "ERC1155: transfer to non-ERC1155Receiver implementer"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_stringliteral_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d",
																								"typeString": "literal_string \"ERC1155: transfer to non-ERC1155Receiver implementer\""
																							}
																						],
																						"id": 1183,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "16965:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1185,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "16965:62:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1186,
																				"nodeType": "ExpressionStatement",
																				"src": "16965:62:0"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1188,
																	"nodeType": "TryCatchClause",
																	"src": "16941:101:0"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"id": 1152,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1130,
																		"src": "16577:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1153,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1132,
																		"src": "16587:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1154,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1137,
																		"src": "16593:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"id": 1155,
																		"name": "amounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1140,
																		"src": "16598:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"id": 1156,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1142,
																		"src": "16607:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1149,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1134,
																				"src": "16550:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1148,
																			"name": "IERC1155Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1385,
																			"src": "16533:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1385_$",
																				"typeString": "type(contract IERC1155Receiver)"
																			}
																		},
																		"id": 1150,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "16533:20:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1155Receiver_$1385",
																			"typeString": "contract IERC1155Receiver"
																		}
																	},
																	"id": 1151,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "onERC1155BatchReceived",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1384,
																	"src": "16533:43:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1157,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16533:79:0",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1189,
															"nodeType": "TryStatement",
															"src": "16529:513:0"
														}
													]
												}
											}
										]
									},
									"id": 1193,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_doSafeBatchTransferAcceptanceCheck",
									"nameLocation": "16275:35:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1130,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "16328:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "16320:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1129,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16320:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1132,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16354:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "16346:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1131,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16346:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1134,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16376:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "16368:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16368:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1137,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "16405:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "16388:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1135,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "16388:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1136,
													"nodeType": "ArrayTypeName",
													"src": "16388:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1140,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "16435:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "16418:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1138,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "16418:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1139,
													"nodeType": "ArrayTypeName",
													"src": "16418:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1142,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "16465:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "16452:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1141,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16452:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16310:165:0"
									},
									"returnParameters": {
										"id": 1144,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16484:0:0"
									},
									"scope": 1222,
									"src": "16266:792:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1220,
										"nodeType": "Block",
										"src": "17148:109:0",
										"statements": [
											{
												"assignments": [
													1205
												],
												"declarations": [
													{
														"constant": false,
														"id": 1205,
														"mutability": "mutable",
														"name": "array",
														"nameLocation": "17175:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 1220,
														"src": "17158:22:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1203,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "17158:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1204,
															"nodeType": "ArrayTypeName",
															"src": "17158:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1211,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "31",
															"id": 1209,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17197:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1208,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "17183:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 1206,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "17187:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1207,
															"nodeType": "ArrayTypeName",
															"src": "17187:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 1210,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17183:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17158:41:0"
											},
											{
												"expression": {
													"id": 1216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1212,
															"name": "array",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1205,
															"src": "17209:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 1214,
														"indexExpression": {
															"hexValue": "30",
															"id": 1213,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17215:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "17209:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1215,
														"name": "element",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1195,
														"src": "17220:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17209:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1217,
												"nodeType": "ExpressionStatement",
												"src": "17209:18:0"
											},
											{
												"expression": {
													"id": 1218,
													"name": "array",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1205,
													"src": "17245:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 1200,
												"id": 1219,
												"nodeType": "Return",
												"src": "17238:12:0"
											}
										]
									},
									"id": 1221,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_asSingletonArray",
									"nameLocation": "17073:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1195,
												"mutability": "mutable",
												"name": "element",
												"nameLocation": "17099:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1221,
												"src": "17091:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1194,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17091:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17090:17:0"
									},
									"returnParameters": {
										"id": 1200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1199,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1221,
												"src": "17130:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1197,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "17130:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1198,
													"nodeType": "ArrayTypeName",
													"src": "17130:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17129:18:0"
									},
									"scope": 1222,
									"src": "17064:193:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1223,
							"src": "570:16689:0",
							"usedErrors": []
						}
					],
					"src": "109:17151:0"
				},
				"id": 0
			},
			"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"ast": {
					"absolutePath": "localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
					"exportedSymbols": {
						"IERC1155": [
							1344
						],
						"IERC165": [
							1788
						]
					},
					"id": 1345,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1224,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "110:23:1"
						},
						{
							"absolutePath": "localhost/.deps/npm/@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1225,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1345,
							"sourceUnit": 1789,
							"src": "135:47:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1227,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1788,
										"src": "372:7:1"
									},
									"id": 1228,
									"nodeType": "InheritanceSpecifier",
									"src": "372:7:1"
								}
							],
							"canonicalName": "IERC1155",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1226,
								"nodeType": "StructuredDocumentation",
								"src": "184:165:1",
								"text": " @dev Required interface of an ERC1155 compliant contract, as defined in the\n https://eips.ethereum.org/EIPS/eip-1155[EIP].\n _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 1344,
							"linearizedBaseContracts": [
								1344,
								1788
							],
							"name": "IERC1155",
							"nameLocation": "360:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1229,
										"nodeType": "StructuredDocumentation",
										"src": "386:121:1",
										"text": " @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."
									},
									"id": 1241,
									"name": "TransferSingle",
									"nameLocation": "518:14:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1231,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "549:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1241,
												"src": "533:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "533:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1233,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "575:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1241,
												"src": "559:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1232,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "559:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1235,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "597:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1241,
												"src": "581:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1234,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "581:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1237,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "609:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1241,
												"src": "601:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1236,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1239,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "621:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1241,
												"src": "613:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1238,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "613:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "532:95:1"
									},
									"src": "512:116:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1242,
										"nodeType": "StructuredDocumentation",
										"src": "634:144:1",
										"text": " @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n transfers."
									},
									"id": 1256,
									"name": "TransferBatch",
									"nameLocation": "789:13:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1244,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "828:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1256,
												"src": "812:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1243,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "812:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1246,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "862:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1256,
												"src": "846:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1245,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "846:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1248,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "892:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1256,
												"src": "876:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1247,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "876:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1251,
												"indexed": false,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "914:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 1256,
												"src": "904:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1249,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "904:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1250,
													"nodeType": "ArrayTypeName",
													"src": "904:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1254,
												"indexed": false,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "937:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 1256,
												"src": "927:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1252,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "927:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1253,
													"nodeType": "ArrayTypeName",
													"src": "927:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "802:147:1"
									},
									"src": "783:167:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1257,
										"nodeType": "StructuredDocumentation",
										"src": "956:147:1",
										"text": " @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n `approved`."
									},
									"id": 1265,
									"name": "ApprovalForAll",
									"nameLocation": "1114:14:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1259,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1145:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1265,
												"src": "1129:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1258,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1129:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1261,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1170:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1265,
												"src": "1154:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1154:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1263,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "1185:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1265,
												"src": "1180:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1262,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1180:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1128:66:1"
									},
									"src": "1108:87:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1266,
										"nodeType": "StructuredDocumentation",
										"src": "1201:343:1",
										"text": " @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n If an {URI} event was emitted for `id`, the standard\n https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n returned by {IERC1155MetadataURI-uri}."
									},
									"id": 1272,
									"name": "URI",
									"nameLocation": "1555:3:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1268,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1566:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1272,
												"src": "1559:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1267,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1559:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1270,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1589:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1272,
												"src": "1573:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1573:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1558:34:1"
									},
									"src": "1549:44:1"
								},
								{
									"documentation": {
										"id": 1273,
										"nodeType": "StructuredDocumentation",
										"src": "1599:173:1",
										"text": " @dev Returns the amount of tokens of token type `id` owned by `account`.\n Requirements:\n - `account` cannot be the zero address."
									},
									"functionSelector": "00fdd58e",
									"id": 1282,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1786:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1275,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1804:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1282,
												"src": "1796:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1274,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1796:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1277,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1821:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1282,
												"src": "1813:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1276,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1813:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1795:29:1"
									},
									"returnParameters": {
										"id": 1281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1280,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1282,
												"src": "1848:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1279,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1848:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1847:9:1"
									},
									"scope": 1344,
									"src": "1777:80:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1283,
										"nodeType": "StructuredDocumentation",
										"src": "1863:188:1",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 1295,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "2065:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1286,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "2099:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1295,
												"src": "2080:27:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1284,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2080:7:1",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1285,
													"nodeType": "ArrayTypeName",
													"src": "2080:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1289,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2128:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 1295,
												"src": "2109:22:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1287,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2109:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1288,
													"nodeType": "ArrayTypeName",
													"src": "2109:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2079:53:1"
									},
									"returnParameters": {
										"id": 1294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1293,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1295,
												"src": "2180:16:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1291,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2180:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1292,
													"nodeType": "ArrayTypeName",
													"src": "2180:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2179:18:1"
									},
									"scope": 1344,
									"src": "2056:142:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1296,
										"nodeType": "StructuredDocumentation",
										"src": "2204:248:1",
										"text": " @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the caller."
									},
									"functionSelector": "a22cb465",
									"id": 1303,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "2466:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1298,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2492:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1303,
												"src": "2484:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1297,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2484:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1300,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "2507:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1303,
												"src": "2502:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1299,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2502:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2483:33:1"
									},
									"returnParameters": {
										"id": 1302,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2525:0:1"
									},
									"scope": 1344,
									"src": "2457:69:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1304,
										"nodeType": "StructuredDocumentation",
										"src": "2532:135:1",
										"text": " @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n See {setApprovalForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 1313,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "2681:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1306,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2706:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1313,
												"src": "2698:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1305,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2698:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1308,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2723:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1313,
												"src": "2715:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1307,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2715:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2697:35:1"
									},
									"returnParameters": {
										"id": 1312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1311,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1313,
												"src": "2756:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1310,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2756:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2755:6:1"
									},
									"scope": 1344,
									"src": "2672:90:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1314,
										"nodeType": "StructuredDocumentation",
										"src": "2768:556:1",
										"text": " @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n - `from` must have a balance of tokens of type `id` of at least `amount`.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"functionSelector": "f242432a",
									"id": 1327,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3338:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1316,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3372:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "3364:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1315,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3364:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1318,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3394:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "3386:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1317,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3386:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1320,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3414:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "3406:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1319,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3406:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1322,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3434:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "3426:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1321,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3426:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1324,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3465:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "3450:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1323,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3450:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3354:121:1"
									},
									"returnParameters": {
										"id": 1326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3484:0:1"
									},
									"scope": 1344,
									"src": "3329:156:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1328,
										"nodeType": "StructuredDocumentation",
										"src": "3491:390:1",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `amounts` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"functionSelector": "2eb2c2d6",
									"id": 1343,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nameLocation": "3895:21:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1330,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3934:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1343,
												"src": "3926:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1329,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3926:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1332,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3956:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1343,
												"src": "3948:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1331,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3948:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1335,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "3987:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 1343,
												"src": "3968:22:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1333,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3968:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1334,
													"nodeType": "ArrayTypeName",
													"src": "3968:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1338,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "4019:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1343,
												"src": "4000:26:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1336,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4000:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1337,
													"nodeType": "ArrayTypeName",
													"src": "4000:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1340,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4051:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1343,
												"src": "4036:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1339,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4036:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3916:145:1"
									},
									"returnParameters": {
										"id": 1342,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4070:0:1"
									},
									"scope": 1344,
									"src": "3886:185:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1345,
							"src": "350:3723:1",
							"usedErrors": []
						}
					],
					"src": "110:3964:1"
				},
				"id": 1
			},
			"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"ast": {
					"absolutePath": "localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
					"exportedSymbols": {
						"IERC1155Receiver": [
							1385
						],
						"IERC165": [
							1788
						]
					},
					"id": 1386,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1346,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "118:23:2"
						},
						{
							"absolutePath": "localhost/.deps/npm/@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1347,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1386,
							"sourceUnit": 1789,
							"src": "143:47:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1349,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1788,
										"src": "262:7:2"
									},
									"id": 1350,
									"nodeType": "InheritanceSpecifier",
									"src": "262:7:2"
								}
							],
							"canonicalName": "IERC1155Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1348,
								"nodeType": "StructuredDocumentation",
								"src": "192:39:2",
								"text": " @dev _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 1385,
							"linearizedBaseContracts": [
								1385,
								1788
							],
							"name": "IERC1155Receiver",
							"nameLocation": "242:16:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1351,
										"nodeType": "StructuredDocumentation",
										"src": "276:826:2",
										"text": " @dev Handles the receipt of a single ERC1155 token type. This function is\n called at the end of a `safeTransferFrom` after the balance has been updated.\n NOTE: To accept the transfer, this must return\n `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n (i.e. 0xf23a6e61, or its own function selector).\n @param operator The address which initiated the transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param id The ID of the token being transferred\n @param value The amount of tokens being transferred\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "f23a6e61",
									"id": 1366,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155Received",
									"nameLocation": "1116:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1353,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1151:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1366,
												"src": "1143:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1352,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1143:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1355,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1177:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1366,
												"src": "1169:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1354,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1169:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1357,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1199:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1366,
												"src": "1191:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1356,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1191:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1359,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1219:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1366,
												"src": "1211:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1358,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1361,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1249:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1366,
												"src": "1234:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1360,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1234:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1133:126:2"
									},
									"returnParameters": {
										"id": 1365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1364,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1366,
												"src": "1278:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1363,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1278:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1277:8:2"
									},
									"scope": 1385,
									"src": "1107:179:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1367,
										"nodeType": "StructuredDocumentation",
										"src": "1292:994:2",
										"text": " @dev Handles the receipt of a multiple ERC1155 token types. This function\n is called at the end of a `safeBatchTransferFrom` after the balances have\n been updated.\n NOTE: To accept the transfer(s), this must return\n `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n (i.e. 0xbc197c81, or its own function selector).\n @param operator The address which initiated the batch transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param ids An array containing ids of each token being transferred (order and length must match values array)\n @param values An array containing amounts of each token being transferred (order and length must match ids array)\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "bc197c81",
									"id": 1384,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155BatchReceived",
									"nameLocation": "2300:22:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1369,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2340:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1384,
												"src": "2332:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1368,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2332:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1371,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2366:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1384,
												"src": "2358:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1370,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2358:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1374,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2399:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1384,
												"src": "2380:22:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1372,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2380:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1373,
													"nodeType": "ArrayTypeName",
													"src": "2380:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1377,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "2431:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1384,
												"src": "2412:25:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1375,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2412:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1376,
													"nodeType": "ArrayTypeName",
													"src": "2412:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1379,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2462:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1384,
												"src": "2447:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1378,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2447:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2322:150:2"
									},
									"returnParameters": {
										"id": 1383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1382,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1384,
												"src": "2491:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1381,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2491:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2490:8:2"
									},
									"scope": 1385,
									"src": "2291:208:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1386,
							"src": "232:2269:2",
							"usedErrors": []
						}
					],
					"src": "118:2384:2"
				},
				"id": 2
			},
			"localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
				"ast": {
					"absolutePath": "localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
					"exportedSymbols": {
						"IERC1155": [
							1344
						],
						"IERC1155MetadataURI": [
							1400
						],
						"IERC165": [
							1788
						]
					},
					"id": 1401,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1387,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "117:23:3"
						},
						{
							"absolutePath": "localhost/.deps/npm/@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
							"file": "../IERC1155.sol",
							"id": 1388,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1401,
							"sourceUnit": 1345,
							"src": "142:25:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1390,
										"name": "IERC1155",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1344,
										"src": "397:8:3"
									},
									"id": 1391,
									"nodeType": "InheritanceSpecifier",
									"src": "397:8:3"
								}
							],
							"canonicalName": "IERC1155MetadataURI",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1389,
								"nodeType": "StructuredDocumentation",
								"src": "169:194:3",
								"text": " @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\n _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 1400,
							"linearizedBaseContracts": [
								1400,
								1344,
								1788
							],
							"name": "IERC1155MetadataURI",
							"nameLocation": "374:19:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1392,
										"nodeType": "StructuredDocumentation",
										"src": "412:192:3",
										"text": " @dev Returns the URI for token type `id`.\n If the `\\{id\\}` substring is present in the URI, it must be replaced by\n clients with the actual token type ID."
									},
									"functionSelector": "0e89341c",
									"id": 1399,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "uri",
									"nameLocation": "618:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1394,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "630:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1399,
												"src": "622:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1393,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "622:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "621:12:3"
									},
									"returnParameters": {
										"id": 1398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1397,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1399,
												"src": "657:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1396,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "657:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:15:3"
									},
									"scope": 1400,
									"src": "609:63:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1401,
							"src": "364:310:3",
							"usedErrors": []
						}
					],
					"src": "117:558:3"
				},
				"id": 3
			},
			"localhost/.deps/npm/@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "localhost/.deps/npm/@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1730
						]
					},
					"id": 1731,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1402,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1403,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:4",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1730,
							"linearizedBaseContracts": [
								1730
							],
							"name": "Address",
							"nameLocation": "202:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1417,
										"nodeType": "Block",
										"src": "1241:254:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1411,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1406,
																"src": "1465:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1412,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1465:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1413,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1465:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1414,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1487:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1465:23:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1410,
												"id": 1416,
												"nodeType": "Return",
												"src": "1458:30:4"
											}
										]
									},
									"documentation": {
										"id": 1404,
										"nodeType": "StructuredDocumentation",
										"src": "216:954:4",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 1418,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1184:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1406,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1203:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1418,
												"src": "1195:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1405,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1195:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1194:17:4"
									},
									"returnParameters": {
										"id": 1410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1409,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1418,
												"src": "1235:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1408,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1235:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1234:6:4"
									},
									"scope": 1730,
									"src": "1175:320:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1451,
										"nodeType": "Block",
										"src": "2483:241:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1433,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1429,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2509:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1730",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1730",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1428,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2501:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1427,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2501:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1430,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2501:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1431,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2501:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1432,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1423,
																"src": "2526:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2501:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 1434,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2534:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 1426,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2493:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2493:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1436,
												"nodeType": "ExpressionStatement",
												"src": "2493:73:4"
											},
											{
												"assignments": [
													1438,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1438,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2583:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 1451,
														"src": "2578:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1437,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2578:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1445,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1443,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2626:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1439,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1421,
																"src": "2596:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1440,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2596:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1442,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1441,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1423,
																"src": "2618:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2596:29:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2596:33:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2577:52:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1447,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1438,
															"src": "2647:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 1448,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2656:60:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 1446,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2639:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2639:78:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1450,
												"nodeType": "ExpressionStatement",
												"src": "2639:78:4"
											}
										]
									},
									"documentation": {
										"id": 1419,
										"nodeType": "StructuredDocumentation",
										"src": "1501:906:4",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1452,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2421:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1421,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2447:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 1452,
												"src": "2431:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1420,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2431:15:4",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1423,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2466:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1452,
												"src": "2458:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1422,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2458:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:43:4"
									},
									"returnParameters": {
										"id": 1425,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2483:0:4"
									},
									"scope": 1730,
									"src": "2412:312:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1469,
										"nodeType": "Block",
										"src": "3555:96:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1463,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1455,
															"src": "3594:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1464,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1457,
															"src": "3602:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1465,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3608:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1466,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3611:32:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 1462,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1510,
															1554
														],
														"referencedDeclaration": 1554,
														"src": "3572:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1467,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3572:72:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1461,
												"id": 1468,
												"nodeType": "Return",
												"src": "3565:79:4"
											}
										]
									},
									"documentation": {
										"id": 1453,
										"nodeType": "StructuredDocumentation",
										"src": "2730:731:4",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 1470,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3475:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1455,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3496:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1470,
												"src": "3488:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3488:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1457,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3517:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1470,
												"src": "3504:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1456,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3504:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3487:35:4"
									},
									"returnParameters": {
										"id": 1461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1470,
												"src": "3541:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1459,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3541:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3540:14:4"
									},
									"scope": 1730,
									"src": "3466:185:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1489,
										"nodeType": "Block",
										"src": "4020:76:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1483,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1473,
															"src": "4059:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1484,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1475,
															"src": "4067:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1485,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4073:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1486,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1477,
															"src": "4076:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1482,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1510,
															1554
														],
														"referencedDeclaration": 1554,
														"src": "4037:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1487,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4037:52:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1481,
												"id": 1488,
												"nodeType": "Return",
												"src": "4030:59:4"
											}
										]
									},
									"documentation": {
										"id": 1471,
										"nodeType": "StructuredDocumentation",
										"src": "3657:211:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1490,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3882:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1478,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1473,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3912:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1490,
												"src": "3904:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1472,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3904:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1475,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3941:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1490,
												"src": "3928:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1474,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3928:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1477,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3969:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1490,
												"src": "3955:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1476,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3955:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3894:93:4"
									},
									"returnParameters": {
										"id": 1481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1480,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1490,
												"src": "4006:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1479,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4006:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4005:14:4"
									},
									"scope": 1730,
									"src": "3873:223:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1509,
										"nodeType": "Block",
										"src": "4601:111:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1503,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1493,
															"src": "4640:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1504,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1495,
															"src": "4648:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1505,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1497,
															"src": "4654:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 1506,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4661:43:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 1502,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1510,
															1554
														],
														"referencedDeclaration": 1554,
														"src": "4618:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1507,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4618:87:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1501,
												"id": 1508,
												"nodeType": "Return",
												"src": "4611:94:4"
											}
										]
									},
									"documentation": {
										"id": 1491,
										"nodeType": "StructuredDocumentation",
										"src": "4102:351:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 1510,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4467:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1493,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4506:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1510,
												"src": "4498:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1492,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4498:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1495,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4535:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1510,
												"src": "4522:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1494,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4522:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1497,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4557:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1510,
												"src": "4549:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1496,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4549:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4488:80:4"
									},
									"returnParameters": {
										"id": 1501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1500,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1510,
												"src": "4587:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1499,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4587:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4586:14:4"
									},
									"scope": 1730,
									"src": "4458:254:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1553,
										"nodeType": "Block",
										"src": "5139:267:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1531,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1527,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5165:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1730",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1730",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1526,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5157:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1525,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5157:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1528,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5157:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1529,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5157:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1530,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1517,
																"src": "5182:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5157:30:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 1532,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5189:40:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 1524,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5149:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1533,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5149:81:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1534,
												"nodeType": "ExpressionStatement",
												"src": "5149:81:4"
											},
											{
												"assignments": [
													1536,
													1538
												],
												"declarations": [
													{
														"constant": false,
														"id": 1536,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5246:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 1553,
														"src": "5241:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1535,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5241:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1538,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5268:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 1553,
														"src": "5255:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1537,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5255:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1545,
												"initialValue": {
													"arguments": [
														{
															"id": 1543,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1515,
															"src": "5308:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1539,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1513,
																"src": "5282:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1540,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5282:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1542,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1541,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1517,
																"src": "5301:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5282:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5282:31:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5240:73:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1547,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1513,
															"src": "5357:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1548,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1536,
															"src": "5365:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1549,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1538,
															"src": "5374:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1550,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1519,
															"src": "5386:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1546,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1685,
														"src": "5330:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1551,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5330:69:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1523,
												"id": 1552,
												"nodeType": "Return",
												"src": "5323:76:4"
											}
										]
									},
									"documentation": {
										"id": 1511,
										"nodeType": "StructuredDocumentation",
										"src": "4718:237:4",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1554,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4969:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1513,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5008:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1554,
												"src": "5000:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1512,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5000:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1515,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5037:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1554,
												"src": "5024:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1514,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5024:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1517,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5059:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1554,
												"src": "5051:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1516,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5051:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1519,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5088:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1554,
												"src": "5074:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1518,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5074:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4990:116:4"
									},
									"returnParameters": {
										"id": 1523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1522,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1554,
												"src": "5125:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1521,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5125:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5124:14:4"
									},
									"scope": 1730,
									"src": "4960:446:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1570,
										"nodeType": "Block",
										"src": "5683:97:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1565,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1557,
															"src": "5719:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1566,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1559,
															"src": "5727:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 1567,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5733:39:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 1564,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1571,
															1600
														],
														"referencedDeclaration": 1600,
														"src": "5700:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1568,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5700:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1563,
												"id": 1569,
												"nodeType": "Return",
												"src": "5693:80:4"
											}
										]
									},
									"documentation": {
										"id": 1555,
										"nodeType": "StructuredDocumentation",
										"src": "5412:166:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1571,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5592:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1560,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1557,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5619:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1571,
												"src": "5611:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1556,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5611:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1559,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5640:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1571,
												"src": "5627:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1558,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5627:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5610:35:4"
									},
									"returnParameters": {
										"id": 1563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1562,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1571,
												"src": "5669:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1561,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5669:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5668:14:4"
									},
									"scope": 1730,
									"src": "5583:197:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1599,
										"nodeType": "Block",
										"src": "6122:168:4",
										"statements": [
											{
												"assignments": [
													1584,
													1586
												],
												"declarations": [
													{
														"constant": false,
														"id": 1584,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6138:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 1599,
														"src": "6133:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1583,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6133:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1586,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6160:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 1599,
														"src": "6147:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1585,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6147:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1591,
												"initialValue": {
													"arguments": [
														{
															"id": 1589,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1576,
															"src": "6192:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1587,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1574,
															"src": "6174:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1588,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6174:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6174:23:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6132:65:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1593,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1574,
															"src": "6241:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1594,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1584,
															"src": "6249:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1595,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1586,
															"src": "6258:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1596,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1578,
															"src": "6270:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1592,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1685,
														"src": "6214:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1597,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6214:69:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1582,
												"id": 1598,
												"nodeType": "Return",
												"src": "6207:76:4"
											}
										]
									},
									"documentation": {
										"id": 1572,
										"nodeType": "StructuredDocumentation",
										"src": "5786:173:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1600,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5973:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1574,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6009:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1600,
												"src": "6001:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1573,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6001:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1576,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6038:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1600,
												"src": "6025:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1575,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6025:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1578,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6066:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1600,
												"src": "6052:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1577,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6052:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5991:93:4"
									},
									"returnParameters": {
										"id": 1582,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1581,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1600,
												"src": "6108:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1580,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6108:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6107:14:4"
									},
									"scope": 1730,
									"src": "5964:326:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1616,
										"nodeType": "Block",
										"src": "6566:101:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1611,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1603,
															"src": "6604:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1612,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1605,
															"src": "6612:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 1613,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6618:41:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 1610,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1617,
															1646
														],
														"referencedDeclaration": 1646,
														"src": "6583:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1614,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6583:77:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1609,
												"id": 1615,
												"nodeType": "Return",
												"src": "6576:84:4"
											}
										]
									},
									"documentation": {
										"id": 1601,
										"nodeType": "StructuredDocumentation",
										"src": "6296:168:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1617,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6478:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1606,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1603,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6507:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1617,
												"src": "6499:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1602,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6499:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1605,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6528:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1617,
												"src": "6515:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1604,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6515:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6498:35:4"
									},
									"returnParameters": {
										"id": 1609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1608,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1617,
												"src": "6552:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1607,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6552:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6551:14:4"
									},
									"scope": 1730,
									"src": "6469:198:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1645,
										"nodeType": "Block",
										"src": "7008:170:4",
										"statements": [
											{
												"assignments": [
													1630,
													1632
												],
												"declarations": [
													{
														"constant": false,
														"id": 1630,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7024:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 1645,
														"src": "7019:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1629,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7019:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1632,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7046:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 1645,
														"src": "7033:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1631,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7033:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1637,
												"initialValue": {
													"arguments": [
														{
															"id": 1635,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1622,
															"src": "7080:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1633,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1620,
															"src": "7060:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1634,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7060:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7060:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7018:67:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1639,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1620,
															"src": "7129:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1640,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1630,
															"src": "7137:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1641,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1632,
															"src": "7146:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1642,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1624,
															"src": "7158:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1638,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1685,
														"src": "7102:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1643,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7102:69:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1628,
												"id": 1644,
												"nodeType": "Return",
												"src": "7095:76:4"
											}
										]
									},
									"documentation": {
										"id": 1618,
										"nodeType": "StructuredDocumentation",
										"src": "6673:175:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1646,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6862:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1625,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1620,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6900:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1646,
												"src": "6892:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1619,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6892:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1622,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6929:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1646,
												"src": "6916:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1621,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6916:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1624,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6957:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1646,
												"src": "6943:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1623,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6943:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6882:93:4"
									},
									"returnParameters": {
										"id": 1628,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1627,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1646,
												"src": "6994:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1626,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6994:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6993:14:4"
									},
									"scope": 1730,
									"src": "6853:325:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1684,
										"nodeType": "Block",
										"src": "7660:434:4",
										"statements": [
											{
												"condition": {
													"id": 1660,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1651,
													"src": "7674:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1682,
													"nodeType": "Block",
													"src": "8030:58:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1678,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1653,
																		"src": "8052:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 1679,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1655,
																		"src": "8064:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1677,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1729,
																	"src": "8044:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 1680,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8044:33:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1681,
															"nodeType": "ExpressionStatement",
															"src": "8044:33:4"
														}
													]
												},
												"id": 1683,
												"nodeType": "IfStatement",
												"src": "7670:418:4",
												"trueBody": {
													"id": 1676,
													"nodeType": "Block",
													"src": "7683:341:4",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1664,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1661,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1653,
																		"src": "7701:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1662,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7701:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1663,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7722:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7701:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1673,
															"nodeType": "IfStatement",
															"src": "7697:286:4",
															"trueBody": {
																"id": 1672,
																"nodeType": "Block",
																"src": "7725:258:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 1667,
																							"name": "target",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1649,
																							"src": "7927:6:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 1666,
																						"name": "isContract",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1418,
																						"src": "7916:10:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																							"typeString": "function (address) view returns (bool)"
																						}
																					},
																					"id": 1668,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "7916:18:4",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																					"id": 1669,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "7936:31:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					},
																					"value": "Address: call to non-contract"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					}
																				],
																				"id": 1665,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "7908:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 1670,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7908:60:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1671,
																		"nodeType": "ExpressionStatement",
																		"src": "7908:60:4"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1674,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1653,
																"src": "8003:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1659,
															"id": 1675,
															"nodeType": "Return",
															"src": "7996:17:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1647,
										"nodeType": "StructuredDocumentation",
										"src": "7184:277:4",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"
									},
									"id": 1685,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "7475:26:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1656,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1649,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7519:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1685,
												"src": "7511:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1648,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7511:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1651,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7540:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1685,
												"src": "7535:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1650,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7535:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1653,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7570:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 1685,
												"src": "7557:23:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1652,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7557:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1655,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7604:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1685,
												"src": "7590:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1654,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7590:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7501:121:4"
									},
									"returnParameters": {
										"id": 1659,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1658,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1685,
												"src": "7646:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1657,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7646:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7645:14:4"
									},
									"scope": 1730,
									"src": "7466:628:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1708,
										"nodeType": "Block",
										"src": "8475:135:4",
										"statements": [
											{
												"condition": {
													"id": 1697,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1688,
													"src": "8489:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1706,
													"nodeType": "Block",
													"src": "8546:58:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1702,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1690,
																		"src": "8568:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 1703,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1692,
																		"src": "8580:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1701,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1729,
																	"src": "8560:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 1704,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8560:33:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1705,
															"nodeType": "ExpressionStatement",
															"src": "8560:33:4"
														}
													]
												},
												"id": 1707,
												"nodeType": "IfStatement",
												"src": "8485:119:4",
												"trueBody": {
													"id": 1700,
													"nodeType": "Block",
													"src": "8498:42:4",
													"statements": [
														{
															"expression": {
																"id": 1698,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1690,
																"src": "8519:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1696,
															"id": 1699,
															"nodeType": "Return",
															"src": "8512:17:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1686,
										"nodeType": "StructuredDocumentation",
										"src": "8100:210:4",
										"text": " @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"
									},
									"id": 1709,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "8324:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1693,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1688,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "8355:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1709,
												"src": "8350:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1687,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8350:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1690,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8385:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 1709,
												"src": "8372:23:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1689,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8372:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1692,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8419:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1709,
												"src": "8405:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1691,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8405:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8340:97:4"
									},
									"returnParameters": {
										"id": 1696,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1695,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1709,
												"src": "8461:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1694,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8461:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8460:14:4"
									},
									"scope": 1730,
									"src": "8315:295:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1728,
										"nodeType": "Block",
										"src": "8699:457:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1719,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1716,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1711,
															"src": "8775:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1717,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "8775:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1718,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8795:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8775:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1726,
													"nodeType": "Block",
													"src": "9105:45:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1723,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1713,
																		"src": "9126:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1722,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "9119:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 1724,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9119:20:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1725,
															"nodeType": "ExpressionStatement",
															"src": "9119:20:4"
														}
													]
												},
												"id": 1727,
												"nodeType": "IfStatement",
												"src": "8771:379:4",
												"trueBody": {
													"id": 1721,
													"nodeType": "Block",
													"src": "8798:301:4",
													"statements": [
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "8956:133:4",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "8974:40:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nodeType": "YulIdentifier",
																					"src": "9003:10:4"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "8997:5:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8997:17:4"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nodeType": "YulTypedName",
																				"src": "8978:15:4",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "9042:2:4",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nodeType": "YulIdentifier",
																							"src": "9046:10:4"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "9038:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9038:19:4"
																				},
																				{
																					"name": "returndata_size",
																					"nodeType": "YulIdentifier",
																					"src": "9059:15:4"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9031:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9031:44:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9031:44:4"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "london",
															"externalReferences": [
																{
																	"declaration": 1711,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9003:10:4",
																	"valueSize": 1
																},
																{
																	"declaration": 1711,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9046:10:4",
																	"valueSize": 1
																}
															],
															"id": 1720,
															"nodeType": "InlineAssembly",
															"src": "8947:142:4"
														}
													]
												}
											}
										]
									},
									"id": 1729,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "8625:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1714,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1711,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8646:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 1729,
												"src": "8633:23:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1710,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8633:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1713,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8672:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1729,
												"src": "8658:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1712,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8658:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8632:53:4"
									},
									"returnParameters": {
										"id": 1715,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8699:0:4"
									},
									"scope": 1730,
									"src": "8616:540:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1731,
							"src": "194:8964:4",
							"usedErrors": []
						}
					],
					"src": "101:9058:4"
				},
				"id": 4
			},
			"localhost/.deps/npm/@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "localhost/.deps/npm/@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1752
						]
					},
					"id": 1753,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1732,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1733,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1752,
							"linearizedBaseContracts": [
								1752
							],
							"name": "Context",
							"nameLocation": "626:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1741,
										"nodeType": "Block",
										"src": "702:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1738,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1739,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1737,
												"id": 1740,
												"nodeType": "Return",
												"src": "712:17:5"
											}
										]
									},
									"id": 1742,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1734,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:5"
									},
									"returnParameters": {
										"id": 1737,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1736,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1742,
												"src": "693:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1735,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:5"
									},
									"scope": 1752,
									"src": "640:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1750,
										"nodeType": "Block",
										"src": "809:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1747,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1748,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1746,
												"id": 1749,
												"nodeType": "Return",
												"src": "819:15:5"
											}
										]
									},
									"id": 1751,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1743,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:5"
									},
									"returnParameters": {
										"id": 1746,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1745,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1751,
												"src": "793:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1744,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:5"
									},
									"scope": 1752,
									"src": "742:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1753,
							"src": "608:235:5",
							"usedErrors": []
						}
					],
					"src": "86:758:5"
				},
				"id": 5
			},
			"localhost/.deps/npm/@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "localhost/.deps/npm/@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1776
						],
						"IERC165": [
							1788
						]
					},
					"id": 1777,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1754,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "99:23:6"
						},
						{
							"absolutePath": "localhost/.deps/npm/@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1755,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1777,
							"sourceUnit": 1789,
							"src": "124:23:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1757,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1788,
										"src": "754:7:6"
									},
									"id": 1758,
									"nodeType": "InheritanceSpecifier",
									"src": "754:7:6"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1756,
								"nodeType": "StructuredDocumentation",
								"src": "149:576:6",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 1776,
							"linearizedBaseContracts": [
								1776,
								1788
							],
							"name": "ERC165",
							"nameLocation": "744:6:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1787
									],
									"body": {
										"id": 1774,
										"nodeType": "Block",
										"src": "920:64:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1772,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1767,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1761,
														"src": "937:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1769,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1788,
																	"src": "957:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1788_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1788_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1768,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "952:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1770,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "952:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1788",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1771,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "952:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "937:40:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1766,
												"id": 1773,
												"nodeType": "Return",
												"src": "930:47:6"
											}
										]
									},
									"documentation": {
										"id": 1759,
										"nodeType": "StructuredDocumentation",
										"src": "768:56:6",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1775,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "838:17:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1763,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "896:8:6"
									},
									"parameters": {
										"id": 1762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1761,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "863:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1775,
												"src": "856:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1760,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "856:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "855:20:6"
									},
									"returnParameters": {
										"id": 1766,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1765,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1775,
												"src": "914:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1764,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "914:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "913:6:6"
									},
									"scope": 1776,
									"src": "829:155:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1777,
							"src": "726:260:6",
							"usedErrors": []
						}
					],
					"src": "99:888:6"
				},
				"id": 6
			},
			"localhost/.deps/npm/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "localhost/.deps/npm/@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1788
						]
					},
					"id": 1789,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1778,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1779,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:7",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1788,
							"linearizedBaseContracts": [
								1788
							],
							"name": "IERC165",
							"nameLocation": "415:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1780,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:7",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1787,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1783,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1782,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1787,
												"src": "801:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1781,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:7"
									},
									"returnParameters": {
										"id": 1786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1785,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1787,
												"src": "844:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1784,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:7"
									},
									"scope": 1788,
									"src": "774:76:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1789,
							"src": "405:447:7",
							"usedErrors": []
						}
					],
					"src": "100:753:7"
				},
				"id": 7
			}
		}
	}
}